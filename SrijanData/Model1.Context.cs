//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SrijanData
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ddp_fdiFinalEntities : DbContext
    {
        public ddp_fdiFinalEntities()
            : base("name=ddp_fdiFinalEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<tbl_book_orders> tbl_book_orders { get; set; }
        public virtual DbSet<tbl_mst_Category> tbl_mst_Category { get; set; }
        public virtual DbSet<tbl_mst_Company> tbl_mst_Company { get; set; }
        public virtual DbSet<tbl_mst_Country> tbl_mst_Country { get; set; }
        public virtual DbSet<tbl_mst_Designation> tbl_mst_Designation { get; set; }
        public virtual DbSet<tbl_mst_Factory> tbl_mst_Factory { get; set; }
        public virtual DbSet<tbl_mst_FeedBack> tbl_mst_FeedBack { get; set; }
        public virtual DbSet<tbl_mst_FinancialYear> tbl_mst_FinancialYear { get; set; }
        public virtual DbSet<tbl_mst_HelpDesk> tbl_mst_HelpDesk { get; set; }
        public virtual DbSet<tbl_mst_HelpDeskStatus> tbl_mst_HelpDeskStatus { get; set; }
        public virtual DbSet<tbl_mst_HelpDeskUser> tbl_mst_HelpDeskUser { get; set; }
        public virtual DbSet<tbl_mst_ImpNews> tbl_mst_ImpNews { get; set; }
        public virtual DbSet<tbl_mst_InterestArea> tbl_mst_InterestArea { get; set; }
        public virtual DbSet<tbl_mst_MainProduct> tbl_mst_MainProduct { get; set; }
        public virtual DbSet<tbl_mst_Menu> tbl_mst_Menu { get; set; }
        public virtual DbSet<tbl_mst_MenuVendor> tbl_mst_MenuVendor { get; set; }
        public virtual DbSet<tbl_mst_NicCode> tbl_mst_NicCode { get; set; }
        public virtual DbSet<tbl_mst_NodalOfficer> tbl_mst_NodalOfficer { get; set; }
        public virtual DbSet<tbl_mst_Portal> tbl_mst_Portal { get; set; }
        public virtual DbSet<tbl_mst_ProgressReport> tbl_mst_ProgressReport { get; set; }
        public virtual DbSet<tbl_mst_RequestInfo> tbl_mst_RequestInfo { get; set; }
        public virtual DbSet<tbl_mst_SearchFilter> tbl_mst_SearchFilter { get; set; }
        public virtual DbSet<tbl_mst_State> tbl_mst_State { get; set; }
        public virtual DbSet<tbl_mst_SubCategory> tbl_mst_SubCategory { get; set; }
        public virtual DbSet<tbl_mst_Subject> tbl_mst_Subject { get; set; }
        public virtual DbSet<tbl_mst_Unit> tbl_mst_Unit { get; set; }
        public virtual DbSet<tbl_mst_VendorCategory> tbl_mst_VendorCategory { get; set; }
        public virtual DbSet<tbl_mst_VendorCheckListCertificate> tbl_mst_VendorCheckListCertificate { get; set; }
        public virtual DbSet<tbl_mst_VendorGeneralInfo> tbl_mst_VendorGeneralInfo { get; set; }
        public virtual DbSet<tbl_mst_VendorNodal> tbl_mst_VendorNodal { get; set; }
        public virtual DbSet<tbl_mst_VendorRegistration> tbl_mst_VendorRegistration { get; set; }
        public virtual DbSet<tbl_trn_CompanyCategoryRelation> tbl_trn_CompanyCategoryRelation { get; set; }
        public virtual DbSet<tbl_trn_FDI> tbl_trn_FDI { get; set; }
        public virtual DbSet<tbl_trn_FeedBack> tbl_trn_FeedBack { get; set; }
        public virtual DbSet<tbl_trn_HelpDeskTrack> tbl_trn_HelpDeskTrack { get; set; }
        public virtual DbSet<tbl_trn_Image> tbl_trn_Image { get; set; }
        public virtual DbSet<tbl_trn_ItemCodeDisplay> tbl_trn_ItemCodeDisplay { get; set; }
        public virtual DbSet<tbl_trn_Log> tbl_trn_Log { get; set; }
        public virtual DbSet<tbl_trn_LoginManage> tbl_trn_LoginManage { get; set; }
        public virtual DbSet<tbl_trn_LogSuccessUpdate> tbl_trn_LogSuccessUpdate { get; set; }
        public virtual DbSet<tbl_trn_ProdLog> tbl_trn_ProdLog { get; set; }
        public virtual DbSet<tbl_trn_ProdQtyPrice> tbl_trn_ProdQtyPrice { get; set; }
        public virtual DbSet<tbl_trn_ProductChangesStatus> tbl_trn_ProductChangesStatus { get; set; }
        public virtual DbSet<tbl_trn_ProductFIIG> tbl_trn_ProductFIIG { get; set; }
        public virtual DbSet<tbl_trn_ProductFilterSearchTemp> tbl_trn_ProductFilterSearchTemp { get; set; }
        public virtual DbSet<tbl_trn_ProductInformation> tbl_trn_ProductInformation { get; set; }
        public virtual DbSet<tbl_trn_RequestInfo> tbl_trn_RequestInfo { get; set; }
        public virtual DbSet<tbl_trn_SubSubject> tbl_trn_SubSubject { get; set; }
        public virtual DbSet<tbl_trn_Updatetemptabletime> tbl_trn_Updatetemptabletime { get; set; }
        public virtual DbSet<tbl_trn_VendorAreaDetails> tbl_trn_VendorAreaDetails { get; set; }
        public virtual DbSet<tbl_trn_VendorAuthDis> tbl_trn_VendorAuthDis { get; set; }
        public virtual DbSet<tbl_trn_VendorCertificateData> tbl_trn_VendorCertificateData { get; set; }
        public virtual DbSet<tbl_trn_VendorCompInfo> tbl_trn_VendorCompInfo { get; set; }
        public virtual DbSet<tbl_trn_VendorDetailofDefence> tbl_trn_VendorDetailofDefence { get; set; }
        public virtual DbSet<tbl_trn_VendorEmpDetail> tbl_trn_VendorEmpDetail { get; set; }
        public virtual DbSet<tbl_trn_VendorFinacialInfo> tbl_trn_VendorFinacialInfo { get; set; }
        public virtual DbSet<tbl_trn_VendorFinancialBank> tbl_trn_VendorFinancialBank { get; set; }
        public virtual DbSet<tbl_trn_VendorGeneralInfoMultiGrid> tbl_trn_VendorGeneralInfoMultiGrid { get; set; }
        public virtual DbSet<tbl_trn_VendorGovtApprovedCertificate> tbl_trn_VendorGovtApprovedCertificate { get; set; }
        public virtual DbSet<tbl_trn_VendorJointVenture> tbl_trn_VendorJointVenture { get; set; }
        public virtual DbSet<tbl_trn_VendorManuFac> tbl_trn_VendorManuFac { get; set; }
        public virtual DbSet<tbl_trn_VendorOEM> tbl_trn_VendorOEM { get; set; }
        public virtual DbSet<tbl_trn_VendorOutsourceFac> tbl_trn_VendorOutsourceFac { get; set; }
        public virtual DbSet<tbl_trn_VendorPlantorMachine> tbl_trn_VendorPlantorMachine { get; set; }
        public virtual DbSet<tbl_trn_VendorProducedSupplied> tbl_trn_VendorProducedSupplied { get; set; }
        public virtual DbSet<tbl_trn_VendorRawMaterial> tbl_trn_VendorRawMaterial { get; set; }
        public virtual DbSet<tbl_trn_VendorRegistrationMultiImage> tbl_trn_VendorRegistrationMultiImage { get; set; }
        public virtual DbSet<tbl_trn_VendorServiceDetails> tbl_trn_VendorServiceDetails { get; set; }
        public virtual DbSet<tbl_trn_VendorSubCategory> tbl_trn_VendorSubCategory { get; set; }
        public virtual DbSet<tbl_trn_VendorTestFacility> tbl_trn_VendorTestFacility { get; set; }
        public virtual DbSet<discipline_masters> discipline_masters { get; set; }
        public virtual DbSet<lab_details> lab_details { get; set; }
        public virtual DbSet<location> locations { get; set; }
        public virtual DbSet<material> materials { get; set; }
        public virtual DbSet<migration> migrations { get; set; }
        public virtual DbSet<n_o_s> n_o_s { get; set; }
        public virtual DbSet<order_histories> order_histories { get; set; }
        public virtual DbSet<organisation> organisations { get; set; }
        public virtual DbSet<tbl_ExceptionLoggingToDataBase> tbl_ExceptionLoggingToDataBase { get; set; }
        public virtual DbSet<tbl_mst_AddmoreVendor> tbl_mst_AddmoreVendor { get; set; }
        public virtual DbSet<tbl_mst_CityMaster> tbl_mst_CityMaster { get; set; }
        public virtual DbSet<tbl_mst_GetAnalyticsInfo> tbl_mst_GetAnalyticsInfo { get; set; }
        public virtual DbSet<tbl_mst_NodalOfficerLogin> tbl_mst_NodalOfficerLogin { get; set; }
        public virtual DbSet<tbl_mst_PinMaster> tbl_mst_PinMaster { get; set; }
        public virtual DbSet<tbl_mst_StateMaster> tbl_mst_StateMaster { get; set; }
        public virtual DbSet<tbl_mst_status_reason> tbl_mst_status_reason { get; set; }
        public virtual DbSet<tbl_mst_StoreIPAddress> tbl_mst_StoreIPAddress { get; set; }
        public virtual DbSet<tbl_mst_UserLogin> tbl_mst_UserLogin { get; set; }
        public virtual DbSet<tbl_status_master> tbl_status_master { get; set; }
        public virtual DbSet<tbl_trn_CheckListDetail> tbl_trn_CheckListDetail { get; set; }
        public virtual DbSet<tbl_trn_CompanyRemarkReply> tbl_trn_CompanyRemarkReply { get; set; }
        public virtual DbSet<test_facilities> test_facilities { get; set; }
        public virtual DbSet<test> tests { get; set; }
        public virtual DbSet<vw_Chart> vw_Chart { get; set; }
        public virtual DbSet<vw_Company> vw_Company { get; set; }
        public virtual DbSet<vw_CompanyProduct> vw_CompanyProduct { get; set; }
        public virtual DbSet<vw_CompDiv> vw_CompDiv { get; set; }
        public virtual DbSet<vw_CompDivUnit> vw_CompDivUnit { get; set; }
        public virtual DbSet<vw_DivisionProduct> vw_DivisionProduct { get; set; }
        public virtual DbSet<vw_IsNodalYes> vw_IsNodalYes { get; set; }
    
        [DbFunction("ddp_fdiFinalEntities", "fn_companywiseproduct")]
        public virtual IQueryable<fn_companywiseproduct_Result> fn_companywiseproduct()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_companywiseproduct_Result>("[ddp_fdiFinalEntities].[fn_companywiseproduct]()");
        }
    
        [DbFunction("ddp_fdiFinalEntities", "fn_CompMultiSearchHome")]
        public virtual IQueryable<fn_CompMultiSearchHome_Result> fn_CompMultiSearchHome()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_CompMultiSearchHome_Result>("[ddp_fdiFinalEntities].[fn_CompMultiSearchHome]()");
        }
    
        [DbFunction("ddp_fdiFinalEntities", "fn_Div_UnitWiseProduct")]
        public virtual IQueryable<fn_Div_UnitWiseProduct_Result> fn_Div_UnitWiseProduct(string refNo, string type)
        {
            var refNoParameter = refNo != null ?
                new ObjectParameter("RefNo", refNo) :
                new ObjectParameter("RefNo", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_Div_UnitWiseProduct_Result>("[ddp_fdiFinalEntities].[fn_Div_UnitWiseProduct](@RefNo, @Type)", refNoParameter, typeParameter);
        }
    
        [DbFunction("ddp_fdiFinalEntities", "fn_EstimatewiseCompanyProduct")]
        public virtual IQueryable<fn_EstimatewiseCompanyProduct_Result> fn_EstimatewiseCompanyProduct()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_EstimatewiseCompanyProduct_Result>("[ddp_fdiFinalEntities].[fn_EstimatewiseCompanyProduct]()");
        }
    
        [DbFunction("ddp_fdiFinalEntities", "fn_GetAggregateValue")]
        public virtual IQueryable<fn_GetAggregateValue_Result> fn_GetAggregateValue(string action, string role, string refNo)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            var refNoParameter = refNo != null ?
                new ObjectParameter("RefNo", refNo) :
                new ObjectParameter("RefNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetAggregateValue_Result>("[ddp_fdiFinalEntities].[fn_GetAggregateValue](@Action, @Role, @RefNo)", actionParameter, roleParameter, refNoParameter);
        }
    
        [DbFunction("ddp_fdiFinalEntities", "fn_GetIdsForProductTable")]
        public virtual IQueryable<fn_GetIdsForProductTable_Result> fn_GetIdsForProductTable(string companyName, string divisionName, string unitName, string productLevel1, string productLevel2, string productLevel3, string oEMCountryName, string endUserName, string platformName, string nomenclatureName, string technologyLevel1, string technologyLevel2, string technologyLevel3, string yrOfIndiginisation)
        {
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var divisionNameParameter = divisionName != null ?
                new ObjectParameter("DivisionName", divisionName) :
                new ObjectParameter("DivisionName", typeof(string));
    
            var unitNameParameter = unitName != null ?
                new ObjectParameter("UnitName", unitName) :
                new ObjectParameter("UnitName", typeof(string));
    
            var productLevel1Parameter = productLevel1 != null ?
                new ObjectParameter("ProductLevel1", productLevel1) :
                new ObjectParameter("ProductLevel1", typeof(string));
    
            var productLevel2Parameter = productLevel2 != null ?
                new ObjectParameter("ProductLevel2", productLevel2) :
                new ObjectParameter("ProductLevel2", typeof(string));
    
            var productLevel3Parameter = productLevel3 != null ?
                new ObjectParameter("ProductLevel3", productLevel3) :
                new ObjectParameter("ProductLevel3", typeof(string));
    
            var oEMCountryNameParameter = oEMCountryName != null ?
                new ObjectParameter("OEMCountryName", oEMCountryName) :
                new ObjectParameter("OEMCountryName", typeof(string));
    
            var endUserNameParameter = endUserName != null ?
                new ObjectParameter("EndUserName", endUserName) :
                new ObjectParameter("EndUserName", typeof(string));
    
            var platformNameParameter = platformName != null ?
                new ObjectParameter("PlatformName", platformName) :
                new ObjectParameter("PlatformName", typeof(string));
    
            var nomenclatureNameParameter = nomenclatureName != null ?
                new ObjectParameter("NomenclatureName", nomenclatureName) :
                new ObjectParameter("NomenclatureName", typeof(string));
    
            var technologyLevel1Parameter = technologyLevel1 != null ?
                new ObjectParameter("TechnologyLevel1", technologyLevel1) :
                new ObjectParameter("TechnologyLevel1", typeof(string));
    
            var technologyLevel2Parameter = technologyLevel2 != null ?
                new ObjectParameter("TechnologyLevel2", technologyLevel2) :
                new ObjectParameter("TechnologyLevel2", typeof(string));
    
            var technologyLevel3Parameter = technologyLevel3 != null ?
                new ObjectParameter("TechnologyLevel3", technologyLevel3) :
                new ObjectParameter("TechnologyLevel3", typeof(string));
    
            var yrOfIndiginisationParameter = yrOfIndiginisation != null ?
                new ObjectParameter("YrOfIndiginisation", yrOfIndiginisation) :
                new ObjectParameter("YrOfIndiginisation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetIdsForProductTable_Result>("[ddp_fdiFinalEntities].[fn_GetIdsForProductTable](@CompanyName, @DivisionName, @UnitName, @ProductLevel1, @ProductLevel2, @ProductLevel3, @OEMCountryName, @EndUserName, @PlatformName, @NomenclatureName, @TechnologyLevel1, @TechnologyLevel2, @TechnologyLevel3, @YrOfIndiginisation)", companyNameParameter, divisionNameParameter, unitNameParameter, productLevel1Parameter, productLevel2Parameter, productLevel3Parameter, oEMCountryNameParameter, endUserNameParameter, platformNameParameter, nomenclatureNameParameter, technologyLevel1Parameter, technologyLevel2Parameter, technologyLevel3Parameter, yrOfIndiginisationParameter);
        }
    
        [DbFunction("ddp_fdiFinalEntities", "fn_GetInterestedInValue")]
        public virtual IQueryable<fn_GetInterestedInValue_Result> fn_GetInterestedInValue(string compRefNo)
        {
            var compRefNoParameter = compRefNo != null ?
                new ObjectParameter("CompRefNo", compRefNo) :
                new ObjectParameter("CompRefNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetInterestedInValue_Result>("[ddp_fdiFinalEntities].[fn_GetInterestedInValue](@CompRefNo)", compRefNoParameter);
        }
    
        [DbFunction("ddp_fdiFinalEntities", "fn_GetListProductDetails")]
        public virtual IQueryable<fn_GetListProductDetails_Result> fn_GetListProductDetails(string action, string role, string refNo)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            var refNoParameter = refNo != null ?
                new ObjectParameter("RefNo", refNo) :
                new ObjectParameter("RefNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetListProductDetails_Result>("[ddp_fdiFinalEntities].[fn_GetListProductDetails](@Action, @Role, @RefNo)", actionParameter, roleParameter, refNoParameter);
        }
    
        [DbFunction("ddp_fdiFinalEntities", "fn_NatoCompWise")]
        public virtual IQueryable<fn_NatoCompWise_Result> fn_NatoCompWise()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_NatoCompWise_Result>("[ddp_fdiFinalEntities].[fn_NatoCompWise]()");
        }
    
        [DbFunction("ddp_fdiFinalEntities", "fn_ProductFilterSearch")]
        public virtual IQueryable<fn_ProductFilterSearch_Result> fn_ProductFilterSearch()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_ProductFilterSearch_Result>("[ddp_fdiFinalEntities].[fn_ProductFilterSearch]()");
        }
    
        [DbFunction("ddp_fdiFinalEntities", "fn_ProductFilterSearchdemo")]
        public virtual IQueryable<fn_ProductFilterSearchdemo_Result> fn_ProductFilterSearchdemo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_ProductFilterSearchdemo_Result>("[ddp_fdiFinalEntities].[fn_ProductFilterSearchdemo]()");
        }
    
        [DbFunction("ddp_fdiFinalEntities", "fn_ProductFilterSearchInstant")]
        public virtual IQueryable<fn_ProductFilterSearchInstant_Result> fn_ProductFilterSearchInstant(string refNo)
        {
            var refNoParameter = refNo != null ?
                new ObjectParameter("RefNo", refNo) :
                new ObjectParameter("RefNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_ProductFilterSearchInstant_Result>("[ddp_fdiFinalEntities].[fn_ProductFilterSearchInstant](@RefNo)", refNoParameter);
        }
    
        [DbFunction("ddp_fdiFinalEntities", "fn_ProductGrpah")]
        public virtual IQueryable<fn_ProductGrpah_Result> fn_ProductGrpah(string refNo)
        {
            var refNoParameter = refNo != null ?
                new ObjectParameter("RefNo", refNo) :
                new ObjectParameter("RefNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_ProductGrpah_Result>("[ddp_fdiFinalEntities].[fn_ProductGrpah](@RefNo)", refNoParameter);
        }
    
        [DbFunction("ddp_fdiFinalEntities", "fn_ProductGrpahII")]
        public virtual IQueryable<fn_ProductGrpahII_Result> fn_ProductGrpahII(string refNo, string mSSCatName)
        {
            var refNoParameter = refNo != null ?
                new ObjectParameter("RefNo", refNo) :
                new ObjectParameter("RefNo", typeof(string));
    
            var mSSCatNameParameter = mSSCatName != null ?
                new ObjectParameter("mSSCatName", mSSCatName) :
                new ObjectParameter("mSSCatName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_ProductGrpahII_Result>("[ddp_fdiFinalEntities].[fn_ProductGrpahII](@RefNo, @mSSCatName)", refNoParameter, mSSCatNameParameter);
        }
    
        [DbFunction("ddp_fdiFinalEntities", "fn_ProductGrpahNSNGroup")]
        public virtual IQueryable<fn_ProductGrpahNSNGroup_Result> fn_ProductGrpahNSNGroup(string refNo)
        {
            var refNoParameter = refNo != null ?
                new ObjectParameter("RefNo", refNo) :
                new ObjectParameter("RefNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_ProductGrpahNSNGroup_Result>("[ddp_fdiFinalEntities].[fn_ProductGrpahNSNGroup](@RefNo)", refNoParameter);
        }
    
        [DbFunction("ddp_fdiFinalEntities", "fn_ProductNSNClassGrpahII")]
        public virtual IQueryable<fn_ProductNSNClassGrpahII_Result> fn_ProductNSNClassGrpahII(string refNo, string mSSCatName)
        {
            var refNoParameter = refNo != null ?
                new ObjectParameter("RefNo", refNo) :
                new ObjectParameter("RefNo", typeof(string));
    
            var mSSCatNameParameter = mSSCatName != null ?
                new ObjectParameter("mSSCatName", mSSCatName) :
                new ObjectParameter("mSSCatName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_ProductNSNClassGrpahII_Result>("[ddp_fdiFinalEntities].[fn_ProductNSNClassGrpahII](@RefNo, @mSSCatName)", refNoParameter, mSSCatNameParameter);
        }
    
        [DbFunction("ddp_fdiFinalEntities", "fn_ProductProgress")]
        public virtual IQueryable<fn_ProductProgress_Result> fn_ProductProgress()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_ProductProgress_Result>("[ddp_fdiFinalEntities].[fn_ProductProgress]()");
        }
    
        [DbFunction("ddp_fdiFinalEntities", "fn_ProductProgressInstant")]
        public virtual IQueryable<fn_ProductProgressInstant_Result> fn_ProductProgressInstant(string refNo)
        {
            var refNoParameter = refNo != null ?
                new ObjectParameter("RefNo", refNo) :
                new ObjectParameter("RefNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_ProductProgressInstant_Result>("[ddp_fdiFinalEntities].[fn_ProductProgressInstant](@RefNo)", refNoParameter);
        }
    
        [DbFunction("ddp_fdiFinalEntities", "fn_ProductView")]
        public virtual IQueryable<fn_ProductView_Result> fn_ProductView()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_ProductView_Result>("[ddp_fdiFinalEntities].[fn_ProductView]()");
        }
    
        [DbFunction("ddp_fdiFinalEntities", "fn_updatenodel")]
        public virtual IQueryable<fn_updatenodel_Result> fn_updatenodel()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_updatenodel_Result>("[ddp_fdiFinalEntities].[fn_updatenodel]()");
        }
    
        public virtual ObjectResult<AddMaxVendorDetails_Result> AddMaxVendorDetails(string compRefNo, string searchValue, string criteria)
        {
            var compRefNoParameter = compRefNo != null ?
                new ObjectParameter("CompRefNo", compRefNo) :
                new ObjectParameter("CompRefNo", typeof(string));
    
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("SearchValue", searchValue) :
                new ObjectParameter("SearchValue", typeof(string));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddMaxVendorDetails_Result>("AddMaxVendorDetails", compRefNoParameter, searchValueParameter, criteriaParameter);
        }
    
        public virtual ObjectResult<addnew_maxvendor_Result> addnew_maxvendor(string compRefNo, string divisionRefNo, string unitRefNo, string searchValue, string criteria)
        {
            var compRefNoParameter = compRefNo != null ?
                new ObjectParameter("CompRefNo", compRefNo) :
                new ObjectParameter("CompRefNo", typeof(string));
    
            var divisionRefNoParameter = divisionRefNo != null ?
                new ObjectParameter("DivisionRefNo", divisionRefNo) :
                new ObjectParameter("DivisionRefNo", typeof(string));
    
            var unitRefNoParameter = unitRefNo != null ?
                new ObjectParameter("UnitRefNo", unitRefNo) :
                new ObjectParameter("UnitRefNo", typeof(string));
    
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("SearchValue", searchValue) :
                new ObjectParameter("SearchValue", typeof(string));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<addnew_maxvendor_Result>("addnew_maxvendor", compRefNoParameter, divisionRefNoParameter, unitRefNoParameter, searchValueParameter, criteriaParameter);
        }
    
        public virtual ObjectResult<BookedOrders_Result> BookedOrders()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BookedOrders_Result>("BookedOrders");
        }
    
        public virtual ObjectResult<new_successstory_Result> new_successstory(string compRefNo, string divisionRefNo, string unitRefNo, string searchValue, string criteria)
        {
            var compRefNoParameter = compRefNo != null ?
                new ObjectParameter("CompRefNo", compRefNo) :
                new ObjectParameter("CompRefNo", typeof(string));
    
            var divisionRefNoParameter = divisionRefNo != null ?
                new ObjectParameter("DivisionRefNo", divisionRefNo) :
                new ObjectParameter("DivisionRefNo", typeof(string));
    
            var unitRefNoParameter = unitRefNo != null ?
                new ObjectParameter("UnitRefNo", unitRefNo) :
                new ObjectParameter("UnitRefNo", typeof(string));
    
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("SearchValue", searchValue) :
                new ObjectParameter("SearchValue", typeof(string));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<new_successstory_Result>("new_successstory", compRefNoParameter, divisionRefNoParameter, unitRefNoParameter, searchValueParameter, criteriaParameter);
        }
    
        public virtual ObjectResult<new_successstory2_Result> new_successstory2(string criteria, string search, string value, string purpose, string role, Nullable<long> reqid, Nullable<long> refno, Nullable<long> id, string eOIStatus, string supplyOrderStatus, string indiginized)
        {
            var criteriaParameter = criteria != null ?
                new ObjectParameter("criteria", criteria) :
                new ObjectParameter("criteria", typeof(string));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var purposeParameter = purpose != null ?
                new ObjectParameter("purpose", purpose) :
                new ObjectParameter("purpose", typeof(string));
    
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            var reqidParameter = reqid.HasValue ?
                new ObjectParameter("reqid", reqid) :
                new ObjectParameter("reqid", typeof(long));
    
            var refnoParameter = refno.HasValue ?
                new ObjectParameter("refno", refno) :
                new ObjectParameter("refno", typeof(long));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var eOIStatusParameter = eOIStatus != null ?
                new ObjectParameter("EOIStatus", eOIStatus) :
                new ObjectParameter("EOIStatus", typeof(string));
    
            var supplyOrderStatusParameter = supplyOrderStatus != null ?
                new ObjectParameter("SupplyOrderStatus", supplyOrderStatus) :
                new ObjectParameter("SupplyOrderStatus", typeof(string));
    
            var indiginizedParameter = indiginized != null ?
                new ObjectParameter("indiginized", indiginized) :
                new ObjectParameter("indiginized", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<new_successstory2_Result>("new_successstory2", criteriaParameter, searchParameter, valueParameter, purposeParameter, roleParameter, reqidParameter, refnoParameter, idParameter, eOIStatusParameter, supplyOrderStatusParameter, indiginizedParameter);
        }
    
        public virtual ObjectResult<newproductfilter_Result> newproductfilter(string criteria)
        {
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<newproductfilter_Result>("newproductfilter", criteriaParameter);
        }
    
        public virtual ObjectResult<pendingBookedOrders_Result> pendingBookedOrders()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pendingBookedOrders_Result>("pendingBookedOrders");
        }
    
        public virtual int sp_AddNewNodalOfficerVendor(string nodelOffName, string email, string mobno, string empcode, string noddep, string noddesig, string tphone, string noffFax, string comp, string tNype, string nsalt, string tempREF, string isActive, string isLoginActive, string isNodalOfficer, string dfultPage, string crtBy, string vedtRid, string auth, string ident, string pass)
        {
            var nodelOffNameParameter = nodelOffName != null ?
                new ObjectParameter("NodelOffName", nodelOffName) :
                new ObjectParameter("NodelOffName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var mobnoParameter = mobno != null ?
                new ObjectParameter("Mobno", mobno) :
                new ObjectParameter("Mobno", typeof(string));
    
            var empcodeParameter = empcode != null ?
                new ObjectParameter("Empcode", empcode) :
                new ObjectParameter("Empcode", typeof(string));
    
            var noddepParameter = noddep != null ?
                new ObjectParameter("Noddep", noddep) :
                new ObjectParameter("Noddep", typeof(string));
    
            var noddesigParameter = noddesig != null ?
                new ObjectParameter("Noddesig", noddesig) :
                new ObjectParameter("Noddesig", typeof(string));
    
            var tphoneParameter = tphone != null ?
                new ObjectParameter("Tphone", tphone) :
                new ObjectParameter("Tphone", typeof(string));
    
            var noffFaxParameter = noffFax != null ?
                new ObjectParameter("NoffFax", noffFax) :
                new ObjectParameter("NoffFax", typeof(string));
    
            var compParameter = comp != null ?
                new ObjectParameter("Comp", comp) :
                new ObjectParameter("Comp", typeof(string));
    
            var tNypeParameter = tNype != null ?
                new ObjectParameter("tNype", tNype) :
                new ObjectParameter("tNype", typeof(string));
    
            var nsaltParameter = nsalt != null ?
                new ObjectParameter("Nsalt", nsalt) :
                new ObjectParameter("Nsalt", typeof(string));
    
            var tempREFParameter = tempREF != null ?
                new ObjectParameter("TempREF", tempREF) :
                new ObjectParameter("TempREF", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var isLoginActiveParameter = isLoginActive != null ?
                new ObjectParameter("IsLoginActive", isLoginActive) :
                new ObjectParameter("IsLoginActive", typeof(string));
    
            var isNodalOfficerParameter = isNodalOfficer != null ?
                new ObjectParameter("IsNodalOfficer", isNodalOfficer) :
                new ObjectParameter("IsNodalOfficer", typeof(string));
    
            var dfultPageParameter = dfultPage != null ?
                new ObjectParameter("DfultPage", dfultPage) :
                new ObjectParameter("DfultPage", typeof(string));
    
            var crtByParameter = crtBy != null ?
                new ObjectParameter("CrtBy", crtBy) :
                new ObjectParameter("CrtBy", typeof(string));
    
            var vedtRidParameter = vedtRid != null ?
                new ObjectParameter("VedtRid", vedtRid) :
                new ObjectParameter("VedtRid", typeof(string));
    
            var authParameter = auth != null ?
                new ObjectParameter("Auth", auth) :
                new ObjectParameter("Auth", typeof(string));
    
            var identParameter = ident != null ?
                new ObjectParameter("Ident", ident) :
                new ObjectParameter("Ident", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AddNewNodalOfficerVendor", nodelOffNameParameter, emailParameter, mobnoParameter, empcodeParameter, noddepParameter, noddesigParameter, tphoneParameter, noffFaxParameter, compParameter, tNypeParameter, nsaltParameter, tempREFParameter, isActiveParameter, isLoginActiveParameter, isNodalOfficerParameter, dfultPageParameter, crtByParameter, vedtRidParameter, authParameter, identParameter, passParameter);
        }
    
        public virtual int sp_addNewpostalcodeMST(string posatalAddress, string newZipcode1)
        {
            var posatalAddressParameter = posatalAddress != null ?
                new ObjectParameter("PosatalAddress", posatalAddress) :
                new ObjectParameter("PosatalAddress", typeof(string));
    
            var newZipcode1Parameter = newZipcode1 != null ?
                new ObjectParameter("NewZipcode1", newZipcode1) :
                new ObjectParameter("NewZipcode1", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_addNewpostalcodeMST", posatalAddressParameter, newZipcode1Parameter);
        }
    
        public virtual int sp_addNewpostalnCity(string newCity, string newState, string newZipcode)
        {
            var newCityParameter = newCity != null ?
                new ObjectParameter("NewCity", newCity) :
                new ObjectParameter("NewCity", typeof(string));
    
            var newStateParameter = newState != null ?
                new ObjectParameter("NewState", newState) :
                new ObjectParameter("NewState", typeof(string));
    
            var newZipcodeParameter = newZipcode != null ?
                new ObjectParameter("NewZipcode", newZipcode) :
                new ObjectParameter("NewZipcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_addNewpostalnCity", newCityParameter, newStateParameter, newZipcodeParameter);
        }
    
        public virtual int sp_addnewuserVM(string userName, string email, string mobno, string street1, string street2, string city1, string state1, string zipcode1, string vedtRid, string pass, string usertyp)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var mobnoParameter = mobno != null ?
                new ObjectParameter("Mobno", mobno) :
                new ObjectParameter("Mobno", typeof(string));
    
            var street1Parameter = street1 != null ?
                new ObjectParameter("street1", street1) :
                new ObjectParameter("street1", typeof(string));
    
            var street2Parameter = street2 != null ?
                new ObjectParameter("street2", street2) :
                new ObjectParameter("street2", typeof(string));
    
            var city1Parameter = city1 != null ?
                new ObjectParameter("city1", city1) :
                new ObjectParameter("city1", typeof(string));
    
            var state1Parameter = state1 != null ?
                new ObjectParameter("state1", state1) :
                new ObjectParameter("state1", typeof(string));
    
            var zipcode1Parameter = zipcode1 != null ?
                new ObjectParameter("zipcode1", zipcode1) :
                new ObjectParameter("zipcode1", typeof(string));
    
            var vedtRidParameter = vedtRid != null ?
                new ObjectParameter("VedtRid", vedtRid) :
                new ObjectParameter("VedtRid", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            var usertypParameter = usertyp != null ?
                new ObjectParameter("usertyp", usertyp) :
                new ObjectParameter("usertyp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_addnewuserVM", userNameParameter, emailParameter, mobnoParameter, street1Parameter, street2Parameter, city1Parameter, state1Parameter, zipcode1Parameter, vedtRidParameter, passParameter, usertypParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_AggregateValue(string function, string table)
        {
            var functionParameter = function != null ?
                new ObjectParameter("Function", function) :
                new ObjectParameter("Function", typeof(string));
    
            var tableParameter = table != null ?
                new ObjectParameter("Table", table) :
                new ObjectParameter("Table", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_AggregateValue", functionParameter, tableParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> sp_AggregateValueWithParam(string function, string table, string colmn, string value)
        {
            var functionParameter = function != null ?
                new ObjectParameter("Function", function) :
                new ObjectParameter("Function", typeof(string));
    
            var tableParameter = table != null ?
                new ObjectParameter("Table", table) :
                new ObjectParameter("Table", typeof(string));
    
            var colmnParameter = colmn != null ?
                new ObjectParameter("Colmn", colmn) :
                new ObjectParameter("Colmn", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("sp_AggregateValueWithParam", functionParameter, tableParameter, colmnParameter, valueParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_ApproveBookedOrder(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ApproveBookedOrder", idParameter);
        }
    
        public virtual ObjectResult<sp_ApprovendRejectedorders_Result> sp_ApprovendRejectedorders()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ApprovendRejectedorders_Result>("sp_ApprovendRejectedorders");
        }
    
        public virtual ObjectResult<sp_BindBookedOrder_Result> sp_BindBookedOrder(string orgname)
        {
            var orgnameParameter = orgname != null ?
                new ObjectParameter("orgname", orgname) :
                new ObjectParameter("orgname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BindBookedOrder_Result>("sp_BindBookedOrder", orgnameParameter);
        }
    
        public virtual ObjectResult<sp_BindTestDetails_Result> sp_BindTestDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BindTestDetails_Result>("sp_BindTestDetails");
        }
    
        public virtual int sp_BookOrders(Nullable<int> userid, string testid, string organisationid, string discipline, string lab, Nullable<int> noofsample, string dimension_eqpmt, string weight_eqmt, string start_date, string end_date, string description, string attachment, ObjectParameter rETURNID)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var testidParameter = testid != null ?
                new ObjectParameter("testid", testid) :
                new ObjectParameter("testid", typeof(string));
    
            var organisationidParameter = organisationid != null ?
                new ObjectParameter("organisationid", organisationid) :
                new ObjectParameter("organisationid", typeof(string));
    
            var disciplineParameter = discipline != null ?
                new ObjectParameter("discipline", discipline) :
                new ObjectParameter("discipline", typeof(string));
    
            var labParameter = lab != null ?
                new ObjectParameter("lab", lab) :
                new ObjectParameter("lab", typeof(string));
    
            var noofsampleParameter = noofsample.HasValue ?
                new ObjectParameter("noofsample", noofsample) :
                new ObjectParameter("noofsample", typeof(int));
    
            var dimension_eqpmtParameter = dimension_eqpmt != null ?
                new ObjectParameter("dimension_eqpmt", dimension_eqpmt) :
                new ObjectParameter("dimension_eqpmt", typeof(string));
    
            var weight_eqmtParameter = weight_eqmt != null ?
                new ObjectParameter("weight_eqmt", weight_eqmt) :
                new ObjectParameter("weight_eqmt", typeof(string));
    
            var start_dateParameter = start_date != null ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(string));
    
            var end_dateParameter = end_date != null ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var attachmentParameter = attachment != null ?
                new ObjectParameter("attachment", attachment) :
                new ObjectParameter("attachment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BookOrders", useridParameter, testidParameter, organisationidParameter, disciplineParameter, labParameter, noofsampleParameter, dimension_eqpmtParameter, weight_eqmtParameter, start_dateParameter, end_dateParameter, descriptionParameter, attachmentParameter, rETURNID);
        }
    
        public virtual ObjectResult<sp_CompanyCategoryRelation_Result> sp_CompanyCategoryRelation(Nullable<int> relationId, string compRefNo, string mCatId, string sCatId, string criteria)
        {
            var relationIdParameter = relationId.HasValue ?
                new ObjectParameter("RelationId", relationId) :
                new ObjectParameter("RelationId", typeof(int));
    
            var compRefNoParameter = compRefNo != null ?
                new ObjectParameter("CompRefNo", compRefNo) :
                new ObjectParameter("CompRefNo", typeof(string));
    
            var mCatIdParameter = mCatId != null ?
                new ObjectParameter("MCatId", mCatId) :
                new ObjectParameter("MCatId", typeof(string));
    
            var sCatIdParameter = sCatId != null ?
                new ObjectParameter("SCatId", sCatId) :
                new ObjectParameter("SCatId", typeof(string));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CompanyCategoryRelation_Result>("sp_CompanyCategoryRelation", relationIdParameter, compRefNoParameter, mCatIdParameter, sCatIdParameter, criteriaParameter);
        }
    
        public virtual int sp_CompRemark_reply(string remarkRefNo, string reply_UserName, string reply_Email, string remark, string reply)
        {
            var remarkRefNoParameter = remarkRefNo != null ?
                new ObjectParameter("RemarkRefNo", remarkRefNo) :
                new ObjectParameter("RemarkRefNo", typeof(string));
    
            var reply_UserNameParameter = reply_UserName != null ?
                new ObjectParameter("Reply_UserName", reply_UserName) :
                new ObjectParameter("Reply_UserName", typeof(string));
    
            var reply_EmailParameter = reply_Email != null ?
                new ObjectParameter("Reply_Email", reply_Email) :
                new ObjectParameter("Reply_Email", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var replyParameter = reply != null ?
                new ObjectParameter("Reply", reply) :
                new ObjectParameter("Reply", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CompRemark_reply", remarkRefNoParameter, reply_UserNameParameter, reply_EmailParameter, remarkParameter, replyParameter);
        }
    
        public virtual ObjectResult<sp_Country_Result> sp_Country(Nullable<long> countryID, string countryName, string workCodeFor)
        {
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("CountryID", countryID) :
                new ObjectParameter("CountryID", typeof(long));
    
            var countryNameParameter = countryName != null ?
                new ObjectParameter("CountryName", countryName) :
                new ObjectParameter("CountryName", typeof(string));
    
            var workCodeForParameter = workCodeFor != null ?
                new ObjectParameter("WorkCodeFor", workCodeFor) :
                new ObjectParameter("WorkCodeFor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Country_Result>("sp_Country", countryIDParameter, countryNameParameter, workCodeForParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<string> sp_DeleteMasterRecord(string compRefNo, string criteria)
        {
            var compRefNoParameter = compRefNo != null ?
                new ObjectParameter("CompRefNo", compRefNo) :
                new ObjectParameter("CompRefNo", typeof(string));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_DeleteMasterRecord", compRefNoParameter, criteriaParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_ExceptionLoggingToDataBase(string exceptionMsg, string exceptionType, string exceptionSource, string exceptionURL, string exceptionclientip, string exceptionclientbrowser)
        {
            var exceptionMsgParameter = exceptionMsg != null ?
                new ObjectParameter("ExceptionMsg", exceptionMsg) :
                new ObjectParameter("ExceptionMsg", typeof(string));
    
            var exceptionTypeParameter = exceptionType != null ?
                new ObjectParameter("ExceptionType", exceptionType) :
                new ObjectParameter("ExceptionType", typeof(string));
    
            var exceptionSourceParameter = exceptionSource != null ?
                new ObjectParameter("ExceptionSource", exceptionSource) :
                new ObjectParameter("ExceptionSource", typeof(string));
    
            var exceptionURLParameter = exceptionURL != null ?
                new ObjectParameter("ExceptionURL", exceptionURL) :
                new ObjectParameter("ExceptionURL", typeof(string));
    
            var exceptionclientipParameter = exceptionclientip != null ?
                new ObjectParameter("Exceptionclientip", exceptionclientip) :
                new ObjectParameter("Exceptionclientip", typeof(string));
    
            var exceptionclientbrowserParameter = exceptionclientbrowser != null ?
                new ObjectParameter("Exceptionclientbrowser", exceptionclientbrowser) :
                new ObjectParameter("Exceptionclientbrowser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_ExceptionLoggingToDataBase", exceptionMsgParameter, exceptionTypeParameter, exceptionSourceParameter, exceptionURLParameter, exceptionclientipParameter, exceptionclientbrowserParameter);
        }
    
        public virtual int sp_feedback_details(Nullable<long> feedBackId, string userName, string userEmail, Nullable<long> mobileNo, string message, string companyRefNo, string companyName, ObjectParameter returnId)
        {
            var feedBackIdParameter = feedBackId.HasValue ?
                new ObjectParameter("FeedBackId", feedBackId) :
                new ObjectParameter("FeedBackId", typeof(long));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var userEmailParameter = userEmail != null ?
                new ObjectParameter("UserEmail", userEmail) :
                new ObjectParameter("UserEmail", typeof(string));
    
            var mobileNoParameter = mobileNo.HasValue ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(long));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var companyRefNoParameter = companyRefNo != null ?
                new ObjectParameter("CompanyRefNo", companyRefNo) :
                new ObjectParameter("CompanyRefNo", typeof(string));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_feedback_details", feedBackIdParameter, userNameParameter, userEmailParameter, mobileNoParameter, messageParameter, companyRefNoParameter, companyNameParameter, returnId);
        }
    
        public virtual int sp_feedback_reply(Nullable<long> id, string feedBackRefNo, string r_UserName, string r_Email, string r_Messg, Nullable<System.DateTime> r_Date, Nullable<System.TimeSpan> r_Time, string s_Email, string s_Name, string s_Question)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var feedBackRefNoParameter = feedBackRefNo != null ?
                new ObjectParameter("FeedBackRefNo", feedBackRefNo) :
                new ObjectParameter("FeedBackRefNo", typeof(string));
    
            var r_UserNameParameter = r_UserName != null ?
                new ObjectParameter("R_UserName", r_UserName) :
                new ObjectParameter("R_UserName", typeof(string));
    
            var r_EmailParameter = r_Email != null ?
                new ObjectParameter("R_Email", r_Email) :
                new ObjectParameter("R_Email", typeof(string));
    
            var r_MessgParameter = r_Messg != null ?
                new ObjectParameter("R_Messg", r_Messg) :
                new ObjectParameter("R_Messg", typeof(string));
    
            var r_DateParameter = r_Date.HasValue ?
                new ObjectParameter("R_Date", r_Date) :
                new ObjectParameter("R_Date", typeof(System.DateTime));
    
            var r_TimeParameter = r_Time.HasValue ?
                new ObjectParameter("R_Time", r_Time) :
                new ObjectParameter("R_Time", typeof(System.TimeSpan));
    
            var s_EmailParameter = s_Email != null ?
                new ObjectParameter("S_Email", s_Email) :
                new ObjectParameter("S_Email", typeof(string));
    
            var s_NameParameter = s_Name != null ?
                new ObjectParameter("S_Name", s_Name) :
                new ObjectParameter("S_Name", typeof(string));
    
            var s_QuestionParameter = s_Question != null ?
                new ObjectParameter("S_Question", s_Question) :
                new ObjectParameter("S_Question", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_feedback_reply", idParameter, feedBackRefNoParameter, r_UserNameParameter, r_EmailParameter, r_MessgParameter, r_DateParameter, r_TimeParameter, s_EmailParameter, s_NameParameter, s_QuestionParameter);
        }
    
        public virtual ObjectResult<string> sp_FilterRetriveCode(string compRefNo, string searchValue, string criteria)
        {
            var compRefNoParameter = compRefNo != null ?
                new ObjectParameter("CompRefNo", compRefNo) :
                new ObjectParameter("CompRefNo", typeof(string));
    
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("SearchValue", searchValue) :
                new ObjectParameter("SearchValue", typeof(string));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_FilterRetriveCode", compRefNoParameter, searchValueParameter, criteriaParameter);
        }
    
        public virtual ObjectResult<sp_forgotpassword_Result> sp_forgotpassword(string nodalEmail, string type)
        {
            var nodalEmailParameter = nodalEmail != null ?
                new ObjectParameter("NodalEmail", nodalEmail) :
                new ObjectParameter("NodalEmail", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_forgotpassword_Result>("sp_forgotpassword", nodalEmailParameter, typeParameter);
        }
    
        public virtual int sp_forgotpasswordexp(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_forgotpasswordexp", emailParameter);
        }
    
        public virtual ObjectResult<sp_GetAllCity_Result> sp_GetAllCity()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetAllCity_Result>("sp_GetAllCity");
        }
    
        public virtual ObjectResult<string> sp_GetAllDiscipline()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_GetAllDiscipline");
        }
    
        public virtual ObjectResult<string> sp_GetAllLab()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_GetAllLab");
        }
    
        public virtual ObjectResult<sp_GetAllOrganisations_Result> sp_GetAllOrganisations()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetAllOrganisations_Result>("sp_GetAllOrganisations");
        }
    
        public virtual ObjectResult<sp_GetAllPinCode_Result> sp_GetAllPinCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetAllPinCode_Result>("sp_GetAllPinCode");
        }
    
        public virtual ObjectResult<sp_GetAllState_Result> sp_GetAllState()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetAllState_Result>("sp_GetAllState");
        }
    
        public virtual ObjectResult<sp_GetCitywithPinCode_Result> sp_GetCitywithPinCode(string pinCode)
        {
            var pinCodeParameter = pinCode != null ?
                new ObjectParameter("PinCode", pinCode) :
                new ObjectParameter("PinCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetCitywithPinCode_Result>("sp_GetCitywithPinCode", pinCodeParameter);
        }
    
        public virtual ObjectResult<sp_GetCompDivUnit_Result> sp_GetCompDivUnit(string role, string refNo)
        {
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            var refNoParameter = refNo != null ?
                new ObjectParameter("RefNo", refNo) :
                new ObjectParameter("RefNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetCompDivUnit_Result>("sp_GetCompDivUnit", roleParameter, refNoParameter);
        }
    
        public virtual ObjectResult<sp_GetDashboardData_Result> sp_GetDashboardData(string purpose, string searchText)
        {
            var purposeParameter = purpose != null ?
                new ObjectParameter("Purpose", purpose) :
                new ObjectParameter("Purpose", typeof(string));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetDashboardData_Result>("sp_GetDashboardData", purposeParameter, searchTextParameter);
        }
    
        public virtual ObjectResult<sp_GetDashboardDataApproveDisapproveItem_Result> sp_GetDashboardDataApproveDisapproveItem(string purpose, string searchText, string searchText2)
        {
            var purposeParameter = purpose != null ?
                new ObjectParameter("Purpose", purpose) :
                new ObjectParameter("Purpose", typeof(string));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            var searchText2Parameter = searchText2 != null ?
                new ObjectParameter("SearchText2", searchText2) :
                new ObjectParameter("SearchText2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetDashboardDataApproveDisapproveItem_Result>("sp_GetDashboardDataApproveDisapproveItem", purposeParameter, searchTextParameter, searchText2Parameter);
        }
    
        public virtual ObjectResult<sp_GetDataOnCriteria_Result> sp_GetDataOnCriteria(Nullable<int> companyID, string refNo, string role, Nullable<int> menuId, string menuUrl, string interestedAreaFlag, string criteria)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var refNoParameter = refNo != null ?
                new ObjectParameter("RefNo", refNo) :
                new ObjectParameter("RefNo", typeof(string));
    
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            var menuIdParameter = menuId.HasValue ?
                new ObjectParameter("MenuId", menuId) :
                new ObjectParameter("MenuId", typeof(int));
    
            var menuUrlParameter = menuUrl != null ?
                new ObjectParameter("MenuUrl", menuUrl) :
                new ObjectParameter("MenuUrl", typeof(string));
    
            var interestedAreaFlagParameter = interestedAreaFlag != null ?
                new ObjectParameter("InterestedAreaFlag", interestedAreaFlag) :
                new ObjectParameter("InterestedAreaFlag", typeof(string));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetDataOnCriteria_Result>("sp_GetDataOnCriteria", companyIDParameter, refNoParameter, roleParameter, menuIdParameter, menuUrlParameter, interestedAreaFlagParameter, criteriaParameter);
        }
    
        public virtual ObjectResult<sp_GetInteresteddata_Result> sp_GetInteresteddata(string companyRefNo, string divisionRefNo, string unitRefNo)
        {
            var companyRefNoParameter = companyRefNo != null ?
                new ObjectParameter("CompanyRefNo", companyRefNo) :
                new ObjectParameter("CompanyRefNo", typeof(string));
    
            var divisionRefNoParameter = divisionRefNo != null ?
                new ObjectParameter("DivisionRefNo", divisionRefNo) :
                new ObjectParameter("DivisionRefNo", typeof(string));
    
            var unitRefNoParameter = unitRefNo != null ?
                new ObjectParameter("UnitRefNo", unitRefNo) :
                new ObjectParameter("UnitRefNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetInteresteddata_Result>("sp_GetInteresteddata", companyRefNoParameter, divisionRefNoParameter, unitRefNoParameter);
        }
    
        public virtual ObjectResult<string> sp_GetInterestedInValue(string compRefNo)
        {
            var compRefNoParameter = compRefNo != null ?
                new ObjectParameter("CompRefNo", compRefNo) :
                new ObjectParameter("CompRefNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_GetInterestedInValue", compRefNoParameter);
        }
    
        public virtual ObjectResult<sp_GetNodalCompDivUnit_Result> sp_GetNodalCompDivUnit(string role, string refNo)
        {
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            var refNoParameter = refNo != null ?
                new ObjectParameter("RefNo", refNo) :
                new ObjectParameter("RefNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetNodalCompDivUnit_Result>("sp_GetNodalCompDivUnit", roleParameter, refNoParameter);
        }
    
        public virtual int sp_GetNodalOfficerMigrationDetail(string trackID, string trackEmaiID)
        {
            var trackIDParameter = trackID != null ?
                new ObjectParameter("trackID", trackID) :
                new ObjectParameter("trackID", typeof(string));
    
            var trackEmaiIDParameter = trackEmaiID != null ?
                new ObjectParameter("trackEmaiID", trackEmaiID) :
                new ObjectParameter("trackEmaiID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetNodalOfficerMigrationDetail", trackIDParameter, trackEmaiIDParameter);
        }
    
        public virtual int sp_GetprofileDetail(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetprofileDetail", emailParameter);
        }
    
        public virtual int sp_GetprofileMigrationLst(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetprofileMigrationLst", emailParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_GetStatewithWithCity(string stateId)
        {
            var stateIdParameter = stateId != null ?
                new ObjectParameter("StateId", stateId) :
                new ObjectParameter("StateId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_GetStatewithWithCity", stateIdParameter);
        }
    
        public virtual ObjectResult<sp_GetTestdetailsbyCompany_Result> sp_GetTestdetailsbyCompany(string compname)
        {
            var compnameParameter = compname != null ?
                new ObjectParameter("compname", compname) :
                new ObjectParameter("compname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetTestdetailsbyCompany_Result>("sp_GetTestdetailsbyCompany", compnameParameter);
        }
    
        public virtual ObjectResult<sp_GetTestdetailsbyId_Result> sp_GetTestdetailsbyId(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetTestdetailsbyId_Result>("sp_GetTestdetailsbyId", idParameter);
        }
    
        public virtual int sp_GetVuserDetails(string vndorID, string usertype)
        {
            var vndorIDParameter = vndorID != null ?
                new ObjectParameter("VndorID", vndorID) :
                new ObjectParameter("VndorID", typeof(string));
    
            var usertypeParameter = usertype != null ?
                new ObjectParameter("Usertype", usertype) :
                new ObjectParameter("Usertype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetVuserDetails", vndorIDParameter, usertypeParameter);
        }
    
        public virtual int sp_HelpDesk(string hFrom, string queryFor, string name, string email, Nullable<long> mobileNo, string state, string subject, string address, string issue, string files, Nullable<long> subSubjectId, ObjectParameter returnId)
        {
            var hFromParameter = hFrom != null ?
                new ObjectParameter("HFrom", hFrom) :
                new ObjectParameter("HFrom", typeof(string));
    
            var queryForParameter = queryFor != null ?
                new ObjectParameter("QueryFor", queryFor) :
                new ObjectParameter("QueryFor", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var mobileNoParameter = mobileNo.HasValue ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(long));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var issueParameter = issue != null ?
                new ObjectParameter("Issue", issue) :
                new ObjectParameter("Issue", typeof(string));
    
            var filesParameter = files != null ?
                new ObjectParameter("Files", files) :
                new ObjectParameter("Files", typeof(string));
    
            var subSubjectIdParameter = subSubjectId.HasValue ?
                new ObjectParameter("SubSubjectId", subSubjectId) :
                new ObjectParameter("SubSubjectId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HelpDesk", hFromParameter, queryForParameter, nameParameter, emailParameter, mobileNoParameter, stateParameter, subjectParameter, addressParameter, issueParameter, filesParameter, subSubjectIdParameter, returnId);
        }
    
        public virtual int sp_HelpDeskRegisUser(string type, string name, string userName, Nullable<long> mobileNo, ObjectParameter returnId)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var mobileNoParameter = mobileNo.HasValue ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HelpDeskRegisUser", typeParameter, nameParameter, userNameParameter, mobileNoParameter, returnId);
        }
    
        public virtual ObjectResult<sp_HelpDeskRetrive_Result> sp_HelpDeskRetrive(Nullable<long> value, Nullable<long> value2, Nullable<long> value3, string string1, string string2, string string3, string string4, string criteria)
        {
            var valueParameter = value.HasValue ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(long));
    
            var value2Parameter = value2.HasValue ?
                new ObjectParameter("Value2", value2) :
                new ObjectParameter("Value2", typeof(long));
    
            var value3Parameter = value3.HasValue ?
                new ObjectParameter("Value3", value3) :
                new ObjectParameter("Value3", typeof(long));
    
            var string1Parameter = string1 != null ?
                new ObjectParameter("String1", string1) :
                new ObjectParameter("String1", typeof(string));
    
            var string2Parameter = string2 != null ?
                new ObjectParameter("String2", string2) :
                new ObjectParameter("String2", typeof(string));
    
            var string3Parameter = string3 != null ?
                new ObjectParameter("String3", string3) :
                new ObjectParameter("String3", typeof(string));
    
            var string4Parameter = string4 != null ?
                new ObjectParameter("String4", string4) :
                new ObjectParameter("String4", typeof(string));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HelpDeskRetrive_Result>("sp_HelpDeskRetrive", valueParameter, value2Parameter, value3Parameter, string1Parameter, string2Parameter, string3Parameter, string4Parameter, criteriaParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_ImpNews(Nullable<long> newsId, string news, Nullable<System.DateTime> date, string pages, ObjectParameter returnID)
        {
            var newsIdParameter = newsId.HasValue ?
                new ObjectParameter("NewsId", newsId) :
                new ObjectParameter("NewsId", typeof(long));
    
            var newsParameter = news != null ?
                new ObjectParameter("News", news) :
                new ObjectParameter("News", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var pagesParameter = pages != null ?
                new ObjectParameter("Pages", pages) :
                new ObjectParameter("Pages", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ImpNews", newsIdParameter, newsParameter, dateParameter, pagesParameter, returnID);
        }
    
        public virtual int sp_Insert_Test_details(string test_name, string organisation_id, string division_id, string unit_id, string discipline_id, string calibration_facility, string manufacturer, string manufactureryear, string chamber_size, string equipmnt_range, string product_material, string specifications, string maxdimension, string maxweight, string duration, string advance_notice, string constraints, string remarks, ObjectParameter returnId)
        {
            var test_nameParameter = test_name != null ?
                new ObjectParameter("test_name", test_name) :
                new ObjectParameter("test_name", typeof(string));
    
            var organisation_idParameter = organisation_id != null ?
                new ObjectParameter("organisation_id", organisation_id) :
                new ObjectParameter("organisation_id", typeof(string));
    
            var division_idParameter = division_id != null ?
                new ObjectParameter("Division_id", division_id) :
                new ObjectParameter("Division_id", typeof(string));
    
            var unit_idParameter = unit_id != null ?
                new ObjectParameter("Unit_id", unit_id) :
                new ObjectParameter("Unit_id", typeof(string));
    
            var discipline_idParameter = discipline_id != null ?
                new ObjectParameter("discipline_id", discipline_id) :
                new ObjectParameter("discipline_id", typeof(string));
    
            var calibration_facilityParameter = calibration_facility != null ?
                new ObjectParameter("calibration_facility", calibration_facility) :
                new ObjectParameter("calibration_facility", typeof(string));
    
            var manufacturerParameter = manufacturer != null ?
                new ObjectParameter("manufacturer", manufacturer) :
                new ObjectParameter("manufacturer", typeof(string));
    
            var manufactureryearParameter = manufactureryear != null ?
                new ObjectParameter("manufactureryear", manufactureryear) :
                new ObjectParameter("manufactureryear", typeof(string));
    
            var chamber_sizeParameter = chamber_size != null ?
                new ObjectParameter("chamber_size", chamber_size) :
                new ObjectParameter("chamber_size", typeof(string));
    
            var equipmnt_rangeParameter = equipmnt_range != null ?
                new ObjectParameter("equipmnt_range", equipmnt_range) :
                new ObjectParameter("equipmnt_range", typeof(string));
    
            var product_materialParameter = product_material != null ?
                new ObjectParameter("product_material", product_material) :
                new ObjectParameter("product_material", typeof(string));
    
            var specificationsParameter = specifications != null ?
                new ObjectParameter("specifications", specifications) :
                new ObjectParameter("specifications", typeof(string));
    
            var maxdimensionParameter = maxdimension != null ?
                new ObjectParameter("maxdimension", maxdimension) :
                new ObjectParameter("maxdimension", typeof(string));
    
            var maxweightParameter = maxweight != null ?
                new ObjectParameter("maxweight", maxweight) :
                new ObjectParameter("maxweight", typeof(string));
    
            var durationParameter = duration != null ?
                new ObjectParameter("duration", duration) :
                new ObjectParameter("duration", typeof(string));
    
            var advance_noticeParameter = advance_notice != null ?
                new ObjectParameter("advance_notice", advance_notice) :
                new ObjectParameter("advance_notice", typeof(string));
    
            var constraintsParameter = constraints != null ?
                new ObjectParameter("constraints", constraints) :
                new ObjectParameter("constraints", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insert_Test_details", test_nameParameter, organisation_idParameter, division_idParameter, unit_idParameter, discipline_idParameter, calibration_facilityParameter, manufacturerParameter, manufactureryearParameter, chamber_sizeParameter, equipmnt_rangeParameter, product_materialParameter, specificationsParameter, maxdimensionParameter, maxweightParameter, durationParameter, advance_noticeParameter, constraintsParameter, remarksParameter, returnId);
        }
    
        public virtual int sp_InsertCategoryFromExcel(Nullable<int> pid, string catName, string desc, string l1Code, string l2Code, ObjectParameter newId)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("Pid", pid) :
                new ObjectParameter("Pid", typeof(int));
    
            var catNameParameter = catName != null ?
                new ObjectParameter("CatName", catName) :
                new ObjectParameter("CatName", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("Desc", desc) :
                new ObjectParameter("Desc", typeof(string));
    
            var l1CodeParameter = l1Code != null ?
                new ObjectParameter("L1Code", l1Code) :
                new ObjectParameter("L1Code", typeof(string));
    
            var l2CodeParameter = l2Code != null ?
                new ObjectParameter("L2Code", l2Code) :
                new ObjectParameter("L2Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertCategoryFromExcel", pidParameter, catNameParameter, descParameter, l1CodeParameter, l2CodeParameter, newId);
        }
    
        public virtual int sp_InsertCompany(Nullable<long> companyID, string companyName, string contactPersonEmailID, string interestedArea, string masterAllowed, string role, string createdBy, ObjectParameter returnID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var contactPersonEmailIDParameter = contactPersonEmailID != null ?
                new ObjectParameter("ContactPersonEmailID", contactPersonEmailID) :
                new ObjectParameter("ContactPersonEmailID", typeof(string));
    
            var interestedAreaParameter = interestedArea != null ?
                new ObjectParameter("InterestedArea", interestedArea) :
                new ObjectParameter("InterestedArea", typeof(string));
    
            var masterAllowedParameter = masterAllowed != null ?
                new ObjectParameter("MasterAllowed", masterAllowed) :
                new ObjectParameter("MasterAllowed", typeof(string));
    
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertCompany", companyIDParameter, companyNameParameter, contactPersonEmailIDParameter, interestedAreaParameter, masterAllowedParameter, roleParameter, createdByParameter, returnID);
        }
    
        public virtual int sp_InsertDesignation(Nullable<int> designationID, string companyRefNo, string designation, string designationRefNo, string createdBy, ObjectParameter returnID)
        {
            var designationIDParameter = designationID.HasValue ?
                new ObjectParameter("DesignationID", designationID) :
                new ObjectParameter("DesignationID", typeof(int));
    
            var companyRefNoParameter = companyRefNo != null ?
                new ObjectParameter("CompanyRefNo", companyRefNo) :
                new ObjectParameter("CompanyRefNo", typeof(string));
    
            var designationParameter = designation != null ?
                new ObjectParameter("Designation", designation) :
                new ObjectParameter("Designation", typeof(string));
    
            var designationRefNoParameter = designationRefNo != null ?
                new ObjectParameter("DesignationRefNo", designationRefNo) :
                new ObjectParameter("DesignationRefNo", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertDesignation", designationIDParameter, companyRefNoParameter, designationParameter, designationRefNoParameter, createdByParameter, returnID);
        }
    
        public virtual int sp_InsertDivision(Nullable<long> factoryID, string factoryName, string companyRefNo, string factoryEmailId, string role, string createdBy, ObjectParameter returnID)
        {
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(long));
    
            var factoryNameParameter = factoryName != null ?
                new ObjectParameter("FactoryName", factoryName) :
                new ObjectParameter("FactoryName", typeof(string));
    
            var companyRefNoParameter = companyRefNo != null ?
                new ObjectParameter("CompanyRefNo", companyRefNo) :
                new ObjectParameter("CompanyRefNo", typeof(string));
    
            var factoryEmailIdParameter = factoryEmailId != null ?
                new ObjectParameter("FactoryEmailId", factoryEmailId) :
                new ObjectParameter("FactoryEmailId", typeof(string));
    
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertDivision", factoryIDParameter, factoryNameParameter, companyRefNoParameter, factoryEmailIdParameter, roleParameter, createdByParameter, returnID);
        }
    
        public virtual int sp_InsertProductFromExcel(string companyRefNo, string role, Nullable<long> productLevel1, Nullable<long> productLevel2, Nullable<long> productLevel3, string productDescription, string nSCCode, string nIINCode, string oEMPartNumber, string oEMName, Nullable<long> oEMCountry, string dPSUPartNumber, string hSNCode, Nullable<long> endUser, Nullable<long> platform, Nullable<long> nomenclatureOfMainSystem, Nullable<long> technologyLevel1, Nullable<long> technologyLevel2, Nullable<long> technologyLevel3, string isIndeginized, string manufactureName, string manufactureAddress, Nullable<long> yearofIndiginization)
        {
            var companyRefNoParameter = companyRefNo != null ?
                new ObjectParameter("CompanyRefNo", companyRefNo) :
                new ObjectParameter("CompanyRefNo", typeof(string));
    
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            var productLevel1Parameter = productLevel1.HasValue ?
                new ObjectParameter("ProductLevel1", productLevel1) :
                new ObjectParameter("ProductLevel1", typeof(long));
    
            var productLevel2Parameter = productLevel2.HasValue ?
                new ObjectParameter("ProductLevel2", productLevel2) :
                new ObjectParameter("ProductLevel2", typeof(long));
    
            var productLevel3Parameter = productLevel3.HasValue ?
                new ObjectParameter("ProductLevel3", productLevel3) :
                new ObjectParameter("ProductLevel3", typeof(long));
    
            var productDescriptionParameter = productDescription != null ?
                new ObjectParameter("ProductDescription", productDescription) :
                new ObjectParameter("ProductDescription", typeof(string));
    
            var nSCCodeParameter = nSCCode != null ?
                new ObjectParameter("NSCCode", nSCCode) :
                new ObjectParameter("NSCCode", typeof(string));
    
            var nIINCodeParameter = nIINCode != null ?
                new ObjectParameter("NIINCode", nIINCode) :
                new ObjectParameter("NIINCode", typeof(string));
    
            var oEMPartNumberParameter = oEMPartNumber != null ?
                new ObjectParameter("OEMPartNumber", oEMPartNumber) :
                new ObjectParameter("OEMPartNumber", typeof(string));
    
            var oEMNameParameter = oEMName != null ?
                new ObjectParameter("OEMName", oEMName) :
                new ObjectParameter("OEMName", typeof(string));
    
            var oEMCountryParameter = oEMCountry.HasValue ?
                new ObjectParameter("OEMCountry", oEMCountry) :
                new ObjectParameter("OEMCountry", typeof(long));
    
            var dPSUPartNumberParameter = dPSUPartNumber != null ?
                new ObjectParameter("DPSUPartNumber", dPSUPartNumber) :
                new ObjectParameter("DPSUPartNumber", typeof(string));
    
            var hSNCodeParameter = hSNCode != null ?
                new ObjectParameter("HSNCode", hSNCode) :
                new ObjectParameter("HSNCode", typeof(string));
    
            var endUserParameter = endUser.HasValue ?
                new ObjectParameter("EndUser", endUser) :
                new ObjectParameter("EndUser", typeof(long));
    
            var platformParameter = platform.HasValue ?
                new ObjectParameter("Platform", platform) :
                new ObjectParameter("Platform", typeof(long));
    
            var nomenclatureOfMainSystemParameter = nomenclatureOfMainSystem.HasValue ?
                new ObjectParameter("NomenclatureOfMainSystem", nomenclatureOfMainSystem) :
                new ObjectParameter("NomenclatureOfMainSystem", typeof(long));
    
            var technologyLevel1Parameter = technologyLevel1.HasValue ?
                new ObjectParameter("TechnologyLevel1", technologyLevel1) :
                new ObjectParameter("TechnologyLevel1", typeof(long));
    
            var technologyLevel2Parameter = technologyLevel2.HasValue ?
                new ObjectParameter("TechnologyLevel2", technologyLevel2) :
                new ObjectParameter("TechnologyLevel2", typeof(long));
    
            var technologyLevel3Parameter = technologyLevel3.HasValue ?
                new ObjectParameter("TechnologyLevel3", technologyLevel3) :
                new ObjectParameter("TechnologyLevel3", typeof(long));
    
            var isIndeginizedParameter = isIndeginized != null ?
                new ObjectParameter("IsIndeginized", isIndeginized) :
                new ObjectParameter("IsIndeginized", typeof(string));
    
            var manufactureNameParameter = manufactureName != null ?
                new ObjectParameter("ManufactureName", manufactureName) :
                new ObjectParameter("ManufactureName", typeof(string));
    
            var manufactureAddressParameter = manufactureAddress != null ?
                new ObjectParameter("ManufactureAddress", manufactureAddress) :
                new ObjectParameter("ManufactureAddress", typeof(string));
    
            var yearofIndiginizationParameter = yearofIndiginization.HasValue ?
                new ObjectParameter("YearofIndiginization", yearofIndiginization) :
                new ObjectParameter("YearofIndiginization", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertProductFromExcel", companyRefNoParameter, roleParameter, productLevel1Parameter, productLevel2Parameter, productLevel3Parameter, productDescriptionParameter, nSCCodeParameter, nIINCodeParameter, oEMPartNumberParameter, oEMNameParameter, oEMCountryParameter, dPSUPartNumberParameter, hSNCodeParameter, endUserParameter, platformParameter, nomenclatureOfMainSystemParameter, technologyLevel1Parameter, technologyLevel2Parameter, technologyLevel3Parameter, isIndeginizedParameter, manufactureNameParameter, manufactureAddressParameter, yearofIndiginizationParameter);
        }
    
        public virtual int sp_InsertProductFromExcel1(Nullable<long> productID, string companyRefNo, Nullable<long> productLevel1, Nullable<long> productLevel2, Nullable<long> productLevel3, string nSCCode, Nullable<long> oEMCountry, string endUser, Nullable<long> platform, Nullable<long> nomenclatureOfMainSystem, Nullable<long> technologyLevel1, Nullable<long> technologyLevel2, string isProductImported, string purposeofProcurement, string qAAgency, string indProcess, Nullable<long> nodelDetail, string isShowGeneral, string role, string createdBy, string productDescription, string nIINCode, string featursandDetail, string oEMPartNumber, string oEMName, string oEMAddress, string dPSUPartNumber, string hsnCode8digit, string indTargetYear, string eOIStatus, string eOIURL, string eOIStartDate, string eOIEndDate, string supplyOrderStatus, string supplyManfutureName, string supplyManfutureAddress, string supplyOrderValue, string supplyDeliveryDate, string supplyOrderDate, string isIndeginized, string manufactureName, string manufactureAddress, Nullable<long> yearofIndiginization, string indeginizedDate, ObjectParameter returnId)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(long));
    
            var companyRefNoParameter = companyRefNo != null ?
                new ObjectParameter("CompanyRefNo", companyRefNo) :
                new ObjectParameter("CompanyRefNo", typeof(string));
    
            var productLevel1Parameter = productLevel1.HasValue ?
                new ObjectParameter("ProductLevel1", productLevel1) :
                new ObjectParameter("ProductLevel1", typeof(long));
    
            var productLevel2Parameter = productLevel2.HasValue ?
                new ObjectParameter("ProductLevel2", productLevel2) :
                new ObjectParameter("ProductLevel2", typeof(long));
    
            var productLevel3Parameter = productLevel3.HasValue ?
                new ObjectParameter("ProductLevel3", productLevel3) :
                new ObjectParameter("ProductLevel3", typeof(long));
    
            var nSCCodeParameter = nSCCode != null ?
                new ObjectParameter("NSCCode", nSCCode) :
                new ObjectParameter("NSCCode", typeof(string));
    
            var oEMCountryParameter = oEMCountry.HasValue ?
                new ObjectParameter("OEMCountry", oEMCountry) :
                new ObjectParameter("OEMCountry", typeof(long));
    
            var endUserParameter = endUser != null ?
                new ObjectParameter("EndUser", endUser) :
                new ObjectParameter("EndUser", typeof(string));
    
            var platformParameter = platform.HasValue ?
                new ObjectParameter("Platform", platform) :
                new ObjectParameter("Platform", typeof(long));
    
            var nomenclatureOfMainSystemParameter = nomenclatureOfMainSystem.HasValue ?
                new ObjectParameter("NomenclatureOfMainSystem", nomenclatureOfMainSystem) :
                new ObjectParameter("NomenclatureOfMainSystem", typeof(long));
    
            var technologyLevel1Parameter = technologyLevel1.HasValue ?
                new ObjectParameter("TechnologyLevel1", technologyLevel1) :
                new ObjectParameter("TechnologyLevel1", typeof(long));
    
            var technologyLevel2Parameter = technologyLevel2.HasValue ?
                new ObjectParameter("TechnologyLevel2", technologyLevel2) :
                new ObjectParameter("TechnologyLevel2", typeof(long));
    
            var isProductImportedParameter = isProductImported != null ?
                new ObjectParameter("IsProductImported", isProductImported) :
                new ObjectParameter("IsProductImported", typeof(string));
    
            var purposeofProcurementParameter = purposeofProcurement != null ?
                new ObjectParameter("PurposeofProcurement", purposeofProcurement) :
                new ObjectParameter("PurposeofProcurement", typeof(string));
    
            var qAAgencyParameter = qAAgency != null ?
                new ObjectParameter("QAAgency", qAAgency) :
                new ObjectParameter("QAAgency", typeof(string));
    
            var indProcessParameter = indProcess != null ?
                new ObjectParameter("IndProcess", indProcess) :
                new ObjectParameter("IndProcess", typeof(string));
    
            var nodelDetailParameter = nodelDetail.HasValue ?
                new ObjectParameter("NodelDetail", nodelDetail) :
                new ObjectParameter("NodelDetail", typeof(long));
    
            var isShowGeneralParameter = isShowGeneral != null ?
                new ObjectParameter("IsShowGeneral", isShowGeneral) :
                new ObjectParameter("IsShowGeneral", typeof(string));
    
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var productDescriptionParameter = productDescription != null ?
                new ObjectParameter("ProductDescription", productDescription) :
                new ObjectParameter("ProductDescription", typeof(string));
    
            var nIINCodeParameter = nIINCode != null ?
                new ObjectParameter("NIINCode", nIINCode) :
                new ObjectParameter("NIINCode", typeof(string));
    
            var featursandDetailParameter = featursandDetail != null ?
                new ObjectParameter("FeatursandDetail", featursandDetail) :
                new ObjectParameter("FeatursandDetail", typeof(string));
    
            var oEMPartNumberParameter = oEMPartNumber != null ?
                new ObjectParameter("OEMPartNumber", oEMPartNumber) :
                new ObjectParameter("OEMPartNumber", typeof(string));
    
            var oEMNameParameter = oEMName != null ?
                new ObjectParameter("OEMName", oEMName) :
                new ObjectParameter("OEMName", typeof(string));
    
            var oEMAddressParameter = oEMAddress != null ?
                new ObjectParameter("OEMAddress", oEMAddress) :
                new ObjectParameter("OEMAddress", typeof(string));
    
            var dPSUPartNumberParameter = dPSUPartNumber != null ?
                new ObjectParameter("DPSUPartNumber", dPSUPartNumber) :
                new ObjectParameter("DPSUPartNumber", typeof(string));
    
            var hsnCode8digitParameter = hsnCode8digit != null ?
                new ObjectParameter("HsnCode8digit", hsnCode8digit) :
                new ObjectParameter("HsnCode8digit", typeof(string));
    
            var indTargetYearParameter = indTargetYear != null ?
                new ObjectParameter("IndTargetYear", indTargetYear) :
                new ObjectParameter("IndTargetYear", typeof(string));
    
            var eOIStatusParameter = eOIStatus != null ?
                new ObjectParameter("EOIStatus", eOIStatus) :
                new ObjectParameter("EOIStatus", typeof(string));
    
            var eOIURLParameter = eOIURL != null ?
                new ObjectParameter("EOIURL", eOIURL) :
                new ObjectParameter("EOIURL", typeof(string));
    
            var eOIStartDateParameter = eOIStartDate != null ?
                new ObjectParameter("EOIStartDate", eOIStartDate) :
                new ObjectParameter("EOIStartDate", typeof(string));
    
            var eOIEndDateParameter = eOIEndDate != null ?
                new ObjectParameter("EOIEndDate", eOIEndDate) :
                new ObjectParameter("EOIEndDate", typeof(string));
    
            var supplyOrderStatusParameter = supplyOrderStatus != null ?
                new ObjectParameter("SupplyOrderStatus", supplyOrderStatus) :
                new ObjectParameter("SupplyOrderStatus", typeof(string));
    
            var supplyManfutureNameParameter = supplyManfutureName != null ?
                new ObjectParameter("SupplyManfutureName", supplyManfutureName) :
                new ObjectParameter("SupplyManfutureName", typeof(string));
    
            var supplyManfutureAddressParameter = supplyManfutureAddress != null ?
                new ObjectParameter("SupplyManfutureAddress", supplyManfutureAddress) :
                new ObjectParameter("SupplyManfutureAddress", typeof(string));
    
            var supplyOrderValueParameter = supplyOrderValue != null ?
                new ObjectParameter("SupplyOrderValue", supplyOrderValue) :
                new ObjectParameter("SupplyOrderValue", typeof(string));
    
            var supplyDeliveryDateParameter = supplyDeliveryDate != null ?
                new ObjectParameter("SupplyDeliveryDate", supplyDeliveryDate) :
                new ObjectParameter("SupplyDeliveryDate", typeof(string));
    
            var supplyOrderDateParameter = supplyOrderDate != null ?
                new ObjectParameter("SupplyOrderDate", supplyOrderDate) :
                new ObjectParameter("SupplyOrderDate", typeof(string));
    
            var isIndeginizedParameter = isIndeginized != null ?
                new ObjectParameter("IsIndeginized", isIndeginized) :
                new ObjectParameter("IsIndeginized", typeof(string));
    
            var manufactureNameParameter = manufactureName != null ?
                new ObjectParameter("ManufactureName", manufactureName) :
                new ObjectParameter("ManufactureName", typeof(string));
    
            var manufactureAddressParameter = manufactureAddress != null ?
                new ObjectParameter("ManufactureAddress", manufactureAddress) :
                new ObjectParameter("ManufactureAddress", typeof(string));
    
            var yearofIndiginizationParameter = yearofIndiginization.HasValue ?
                new ObjectParameter("YearofIndiginization", yearofIndiginization) :
                new ObjectParameter("YearofIndiginization", typeof(long));
    
            var indeginizedDateParameter = indeginizedDate != null ?
                new ObjectParameter("IndeginizedDate", indeginizedDate) :
                new ObjectParameter("IndeginizedDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertProductFromExcel1", productIDParameter, companyRefNoParameter, productLevel1Parameter, productLevel2Parameter, productLevel3Parameter, nSCCodeParameter, oEMCountryParameter, endUserParameter, platformParameter, nomenclatureOfMainSystemParameter, technologyLevel1Parameter, technologyLevel2Parameter, isProductImportedParameter, purposeofProcurementParameter, qAAgencyParameter, indProcessParameter, nodelDetailParameter, isShowGeneralParameter, roleParameter, createdByParameter, productDescriptionParameter, nIINCodeParameter, featursandDetailParameter, oEMPartNumberParameter, oEMNameParameter, oEMAddressParameter, dPSUPartNumberParameter, hsnCode8digitParameter, indTargetYearParameter, eOIStatusParameter, eOIURLParameter, eOIStartDateParameter, eOIEndDateParameter, supplyOrderStatusParameter, supplyManfutureNameParameter, supplyManfutureAddressParameter, supplyOrderValueParameter, supplyDeliveryDateParameter, supplyOrderDateParameter, isIndeginizedParameter, manufactureNameParameter, manufactureAddressParameter, yearofIndiginizationParameter, indeginizedDateParameter, returnId);
        }
    
        public virtual int sp_InsertProductFromExcel1forSHQ(Nullable<long> productID, string companyRefNo, string indProcess, string isShowGeneral, string indTargetYear, string isProductImported, Nullable<long> nodelDetail, string role, string createdBy, string yearofIndiginization, ObjectParameter returnId)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(long));
    
            var companyRefNoParameter = companyRefNo != null ?
                new ObjectParameter("CompanyRefNo", companyRefNo) :
                new ObjectParameter("CompanyRefNo", typeof(string));
    
            var indProcessParameter = indProcess != null ?
                new ObjectParameter("IndProcess", indProcess) :
                new ObjectParameter("IndProcess", typeof(string));
    
            var isShowGeneralParameter = isShowGeneral != null ?
                new ObjectParameter("IsShowGeneral", isShowGeneral) :
                new ObjectParameter("IsShowGeneral", typeof(string));
    
            var indTargetYearParameter = indTargetYear != null ?
                new ObjectParameter("IndTargetYear", indTargetYear) :
                new ObjectParameter("IndTargetYear", typeof(string));
    
            var isProductImportedParameter = isProductImported != null ?
                new ObjectParameter("IsProductImported", isProductImported) :
                new ObjectParameter("IsProductImported", typeof(string));
    
            var nodelDetailParameter = nodelDetail.HasValue ?
                new ObjectParameter("NodelDetail", nodelDetail) :
                new ObjectParameter("NodelDetail", typeof(long));
    
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var yearofIndiginizationParameter = yearofIndiginization != null ?
                new ObjectParameter("YearofIndiginization", yearofIndiginization) :
                new ObjectParameter("YearofIndiginization", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertProductFromExcel1forSHQ", productIDParameter, companyRefNoParameter, indProcessParameter, isShowGeneralParameter, indTargetYearParameter, isProductImportedParameter, nodelDetailParameter, roleParameter, createdByParameter, yearofIndiginizationParameter, returnId);
        }
    
        public virtual ObjectResult<sp_InsertProductInfo_Result> sp_InsertProductInfo(string function, string prodRefNo, Nullable<long> prodInfoId, string name, string value, string unit)
        {
            var functionParameter = function != null ?
                new ObjectParameter("Function", function) :
                new ObjectParameter("Function", typeof(string));
    
            var prodRefNoParameter = prodRefNo != null ?
                new ObjectParameter("ProdRefNo", prodRefNo) :
                new ObjectParameter("ProdRefNo", typeof(string));
    
            var prodInfoIdParameter = prodInfoId.HasValue ?
                new ObjectParameter("ProdInfoId", prodInfoId) :
                new ObjectParameter("ProdInfoId", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var unitParameter = unit != null ?
                new ObjectParameter("Unit", unit) :
                new ObjectParameter("Unit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_InsertProductInfo_Result>("sp_InsertProductInfo", functionParameter, prodRefNoParameter, prodInfoIdParameter, nameParameter, valueParameter, unitParameter);
        }
    
        public virtual ObjectResult<sp_InsertProductPrice_Result> sp_InsertProductPrice(string function, Nullable<long> prodQtyId, string prodRefNo, Nullable<int> year, string fYear, string estimatedQty, string unit, string estimatedPrice, string type)
        {
            var functionParameter = function != null ?
                new ObjectParameter("Function", function) :
                new ObjectParameter("Function", typeof(string));
    
            var prodQtyIdParameter = prodQtyId.HasValue ?
                new ObjectParameter("ProdQtyId", prodQtyId) :
                new ObjectParameter("ProdQtyId", typeof(long));
    
            var prodRefNoParameter = prodRefNo != null ?
                new ObjectParameter("ProdRefNo", prodRefNo) :
                new ObjectParameter("ProdRefNo", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var fYearParameter = fYear != null ?
                new ObjectParameter("fYear", fYear) :
                new ObjectParameter("fYear", typeof(string));
    
            var estimatedQtyParameter = estimatedQty != null ?
                new ObjectParameter("EstimatedQty", estimatedQty) :
                new ObjectParameter("EstimatedQty", typeof(string));
    
            var unitParameter = unit != null ?
                new ObjectParameter("Unit", unit) :
                new ObjectParameter("Unit", typeof(string));
    
            var estimatedPriceParameter = estimatedPrice != null ?
                new ObjectParameter("EstimatedPrice", estimatedPrice) :
                new ObjectParameter("EstimatedPrice", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_InsertProductPrice_Result>("sp_InsertProductPrice", functionParameter, prodQtyIdParameter, prodRefNoParameter, yearParameter, fYearParameter, estimatedQtyParameter, unitParameter, estimatedPriceParameter, typeParameter);
        }
    
        public virtual int sp_InsertUnit(Nullable<long> unitID, string unitName, string factoryRefNo, string unitEmailId, string role, string createdBy, ObjectParameter returnID)
        {
            var unitIDParameter = unitID.HasValue ?
                new ObjectParameter("UnitID", unitID) :
                new ObjectParameter("UnitID", typeof(long));
    
            var unitNameParameter = unitName != null ?
                new ObjectParameter("UnitName", unitName) :
                new ObjectParameter("UnitName", typeof(string));
    
            var factoryRefNoParameter = factoryRefNo != null ?
                new ObjectParameter("FactoryRefNo", factoryRefNo) :
                new ObjectParameter("FactoryRefNo", typeof(string));
    
            var unitEmailIdParameter = unitEmailId != null ?
                new ObjectParameter("UnitEmailId", unitEmailId) :
                new ObjectParameter("UnitEmailId", typeof(string));
    
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertUnit", unitIDParameter, unitNameParameter, factoryRefNoParameter, unitEmailIdParameter, roleParameter, createdByParameter, returnID);
        }
    
        public virtual int sp_InsertVendorFromExcel(Nullable<long> vendorID, string v_RegisterdDPSU, string panNo, string gSTNo, string v_CompName, string authPath, string nodalOfficerName, string nodalOfficerEmail, string isEsignVerify, string inviteDPSU, string isInvitation, string registrationNo, Nullable<System.DateTime> validtill, ObjectParameter returnId)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(long));
    
            var v_RegisterdDPSUParameter = v_RegisterdDPSU != null ?
                new ObjectParameter("V_RegisterdDPSU", v_RegisterdDPSU) :
                new ObjectParameter("V_RegisterdDPSU", typeof(string));
    
            var panNoParameter = panNo != null ?
                new ObjectParameter("PanNo", panNo) :
                new ObjectParameter("PanNo", typeof(string));
    
            var gSTNoParameter = gSTNo != null ?
                new ObjectParameter("GSTNo", gSTNo) :
                new ObjectParameter("GSTNo", typeof(string));
    
            var v_CompNameParameter = v_CompName != null ?
                new ObjectParameter("V_CompName", v_CompName) :
                new ObjectParameter("V_CompName", typeof(string));
    
            var authPathParameter = authPath != null ?
                new ObjectParameter("AuthPath", authPath) :
                new ObjectParameter("AuthPath", typeof(string));
    
            var nodalOfficerNameParameter = nodalOfficerName != null ?
                new ObjectParameter("NodalOfficerName", nodalOfficerName) :
                new ObjectParameter("NodalOfficerName", typeof(string));
    
            var nodalOfficerEmailParameter = nodalOfficerEmail != null ?
                new ObjectParameter("NodalOfficerEmail", nodalOfficerEmail) :
                new ObjectParameter("NodalOfficerEmail", typeof(string));
    
            var isEsignVerifyParameter = isEsignVerify != null ?
                new ObjectParameter("IsEsignVerify", isEsignVerify) :
                new ObjectParameter("IsEsignVerify", typeof(string));
    
            var inviteDPSUParameter = inviteDPSU != null ?
                new ObjectParameter("InviteDPSU", inviteDPSU) :
                new ObjectParameter("InviteDPSU", typeof(string));
    
            var isInvitationParameter = isInvitation != null ?
                new ObjectParameter("IsInvitation", isInvitation) :
                new ObjectParameter("IsInvitation", typeof(string));
    
            var registrationNoParameter = registrationNo != null ?
                new ObjectParameter("RegistrationNo", registrationNo) :
                new ObjectParameter("RegistrationNo", typeof(string));
    
            var validtillParameter = validtill.HasValue ?
                new ObjectParameter("Validtill", validtill) :
                new ObjectParameter("Validtill", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertVendorFromExcel", vendorIDParameter, v_RegisterdDPSUParameter, panNoParameter, gSTNoParameter, v_CompNameParameter, authPathParameter, nodalOfficerNameParameter, nodalOfficerEmailParameter, isEsignVerifyParameter, inviteDPSUParameter, isInvitationParameter, registrationNoParameter, validtillParameter, returnId);
        }
    
        public virtual int sp_Log(string userId, string iPAddress, string systemName, string form, string activity, string loginDate, string loginTime)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var iPAddressParameter = iPAddress != null ?
                new ObjectParameter("IPAddress", iPAddress) :
                new ObjectParameter("IPAddress", typeof(string));
    
            var systemNameParameter = systemName != null ?
                new ObjectParameter("SystemName", systemName) :
                new ObjectParameter("SystemName", typeof(string));
    
            var formParameter = form != null ?
                new ObjectParameter("Form", form) :
                new ObjectParameter("Form", typeof(string));
    
            var activityParameter = activity != null ?
                new ObjectParameter("Activity", activity) :
                new ObjectParameter("Activity", typeof(string));
    
            var loginDateParameter = loginDate != null ?
                new ObjectParameter("LoginDate", loginDate) :
                new ObjectParameter("LoginDate", typeof(string));
    
            var loginTimeParameter = loginTime != null ?
                new ObjectParameter("LoginTime", loginTime) :
                new ObjectParameter("LoginTime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Log", userIdParameter, iPAddressParameter, systemNameParameter, formParameter, activityParameter, loginDateParameter, loginTimeParameter);
        }
    
        public virtual int sp_LogFeedbackMail(string isMailSend, Nullable<System.DateTime> recInsTime)
        {
            var isMailSendParameter = isMailSend != null ?
                new ObjectParameter("IsMailSend", isMailSend) :
                new ObjectParameter("IsMailSend", typeof(string));
    
            var recInsTimeParameter = recInsTime.HasValue ?
                new ObjectParameter("RecInsTime", recInsTime) :
                new ObjectParameter("RecInsTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_LogFeedbackMail", isMailSendParameter, recInsTimeParameter);
        }
    
        public virtual int sp_LogOutStatus(string loginUser, string isLogedIn, Nullable<System.DateTime> isLogedOutTime, string iPAddress, string systemName, string activity)
        {
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var isLogedInParameter = isLogedIn != null ?
                new ObjectParameter("IsLogedIn", isLogedIn) :
                new ObjectParameter("IsLogedIn", typeof(string));
    
            var isLogedOutTimeParameter = isLogedOutTime.HasValue ?
                new ObjectParameter("IsLogedOutTime", isLogedOutTime) :
                new ObjectParameter("IsLogedOutTime", typeof(System.DateTime));
    
            var iPAddressParameter = iPAddress != null ?
                new ObjectParameter("IPAddress", iPAddress) :
                new ObjectParameter("IPAddress", typeof(string));
    
            var systemNameParameter = systemName != null ?
                new ObjectParameter("SystemName", systemName) :
                new ObjectParameter("SystemName", typeof(string));
    
            var activityParameter = activity != null ?
                new ObjectParameter("Activity", activity) :
                new ObjectParameter("Activity", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_LogOutStatus", loginUserParameter, isLogedInParameter, isLogedOutTimeParameter, iPAddressParameter, systemNameParameter, activityParameter);
        }
    
        public virtual ObjectResult<sp_LogoutTime_Result> sp_LogoutTime(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_LogoutTime_Result>("sp_LogoutTime", userIdParameter);
        }
    
        public virtual int sp_LogProduct(string prodRefNo, string productChanges, string changesBy, string status, string mailsend)
        {
            var prodRefNoParameter = prodRefNo != null ?
                new ObjectParameter("ProdRefNo", prodRefNo) :
                new ObjectParameter("ProdRefNo", typeof(string));
    
            var productChangesParameter = productChanges != null ?
                new ObjectParameter("ProductChanges", productChanges) :
                new ObjectParameter("ProductChanges", typeof(string));
    
            var changesByParameter = changesBy != null ?
                new ObjectParameter("ChangesBy", changesBy) :
                new ObjectParameter("ChangesBy", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var mailsendParameter = mailsend != null ?
                new ObjectParameter("Mailsend", mailsend) :
                new ObjectParameter("Mailsend", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_LogProduct", prodRefNoParameter, productChangesParameter, changesByParameter, statusParameter, mailsendParameter);
        }
    
        public virtual ObjectResult<sp_MasterCategory_Result> sp_MasterCategory(Nullable<int> catID, string catName, string sCatValue, string flag, string active, string criteria, string createdBy)
        {
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var catNameParameter = catName != null ?
                new ObjectParameter("CatName", catName) :
                new ObjectParameter("CatName", typeof(string));
    
            var sCatValueParameter = sCatValue != null ?
                new ObjectParameter("SCatValue", sCatValue) :
                new ObjectParameter("SCatValue", typeof(string));
    
            var flagParameter = flag != null ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(string));
    
            var activeParameter = active != null ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(string));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MasterCategory_Result>("sp_MasterCategory", catIDParameter, catNameParameter, sCatValueParameter, flagParameter, activeParameter, criteriaParameter, createdByParameter);
        }
    
        public virtual int sp_MigrateVendorProfilelVPM(string nodelOffName, string email, string mobno, string street1, string street2, string city1, string state1, string zipcode1, string vedtRid, string auth, string ident, string flag1, string flag2)
        {
            var nodelOffNameParameter = nodelOffName != null ?
                new ObjectParameter("NodelOffName", nodelOffName) :
                new ObjectParameter("NodelOffName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var mobnoParameter = mobno != null ?
                new ObjectParameter("Mobno", mobno) :
                new ObjectParameter("Mobno", typeof(string));
    
            var street1Parameter = street1 != null ?
                new ObjectParameter("street1", street1) :
                new ObjectParameter("street1", typeof(string));
    
            var street2Parameter = street2 != null ?
                new ObjectParameter("street2", street2) :
                new ObjectParameter("street2", typeof(string));
    
            var city1Parameter = city1 != null ?
                new ObjectParameter("city1", city1) :
                new ObjectParameter("city1", typeof(string));
    
            var state1Parameter = state1 != null ?
                new ObjectParameter("state1", state1) :
                new ObjectParameter("state1", typeof(string));
    
            var zipcode1Parameter = zipcode1 != null ?
                new ObjectParameter("zipcode1", zipcode1) :
                new ObjectParameter("zipcode1", typeof(string));
    
            var vedtRidParameter = vedtRid != null ?
                new ObjectParameter("VedtRid", vedtRid) :
                new ObjectParameter("VedtRid", typeof(string));
    
            var authParameter = auth != null ?
                new ObjectParameter("Auth", auth) :
                new ObjectParameter("Auth", typeof(string));
    
            var identParameter = ident != null ?
                new ObjectParameter("Ident", ident) :
                new ObjectParameter("Ident", typeof(string));
    
            var flag1Parameter = flag1 != null ?
                new ObjectParameter("flag1", flag1) :
                new ObjectParameter("flag1", typeof(string));
    
            var flag2Parameter = flag2 != null ?
                new ObjectParameter("flag2", flag2) :
                new ObjectParameter("flag2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MigrateVendorProfilelVPM", nodelOffNameParameter, emailParameter, mobnoParameter, street1Parameter, street2Parameter, city1Parameter, state1Parameter, zipcode1Parameter, vedtRidParameter, authParameter, identParameter, flag1Parameter, flag2Parameter);
        }
    
        public virtual int sp_mst_CompanySelectedCategory(Nullable<long> compCatRelationId, string companyRefNo, Nullable<int> mCategoryId, string sCategoryId, string createdBy)
        {
            var compCatRelationIdParameter = compCatRelationId.HasValue ?
                new ObjectParameter("CompCatRelationId", compCatRelationId) :
                new ObjectParameter("CompCatRelationId", typeof(long));
    
            var companyRefNoParameter = companyRefNo != null ?
                new ObjectParameter("CompanyRefNo", companyRefNo) :
                new ObjectParameter("CompanyRefNo", typeof(string));
    
            var mCategoryIdParameter = mCategoryId.HasValue ?
                new ObjectParameter("MCategoryId", mCategoryId) :
                new ObjectParameter("MCategoryId", typeof(int));
    
            var sCategoryIdParameter = sCategoryId != null ?
                new ObjectParameter("SCategoryId", sCategoryId) :
                new ObjectParameter("SCategoryId", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_mst_CompanySelectedCategory", compCatRelationIdParameter, companyRefNoParameter, mCategoryIdParameter, sCategoryIdParameter, createdByParameter);
        }
    
        public virtual int sp_mst_mainProduct(Nullable<long> productID, string productRefNo, string companyRefNo, Nullable<long> productLevel1, Nullable<long> productLevel2, Nullable<long> productLevel3, string productDescription, string nSCCode, string nIINCode, string featursandDetail, string oEMPartNumber, string oEMName, Nullable<long> oEMCountry, string oEMAddress, string dPSUPartNumber, string hsnCode8digit, string endUser, Nullable<long> platform, Nullable<long> nomenclatureOfMainSystem, Nullable<long> technologyLevel1, Nullable<long> technologyLevel2, string isProductImported, string indTargetYear, string eOIStatus, string eOIURL, string eOIStartDate, string eOIEndDate, string supplyOrderStatus, string supplyManfutureName, string supplyManfutureAddress, string supplyOrderValue, string supplyDeliveryDate, string supplyOrderDate, string sanctionOrderStatus, string sanctionReason, string sanctionOrderDate, string sanctionManfutureName, string sanctionManfutureAddress, string indProcess, string isIndeginized, string manufactureName, string manufactureAddress, Nullable<long> yearofIndiginization, string indeginizedDate, Nullable<decimal> indeginizedMaxValue, string purposeofProcurement, string qAAgency, Nullable<long> nodelDetail, Nullable<long> nodalDetail2, string isShowGeneral, string role, string createdBy, string criteria, string viewOnlyStatus, string viewOnlyReasone, ObjectParameter returnId)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(long));
    
            var productRefNoParameter = productRefNo != null ?
                new ObjectParameter("ProductRefNo", productRefNo) :
                new ObjectParameter("ProductRefNo", typeof(string));
    
            var companyRefNoParameter = companyRefNo != null ?
                new ObjectParameter("CompanyRefNo", companyRefNo) :
                new ObjectParameter("CompanyRefNo", typeof(string));
    
            var productLevel1Parameter = productLevel1.HasValue ?
                new ObjectParameter("ProductLevel1", productLevel1) :
                new ObjectParameter("ProductLevel1", typeof(long));
    
            var productLevel2Parameter = productLevel2.HasValue ?
                new ObjectParameter("ProductLevel2", productLevel2) :
                new ObjectParameter("ProductLevel2", typeof(long));
    
            var productLevel3Parameter = productLevel3.HasValue ?
                new ObjectParameter("ProductLevel3", productLevel3) :
                new ObjectParameter("ProductLevel3", typeof(long));
    
            var productDescriptionParameter = productDescription != null ?
                new ObjectParameter("ProductDescription", productDescription) :
                new ObjectParameter("ProductDescription", typeof(string));
    
            var nSCCodeParameter = nSCCode != null ?
                new ObjectParameter("NSCCode", nSCCode) :
                new ObjectParameter("NSCCode", typeof(string));
    
            var nIINCodeParameter = nIINCode != null ?
                new ObjectParameter("NIINCode", nIINCode) :
                new ObjectParameter("NIINCode", typeof(string));
    
            var featursandDetailParameter = featursandDetail != null ?
                new ObjectParameter("FeatursandDetail", featursandDetail) :
                new ObjectParameter("FeatursandDetail", typeof(string));
    
            var oEMPartNumberParameter = oEMPartNumber != null ?
                new ObjectParameter("OEMPartNumber", oEMPartNumber) :
                new ObjectParameter("OEMPartNumber", typeof(string));
    
            var oEMNameParameter = oEMName != null ?
                new ObjectParameter("OEMName", oEMName) :
                new ObjectParameter("OEMName", typeof(string));
    
            var oEMCountryParameter = oEMCountry.HasValue ?
                new ObjectParameter("OEMCountry", oEMCountry) :
                new ObjectParameter("OEMCountry", typeof(long));
    
            var oEMAddressParameter = oEMAddress != null ?
                new ObjectParameter("OEMAddress", oEMAddress) :
                new ObjectParameter("OEMAddress", typeof(string));
    
            var dPSUPartNumberParameter = dPSUPartNumber != null ?
                new ObjectParameter("DPSUPartNumber", dPSUPartNumber) :
                new ObjectParameter("DPSUPartNumber", typeof(string));
    
            var hsnCode8digitParameter = hsnCode8digit != null ?
                new ObjectParameter("HsnCode8digit", hsnCode8digit) :
                new ObjectParameter("HsnCode8digit", typeof(string));
    
            var endUserParameter = endUser != null ?
                new ObjectParameter("EndUser", endUser) :
                new ObjectParameter("EndUser", typeof(string));
    
            var platformParameter = platform.HasValue ?
                new ObjectParameter("Platform", platform) :
                new ObjectParameter("Platform", typeof(long));
    
            var nomenclatureOfMainSystemParameter = nomenclatureOfMainSystem.HasValue ?
                new ObjectParameter("NomenclatureOfMainSystem", nomenclatureOfMainSystem) :
                new ObjectParameter("NomenclatureOfMainSystem", typeof(long));
    
            var technologyLevel1Parameter = technologyLevel1.HasValue ?
                new ObjectParameter("TechnologyLevel1", technologyLevel1) :
                new ObjectParameter("TechnologyLevel1", typeof(long));
    
            var technologyLevel2Parameter = technologyLevel2.HasValue ?
                new ObjectParameter("TechnologyLevel2", technologyLevel2) :
                new ObjectParameter("TechnologyLevel2", typeof(long));
    
            var isProductImportedParameter = isProductImported != null ?
                new ObjectParameter("IsProductImported", isProductImported) :
                new ObjectParameter("IsProductImported", typeof(string));
    
            var indTargetYearParameter = indTargetYear != null ?
                new ObjectParameter("IndTargetYear", indTargetYear) :
                new ObjectParameter("IndTargetYear", typeof(string));
    
            var eOIStatusParameter = eOIStatus != null ?
                new ObjectParameter("EOIStatus", eOIStatus) :
                new ObjectParameter("EOIStatus", typeof(string));
    
            var eOIURLParameter = eOIURL != null ?
                new ObjectParameter("EOIURL", eOIURL) :
                new ObjectParameter("EOIURL", typeof(string));
    
            var eOIStartDateParameter = eOIStartDate != null ?
                new ObjectParameter("EOIStartDate", eOIStartDate) :
                new ObjectParameter("EOIStartDate", typeof(string));
    
            var eOIEndDateParameter = eOIEndDate != null ?
                new ObjectParameter("EOIEndDate", eOIEndDate) :
                new ObjectParameter("EOIEndDate", typeof(string));
    
            var supplyOrderStatusParameter = supplyOrderStatus != null ?
                new ObjectParameter("SupplyOrderStatus", supplyOrderStatus) :
                new ObjectParameter("SupplyOrderStatus", typeof(string));
    
            var supplyManfutureNameParameter = supplyManfutureName != null ?
                new ObjectParameter("SupplyManfutureName", supplyManfutureName) :
                new ObjectParameter("SupplyManfutureName", typeof(string));
    
            var supplyManfutureAddressParameter = supplyManfutureAddress != null ?
                new ObjectParameter("SupplyManfutureAddress", supplyManfutureAddress) :
                new ObjectParameter("SupplyManfutureAddress", typeof(string));
    
            var supplyOrderValueParameter = supplyOrderValue != null ?
                new ObjectParameter("SupplyOrderValue", supplyOrderValue) :
                new ObjectParameter("SupplyOrderValue", typeof(string));
    
            var supplyDeliveryDateParameter = supplyDeliveryDate != null ?
                new ObjectParameter("SupplyDeliveryDate", supplyDeliveryDate) :
                new ObjectParameter("SupplyDeliveryDate", typeof(string));
    
            var supplyOrderDateParameter = supplyOrderDate != null ?
                new ObjectParameter("SupplyOrderDate", supplyOrderDate) :
                new ObjectParameter("SupplyOrderDate", typeof(string));
    
            var sanctionOrderStatusParameter = sanctionOrderStatus != null ?
                new ObjectParameter("SanctionOrderStatus", sanctionOrderStatus) :
                new ObjectParameter("SanctionOrderStatus", typeof(string));
    
            var sanctionReasonParameter = sanctionReason != null ?
                new ObjectParameter("SanctionReason", sanctionReason) :
                new ObjectParameter("SanctionReason", typeof(string));
    
            var sanctionOrderDateParameter = sanctionOrderDate != null ?
                new ObjectParameter("SanctionOrderDate", sanctionOrderDate) :
                new ObjectParameter("SanctionOrderDate", typeof(string));
    
            var sanctionManfutureNameParameter = sanctionManfutureName != null ?
                new ObjectParameter("SanctionManfutureName", sanctionManfutureName) :
                new ObjectParameter("SanctionManfutureName", typeof(string));
    
            var sanctionManfutureAddressParameter = sanctionManfutureAddress != null ?
                new ObjectParameter("SanctionManfutureAddress", sanctionManfutureAddress) :
                new ObjectParameter("SanctionManfutureAddress", typeof(string));
    
            var indProcessParameter = indProcess != null ?
                new ObjectParameter("IndProcess", indProcess) :
                new ObjectParameter("IndProcess", typeof(string));
    
            var isIndeginizedParameter = isIndeginized != null ?
                new ObjectParameter("IsIndeginized", isIndeginized) :
                new ObjectParameter("IsIndeginized", typeof(string));
    
            var manufactureNameParameter = manufactureName != null ?
                new ObjectParameter("ManufactureName", manufactureName) :
                new ObjectParameter("ManufactureName", typeof(string));
    
            var manufactureAddressParameter = manufactureAddress != null ?
                new ObjectParameter("ManufactureAddress", manufactureAddress) :
                new ObjectParameter("ManufactureAddress", typeof(string));
    
            var yearofIndiginizationParameter = yearofIndiginization.HasValue ?
                new ObjectParameter("YearofIndiginization", yearofIndiginization) :
                new ObjectParameter("YearofIndiginization", typeof(long));
    
            var indeginizedDateParameter = indeginizedDate != null ?
                new ObjectParameter("IndeginizedDate", indeginizedDate) :
                new ObjectParameter("IndeginizedDate", typeof(string));
    
            var indeginizedMaxValueParameter = indeginizedMaxValue.HasValue ?
                new ObjectParameter("IndeginizedMaxValue", indeginizedMaxValue) :
                new ObjectParameter("IndeginizedMaxValue", typeof(decimal));
    
            var purposeofProcurementParameter = purposeofProcurement != null ?
                new ObjectParameter("PurposeofProcurement", purposeofProcurement) :
                new ObjectParameter("PurposeofProcurement", typeof(string));
    
            var qAAgencyParameter = qAAgency != null ?
                new ObjectParameter("QAAgency", qAAgency) :
                new ObjectParameter("QAAgency", typeof(string));
    
            var nodelDetailParameter = nodelDetail.HasValue ?
                new ObjectParameter("NodelDetail", nodelDetail) :
                new ObjectParameter("NodelDetail", typeof(long));
    
            var nodalDetail2Parameter = nodalDetail2.HasValue ?
                new ObjectParameter("NodalDetail2", nodalDetail2) :
                new ObjectParameter("NodalDetail2", typeof(long));
    
            var isShowGeneralParameter = isShowGeneral != null ?
                new ObjectParameter("IsShowGeneral", isShowGeneral) :
                new ObjectParameter("IsShowGeneral", typeof(string));
    
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var viewOnlyStatusParameter = viewOnlyStatus != null ?
                new ObjectParameter("ViewOnlyStatus", viewOnlyStatus) :
                new ObjectParameter("ViewOnlyStatus", typeof(string));
    
            var viewOnlyReasoneParameter = viewOnlyReasone != null ?
                new ObjectParameter("ViewOnlyReasone", viewOnlyReasone) :
                new ObjectParameter("ViewOnlyReasone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_mst_mainProduct", productIDParameter, productRefNoParameter, companyRefNoParameter, productLevel1Parameter, productLevel2Parameter, productLevel3Parameter, productDescriptionParameter, nSCCodeParameter, nIINCodeParameter, featursandDetailParameter, oEMPartNumberParameter, oEMNameParameter, oEMCountryParameter, oEMAddressParameter, dPSUPartNumberParameter, hsnCode8digitParameter, endUserParameter, platformParameter, nomenclatureOfMainSystemParameter, technologyLevel1Parameter, technologyLevel2Parameter, isProductImportedParameter, indTargetYearParameter, eOIStatusParameter, eOIURLParameter, eOIStartDateParameter, eOIEndDateParameter, supplyOrderStatusParameter, supplyManfutureNameParameter, supplyManfutureAddressParameter, supplyOrderValueParameter, supplyDeliveryDateParameter, supplyOrderDateParameter, sanctionOrderStatusParameter, sanctionReasonParameter, sanctionOrderDateParameter, sanctionManfutureNameParameter, sanctionManfutureAddressParameter, indProcessParameter, isIndeginizedParameter, manufactureNameParameter, manufactureAddressParameter, yearofIndiginizationParameter, indeginizedDateParameter, indeginizedMaxValueParameter, purposeofProcurementParameter, qAAgencyParameter, nodelDetailParameter, nodalDetail2Parameter, isShowGeneralParameter, roleParameter, createdByParameter, criteriaParameter, viewOnlyStatusParameter, viewOnlyReasoneParameter, returnId);
        }
    
        public virtual int sp_mst_Product(Nullable<long> productID, string productNomenclature, string productDescription, Nullable<int> productCategory, Nullable<int> productSubCategory, Nullable<int> technologyCategory, Nullable<int> technologySubCategory, Nullable<int> endUser, string productAlreadyIndeginized, Nullable<int> levelofAggregation, Nullable<int> purposeofProcurement, Nullable<int> aggregateRequirement, string searchKeyword, string criteria, ObjectParameter pID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(long));
    
            var productNomenclatureParameter = productNomenclature != null ?
                new ObjectParameter("ProductNomenclature", productNomenclature) :
                new ObjectParameter("ProductNomenclature", typeof(string));
    
            var productDescriptionParameter = productDescription != null ?
                new ObjectParameter("ProductDescription", productDescription) :
                new ObjectParameter("ProductDescription", typeof(string));
    
            var productCategoryParameter = productCategory.HasValue ?
                new ObjectParameter("ProductCategory", productCategory) :
                new ObjectParameter("ProductCategory", typeof(int));
    
            var productSubCategoryParameter = productSubCategory.HasValue ?
                new ObjectParameter("ProductSubCategory", productSubCategory) :
                new ObjectParameter("ProductSubCategory", typeof(int));
    
            var technologyCategoryParameter = technologyCategory.HasValue ?
                new ObjectParameter("TechnologyCategory", technologyCategory) :
                new ObjectParameter("TechnologyCategory", typeof(int));
    
            var technologySubCategoryParameter = technologySubCategory.HasValue ?
                new ObjectParameter("TechnologySubCategory", technologySubCategory) :
                new ObjectParameter("TechnologySubCategory", typeof(int));
    
            var endUserParameter = endUser.HasValue ?
                new ObjectParameter("EndUser", endUser) :
                new ObjectParameter("EndUser", typeof(int));
    
            var productAlreadyIndeginizedParameter = productAlreadyIndeginized != null ?
                new ObjectParameter("ProductAlreadyIndeginized", productAlreadyIndeginized) :
                new ObjectParameter("ProductAlreadyIndeginized", typeof(string));
    
            var levelofAggregationParameter = levelofAggregation.HasValue ?
                new ObjectParameter("LevelofAggregation", levelofAggregation) :
                new ObjectParameter("LevelofAggregation", typeof(int));
    
            var purposeofProcurementParameter = purposeofProcurement.HasValue ?
                new ObjectParameter("PurposeofProcurement", purposeofProcurement) :
                new ObjectParameter("PurposeofProcurement", typeof(int));
    
            var aggregateRequirementParameter = aggregateRequirement.HasValue ?
                new ObjectParameter("AggregateRequirement", aggregateRequirement) :
                new ObjectParameter("AggregateRequirement", typeof(int));
    
            var searchKeywordParameter = searchKeyword != null ?
                new ObjectParameter("SearchKeyword", searchKeyword) :
                new ObjectParameter("SearchKeyword", typeof(string));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_mst_Product", productIDParameter, productNomenclatureParameter, productDescriptionParameter, productCategoryParameter, productSubCategoryParameter, technologyCategoryParameter, technologySubCategoryParameter, endUserParameter, productAlreadyIndeginizedParameter, levelofAggregationParameter, purposeofProcurementParameter, aggregateRequirementParameter, searchKeywordParameter, criteriaParameter, pID);
        }
    
        public virtual int sp_mst_updatemainProduct(string productRefNo, Nullable<long> productLevel1, Nullable<long> productLevel2, Nullable<long> productLevel3, string productDescription, string nSCCode, string nIINCode)
        {
            var productRefNoParameter = productRefNo != null ?
                new ObjectParameter("ProductRefNo", productRefNo) :
                new ObjectParameter("ProductRefNo", typeof(string));
    
            var productLevel1Parameter = productLevel1.HasValue ?
                new ObjectParameter("ProductLevel1", productLevel1) :
                new ObjectParameter("ProductLevel1", typeof(long));
    
            var productLevel2Parameter = productLevel2.HasValue ?
                new ObjectParameter("ProductLevel2", productLevel2) :
                new ObjectParameter("ProductLevel2", typeof(long));
    
            var productLevel3Parameter = productLevel3.HasValue ?
                new ObjectParameter("ProductLevel3", productLevel3) :
                new ObjectParameter("ProductLevel3", typeof(long));
    
            var productDescriptionParameter = productDescription != null ?
                new ObjectParameter("ProductDescription", productDescription) :
                new ObjectParameter("ProductDescription", typeof(string));
    
            var nSCCodeParameter = nSCCode != null ?
                new ObjectParameter("NSCCode", nSCCode) :
                new ObjectParameter("NSCCode", typeof(string));
    
            var nIINCodeParameter = nIINCode != null ?
                new ObjectParameter("NIINCode", nIINCode) :
                new ObjectParameter("NIINCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_mst_updatemainProduct", productRefNoParameter, productLevel1Parameter, productLevel2Parameter, productLevel3Parameter, productDescriptionParameter, nSCCodeParameter, nIINCodeParameter);
        }
    
        public virtual ObjectResult<sp_MultipleKeywordSearchCompanyGRID_Result> sp_MultipleKeywordSearchCompanyGRID(string str)
        {
            var strParameter = str != null ?
                new ObjectParameter("str", str) :
                new ObjectParameter("str", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MultipleKeywordSearchCompanyGRID_Result>("sp_MultipleKeywordSearchCompanyGRID", strParameter);
        }
    
        public virtual ObjectResult<sp_MultipleKeywordSearchFDIGRID_Result> sp_MultipleKeywordSearchFDIGRID(string str)
        {
            var strParameter = str != null ?
                new ObjectParameter("str", str) :
                new ObjectParameter("str", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MultipleKeywordSearchFDIGRID_Result>("sp_MultipleKeywordSearchFDIGRID", strParameter);
        }
    
        public virtual ObjectResult<sp_NewRetrieveCode_Result> sp_NewRetrieveCode(string criteria, string search, string value, string purpose, string role, Nullable<long> reqid, Nullable<long> refno, Nullable<long> id)
        {
            var criteriaParameter = criteria != null ?
                new ObjectParameter("criteria", criteria) :
                new ObjectParameter("criteria", typeof(string));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var purposeParameter = purpose != null ?
                new ObjectParameter("purpose", purpose) :
                new ObjectParameter("purpose", typeof(string));
    
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            var reqidParameter = reqid.HasValue ?
                new ObjectParameter("reqid", reqid) :
                new ObjectParameter("reqid", typeof(long));
    
            var refnoParameter = refno.HasValue ?
                new ObjectParameter("refno", refno) :
                new ObjectParameter("refno", typeof(long));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_NewRetrieveCode_Result>("sp_NewRetrieveCode", criteriaParameter, searchParameter, valueParameter, purposeParameter, roleParameter, reqidParameter, refnoParameter, idParameter);
        }
    
        public virtual int sp_NodelPerson(Nullable<long> nodalOfficerID, string nodalOfficerRefNo, string nodalEmpCode, string nodalOficerName, Nullable<int> nodalOfficerDesignation, string nodalOfficerEmail, string nodalOfficerMobile, string nodalOfficerTelephone, string nodalOfficerFax, string companyRefNo, string isNodalOfficer, string type, string isLoginActive, string createdBy, ObjectParameter returnID)
        {
            var nodalOfficerIDParameter = nodalOfficerID.HasValue ?
                new ObjectParameter("NodalOfficerID", nodalOfficerID) :
                new ObjectParameter("NodalOfficerID", typeof(long));
    
            var nodalOfficerRefNoParameter = nodalOfficerRefNo != null ?
                new ObjectParameter("NodalOfficerRefNo", nodalOfficerRefNo) :
                new ObjectParameter("NodalOfficerRefNo", typeof(string));
    
            var nodalEmpCodeParameter = nodalEmpCode != null ?
                new ObjectParameter("NodalEmpCode", nodalEmpCode) :
                new ObjectParameter("NodalEmpCode", typeof(string));
    
            var nodalOficerNameParameter = nodalOficerName != null ?
                new ObjectParameter("NodalOficerName", nodalOficerName) :
                new ObjectParameter("NodalOficerName", typeof(string));
    
            var nodalOfficerDesignationParameter = nodalOfficerDesignation.HasValue ?
                new ObjectParameter("NodalOfficerDesignation", nodalOfficerDesignation) :
                new ObjectParameter("NodalOfficerDesignation", typeof(int));
    
            var nodalOfficerEmailParameter = nodalOfficerEmail != null ?
                new ObjectParameter("NodalOfficerEmail", nodalOfficerEmail) :
                new ObjectParameter("NodalOfficerEmail", typeof(string));
    
            var nodalOfficerMobileParameter = nodalOfficerMobile != null ?
                new ObjectParameter("NodalOfficerMobile", nodalOfficerMobile) :
                new ObjectParameter("NodalOfficerMobile", typeof(string));
    
            var nodalOfficerTelephoneParameter = nodalOfficerTelephone != null ?
                new ObjectParameter("NodalOfficerTelephone", nodalOfficerTelephone) :
                new ObjectParameter("NodalOfficerTelephone", typeof(string));
    
            var nodalOfficerFaxParameter = nodalOfficerFax != null ?
                new ObjectParameter("NodalOfficerFax", nodalOfficerFax) :
                new ObjectParameter("NodalOfficerFax", typeof(string));
    
            var companyRefNoParameter = companyRefNo != null ?
                new ObjectParameter("CompanyRefNo", companyRefNo) :
                new ObjectParameter("CompanyRefNo", typeof(string));
    
            var isNodalOfficerParameter = isNodalOfficer != null ?
                new ObjectParameter("IsNodalOfficer", isNodalOfficer) :
                new ObjectParameter("IsNodalOfficer", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var isLoginActiveParameter = isLoginActive != null ?
                new ObjectParameter("IsLoginActive", isLoginActive) :
                new ObjectParameter("IsLoginActive", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_NodelPerson", nodalOfficerIDParameter, nodalOfficerRefNoParameter, nodalEmpCodeParameter, nodalOficerNameParameter, nodalOfficerDesignationParameter, nodalOfficerEmailParameter, nodalOfficerMobileParameter, nodalOfficerTelephoneParameter, nodalOfficerFaxParameter, companyRefNoParameter, isNodalOfficerParameter, typeParameter, isLoginActiveParameter, createdByParameter, returnID);
        }
    
        public virtual ObjectResult<sp_ProductGrpah_Result> sp_ProductGrpah(string comprefno, string techValue, string workCodeFor)
        {
            var comprefnoParameter = comprefno != null ?
                new ObjectParameter("Comprefno", comprefno) :
                new ObjectParameter("Comprefno", typeof(string));
    
            var techValueParameter = techValue != null ?
                new ObjectParameter("TechValue", techValue) :
                new ObjectParameter("TechValue", typeof(string));
    
            var workCodeForParameter = workCodeFor != null ?
                new ObjectParameter("WorkCodeFor", workCodeFor) :
                new ObjectParameter("WorkCodeFor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProductGrpah_Result>("sp_ProductGrpah", comprefnoParameter, techValueParameter, workCodeForParameter);
        }
    
        public virtual ObjectResult<sp_ProductUpdation_Result> sp_ProductUpdation(string refNo, string criteria, string searchvalue)
        {
            var refNoParameter = refNo != null ?
                new ObjectParameter("RefNo", refNo) :
                new ObjectParameter("RefNo", typeof(string));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var searchvalueParameter = searchvalue != null ?
                new ObjectParameter("searchvalue", searchvalue) :
                new ObjectParameter("searchvalue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProductUpdation_Result>("sp_ProductUpdation", refNoParameter, criteriaParameter, searchvalueParameter);
        }
    
        public virtual ObjectResult<sp_ProductWizard_Result> sp_ProductWizard(Nullable<long> value, Nullable<long> value2, Nullable<long> value3, Nullable<long> value4, Nullable<long> value5, string @string, string string1, string string2, string string3, string string4, string string5, string string6, string string7, string string8, string criteria)
        {
            var valueParameter = value.HasValue ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(long));
    
            var value2Parameter = value2.HasValue ?
                new ObjectParameter("Value2", value2) :
                new ObjectParameter("Value2", typeof(long));
    
            var value3Parameter = value3.HasValue ?
                new ObjectParameter("Value3", value3) :
                new ObjectParameter("Value3", typeof(long));
    
            var value4Parameter = value4.HasValue ?
                new ObjectParameter("Value4", value4) :
                new ObjectParameter("Value4", typeof(long));
    
            var value5Parameter = value5.HasValue ?
                new ObjectParameter("Value5", value5) :
                new ObjectParameter("Value5", typeof(long));
    
            var stringParameter = @string != null ?
                new ObjectParameter("String", @string) :
                new ObjectParameter("String", typeof(string));
    
            var string1Parameter = string1 != null ?
                new ObjectParameter("String1", string1) :
                new ObjectParameter("String1", typeof(string));
    
            var string2Parameter = string2 != null ?
                new ObjectParameter("String2", string2) :
                new ObjectParameter("String2", typeof(string));
    
            var string3Parameter = string3 != null ?
                new ObjectParameter("String3", string3) :
                new ObjectParameter("String3", typeof(string));
    
            var string4Parameter = string4 != null ?
                new ObjectParameter("String4", string4) :
                new ObjectParameter("String4", typeof(string));
    
            var string5Parameter = string5 != null ?
                new ObjectParameter("String5", string5) :
                new ObjectParameter("String5", typeof(string));
    
            var string6Parameter = string6 != null ?
                new ObjectParameter("String6", string6) :
                new ObjectParameter("String6", typeof(string));
    
            var string7Parameter = string7 != null ?
                new ObjectParameter("String7", string7) :
                new ObjectParameter("String7", typeof(string));
    
            var string8Parameter = string8 != null ?
                new ObjectParameter("String8", string8) :
                new ObjectParameter("String8", typeof(string));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProductWizard_Result>("sp_ProductWizard", valueParameter, value2Parameter, value3Parameter, value4Parameter, value5Parameter, stringParameter, string1Parameter, string2Parameter, string3Parameter, string4Parameter, string5Parameter, string6Parameter, string7Parameter, string8Parameter, criteriaParameter);
        }
    
        public virtual int sp_RejectBookedOrder(Nullable<int> id, string rejectremarks)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var rejectremarksParameter = rejectremarks != null ?
                new ObjectParameter("Rejectremarks", rejectremarks) :
                new ObjectParameter("Rejectremarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RejectBookedOrder", idParameter, rejectremarksParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_RequestInfo(Nullable<long> requestID, string requestBy, string requestProduct, string requestMCompName, string requestCompName, Nullable<long> requestMobileNo, string requestAddress, string requestEmail, string isMailSend, Nullable<System.DateTime> requestDate, string usedfor, string panCard, ObjectParameter returnId)
        {
            var requestIDParameter = requestID.HasValue ?
                new ObjectParameter("RequestID", requestID) :
                new ObjectParameter("RequestID", typeof(long));
    
            var requestByParameter = requestBy != null ?
                new ObjectParameter("RequestBy", requestBy) :
                new ObjectParameter("RequestBy", typeof(string));
    
            var requestProductParameter = requestProduct != null ?
                new ObjectParameter("RequestProduct", requestProduct) :
                new ObjectParameter("RequestProduct", typeof(string));
    
            var requestMCompNameParameter = requestMCompName != null ?
                new ObjectParameter("RequestMCompName", requestMCompName) :
                new ObjectParameter("RequestMCompName", typeof(string));
    
            var requestCompNameParameter = requestCompName != null ?
                new ObjectParameter("RequestCompName", requestCompName) :
                new ObjectParameter("RequestCompName", typeof(string));
    
            var requestMobileNoParameter = requestMobileNo.HasValue ?
                new ObjectParameter("RequestMobileNo", requestMobileNo) :
                new ObjectParameter("RequestMobileNo", typeof(long));
    
            var requestAddressParameter = requestAddress != null ?
                new ObjectParameter("RequestAddress", requestAddress) :
                new ObjectParameter("RequestAddress", typeof(string));
    
            var requestEmailParameter = requestEmail != null ?
                new ObjectParameter("RequestEmail", requestEmail) :
                new ObjectParameter("RequestEmail", typeof(string));
    
            var isMailSendParameter = isMailSend != null ?
                new ObjectParameter("IsMailSend", isMailSend) :
                new ObjectParameter("IsMailSend", typeof(string));
    
            var requestDateParameter = requestDate.HasValue ?
                new ObjectParameter("RequestDate", requestDate) :
                new ObjectParameter("RequestDate", typeof(System.DateTime));
    
            var usedforParameter = usedfor != null ?
                new ObjectParameter("Usedfor", usedfor) :
                new ObjectParameter("Usedfor", typeof(string));
    
            var panCardParameter = panCard != null ?
                new ObjectParameter("PanCard", panCard) :
                new ObjectParameter("PanCard", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RequestInfo", requestIDParameter, requestByParameter, requestProductParameter, requestMCompNameParameter, requestCompNameParameter, requestMobileNoParameter, requestAddressParameter, requestEmailParameter, isMailSendParameter, requestDateParameter, usedforParameter, panCardParameter, returnId);
        }
    
        public virtual ObjectResult<sp_RetriveFGI_Result> sp_RetriveFGI(string sCategoryName, string criteria)
        {
            var sCategoryNameParameter = sCategoryName != null ?
                new ObjectParameter("SCategoryName", sCategoryName) :
                new ObjectParameter("SCategoryName", typeof(string));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RetriveFGI_Result>("sp_RetriveFGI", sCategoryNameParameter, criteriaParameter);
        }
    
        public virtual ObjectResult<sp_RetriveProduct_Result> sp_RetriveProduct(string companyRefNo, string productRefNo, string purpose, string type)
        {
            var companyRefNoParameter = companyRefNo != null ?
                new ObjectParameter("CompanyRefNo", companyRefNo) :
                new ObjectParameter("CompanyRefNo", typeof(string));
    
            var productRefNoParameter = productRefNo != null ?
                new ObjectParameter("ProductRefNo", productRefNo) :
                new ObjectParameter("ProductRefNo", typeof(string));
    
            var purposeParameter = purpose != null ?
                new ObjectParameter("Purpose", purpose) :
                new ObjectParameter("Purpose", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RetriveProduct_Result>("sp_RetriveProduct", companyRefNoParameter, productRefNoParameter, purposeParameter, typeParameter);
        }
    
        public virtual ObjectResult<sp_SearchCompanyGrid_Result> sp_SearchCompanyGrid(string companyRefNo, string factoryRefNo, string unitRefNo, string purpose)
        {
            var companyRefNoParameter = companyRefNo != null ?
                new ObjectParameter("CompanyRefNo", companyRefNo) :
                new ObjectParameter("CompanyRefNo", typeof(string));
    
            var factoryRefNoParameter = factoryRefNo != null ?
                new ObjectParameter("FactoryRefNo", factoryRefNo) :
                new ObjectParameter("FactoryRefNo", typeof(string));
    
            var unitRefNoParameter = unitRefNo != null ?
                new ObjectParameter("UnitRefNo", unitRefNo) :
                new ObjectParameter("UnitRefNo", typeof(string));
    
            var purposeParameter = purpose != null ?
                new ObjectParameter("Purpose", purpose) :
                new ObjectParameter("Purpose", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SearchCompanyGrid_Result>("sp_SearchCompanyGrid", companyRefNoParameter, factoryRefNoParameter, unitRefNoParameter, purposeParameter);
        }
    
        public virtual ObjectResult<sp_SearchFDIGrid_Result> sp_SearchFDIGrid(string companyRefNo)
        {
            var companyRefNoParameter = companyRefNo != null ?
                new ObjectParameter("CompanyRefNo", companyRefNo) :
                new ObjectParameter("CompanyRefNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SearchFDIGrid_Result>("sp_SearchFDIGrid", companyRefNoParameter);
        }
    
        public virtual ObjectResult<sp_SearchtestdataonHomepage_Result> sp_SearchtestdataonHomepage(string compname)
        {
            var compnameParameter = compname != null ?
                new ObjectParameter("compname", compname) :
                new ObjectParameter("compname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SearchtestdataonHomepage_Result>("sp_SearchtestdataonHomepage", compnameParameter);
        }
    
        public virtual ObjectResult<sp_State_Result> sp_State(Nullable<long> stateID, string stateName, string workCodeFor)
        {
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("StateID", stateID) :
                new ObjectParameter("StateID", typeof(long));
    
            var stateNameParameter = stateName != null ?
                new ObjectParameter("StateName", stateName) :
                new ObjectParameter("StateName", typeof(string));
    
            var workCodeForParameter = workCodeFor != null ?
                new ObjectParameter("WorkCodeFor", workCodeFor) :
                new ObjectParameter("WorkCodeFor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_State_Result>("sp_State", stateIDParameter, stateNameParameter, workCodeForParameter);
        }
    
        public virtual ObjectResult<sp_SubCategory_Result> sp_SubCategory(Nullable<long> sCatID, string sCatName, Nullable<int> pId, string criteria, string compRefNo, string createdBy)
        {
            var sCatIDParameter = sCatID.HasValue ?
                new ObjectParameter("SCatID", sCatID) :
                new ObjectParameter("SCatID", typeof(long));
    
            var sCatNameParameter = sCatName != null ?
                new ObjectParameter("SCatName", sCatName) :
                new ObjectParameter("SCatName", typeof(string));
    
            var pIdParameter = pId.HasValue ?
                new ObjectParameter("PId", pId) :
                new ObjectParameter("PId", typeof(int));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var compRefNoParameter = compRefNo != null ?
                new ObjectParameter("CompRefNo", compRefNo) :
                new ObjectParameter("CompRefNo", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SubCategory_Result>("sp_SubCategory", sCatIDParameter, sCatNameParameter, pIdParameter, criteriaParameter, compRefNoParameter, createdByParameter);
        }
    
        public virtual int sp_SuccessStoryLog(string productrefno, string companyrefno, Nullable<System.DateTime> date, Nullable<System.TimeSpan> time)
        {
            var productrefnoParameter = productrefno != null ?
                new ObjectParameter("productrefno", productrefno) :
                new ObjectParameter("productrefno", typeof(string));
    
            var companyrefnoParameter = companyrefno != null ?
                new ObjectParameter("companyrefno", companyrefno) :
                new ObjectParameter("companyrefno", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var timeParameter = time.HasValue ?
                new ObjectParameter("time", time) :
                new ObjectParameter("time", typeof(System.TimeSpan));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SuccessStoryLog", productrefnoParameter, companyrefnoParameter, dateParameter, timeParameter);
        }
    
        public virtual int sp_TargetValue(string compRefNo, string compName, string totalItemUploaded, string targetIndigenization202021, string inhouseindigenized, string makeiiindigenized, string otherthanmakeii, string totalitemsindigenized202021, string totalannualvalue)
        {
            var compRefNoParameter = compRefNo != null ?
                new ObjectParameter("CompRefNo", compRefNo) :
                new ObjectParameter("CompRefNo", typeof(string));
    
            var compNameParameter = compName != null ?
                new ObjectParameter("CompName", compName) :
                new ObjectParameter("CompName", typeof(string));
    
            var totalItemUploadedParameter = totalItemUploaded != null ?
                new ObjectParameter("TotalItemUploaded", totalItemUploaded) :
                new ObjectParameter("TotalItemUploaded", typeof(string));
    
            var targetIndigenization202021Parameter = targetIndigenization202021 != null ?
                new ObjectParameter("TargetIndigenization202021", targetIndigenization202021) :
                new ObjectParameter("TargetIndigenization202021", typeof(string));
    
            var inhouseindigenizedParameter = inhouseindigenized != null ?
                new ObjectParameter("Inhouseindigenized", inhouseindigenized) :
                new ObjectParameter("Inhouseindigenized", typeof(string));
    
            var makeiiindigenizedParameter = makeiiindigenized != null ?
                new ObjectParameter("makeiiindigenized", makeiiindigenized) :
                new ObjectParameter("makeiiindigenized", typeof(string));
    
            var otherthanmakeiiParameter = otherthanmakeii != null ?
                new ObjectParameter("otherthanmakeii", otherthanmakeii) :
                new ObjectParameter("otherthanmakeii", typeof(string));
    
            var totalitemsindigenized202021Parameter = totalitemsindigenized202021 != null ?
                new ObjectParameter("totalitemsindigenized202021", totalitemsindigenized202021) :
                new ObjectParameter("totalitemsindigenized202021", typeof(string));
    
            var totalannualvalueParameter = totalannualvalue != null ?
                new ObjectParameter("totalannualvalue", totalannualvalue) :
                new ObjectParameter("totalannualvalue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_TargetValue", compRefNoParameter, compNameParameter, totalItemUploadedParameter, targetIndigenization202021Parameter, inhouseindigenizedParameter, makeiiindigenizedParameter, otherthanmakeiiParameter, totalitemsindigenized202021Parameter, totalannualvalueParameter);
        }
    
        public virtual int sp_TestInsertProductInfo(string function, string prodRefNo, Nullable<long> prodInfoId1, string name, Nullable<decimal> value, string unit)
        {
            var functionParameter = function != null ?
                new ObjectParameter("Function", function) :
                new ObjectParameter("Function", typeof(string));
    
            var prodRefNoParameter = prodRefNo != null ?
                new ObjectParameter("ProdRefNo", prodRefNo) :
                new ObjectParameter("ProdRefNo", typeof(string));
    
            var prodInfoId1Parameter = prodInfoId1.HasValue ?
                new ObjectParameter("ProdInfoId1", prodInfoId1) :
                new ObjectParameter("ProdInfoId1", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var valueParameter = value.HasValue ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(decimal));
    
            var unitParameter = unit != null ?
                new ObjectParameter("Unit", unit) :
                new ObjectParameter("Unit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_TestInsertProductInfo", functionParameter, prodRefNoParameter, prodInfoId1Parameter, nameParameter, valueParameter, unitParameter);
        }
    
        public virtual ObjectResult<sp_TestLab_Result> sp_TestLab(string criteria, string search, Nullable<long> id, string compname)
        {
            var criteriaParameter = criteria != null ?
                new ObjectParameter("criteria", criteria) :
                new ObjectParameter("criteria", typeof(string));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var compnameParameter = compname != null ?
                new ObjectParameter("compname", compname) :
                new ObjectParameter("compname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_TestLab_Result>("sp_TestLab", criteriaParameter, searchParameter, idParameter, compnameParameter);
        }
    
        public virtual int sp_trn_FDI(Nullable<long> mID, string companyRefNo, Nullable<long> nicCodeID, string inCaseOf, string approvalNo, Nullable<System.DateTime> approvalDate, string foreignCompanyName, string address, Nullable<long> country, string zipCode, string foreignDefenceActivity, string fDIValueType, string periodofReporting, Nullable<long> fYID, string periodOfQuater, string currency, string totalFDIInFlow, string equINRExchangeRate, Nullable<decimal> exchangeTotalAmount, string sourceofInformation, Nullable<System.DateTime> dateofReceivingInformation, string documentAttach, string authencityofInformation, string remarks)
        {
            var mIDParameter = mID.HasValue ?
                new ObjectParameter("MID", mID) :
                new ObjectParameter("MID", typeof(long));
    
            var companyRefNoParameter = companyRefNo != null ?
                new ObjectParameter("CompanyRefNo", companyRefNo) :
                new ObjectParameter("CompanyRefNo", typeof(string));
    
            var nicCodeIDParameter = nicCodeID.HasValue ?
                new ObjectParameter("NicCodeID", nicCodeID) :
                new ObjectParameter("NicCodeID", typeof(long));
    
            var inCaseOfParameter = inCaseOf != null ?
                new ObjectParameter("InCaseOf", inCaseOf) :
                new ObjectParameter("InCaseOf", typeof(string));
    
            var approvalNoParameter = approvalNo != null ?
                new ObjectParameter("ApprovalNo", approvalNo) :
                new ObjectParameter("ApprovalNo", typeof(string));
    
            var approvalDateParameter = approvalDate.HasValue ?
                new ObjectParameter("ApprovalDate", approvalDate) :
                new ObjectParameter("ApprovalDate", typeof(System.DateTime));
    
            var foreignCompanyNameParameter = foreignCompanyName != null ?
                new ObjectParameter("ForeignCompanyName", foreignCompanyName) :
                new ObjectParameter("ForeignCompanyName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var countryParameter = country.HasValue ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(long));
    
            var zipCodeParameter = zipCode != null ?
                new ObjectParameter("ZipCode", zipCode) :
                new ObjectParameter("ZipCode", typeof(string));
    
            var foreignDefenceActivityParameter = foreignDefenceActivity != null ?
                new ObjectParameter("ForeignDefenceActivity", foreignDefenceActivity) :
                new ObjectParameter("ForeignDefenceActivity", typeof(string));
    
            var fDIValueTypeParameter = fDIValueType != null ?
                new ObjectParameter("FDIValueType", fDIValueType) :
                new ObjectParameter("FDIValueType", typeof(string));
    
            var periodofReportingParameter = periodofReporting != null ?
                new ObjectParameter("PeriodofReporting", periodofReporting) :
                new ObjectParameter("PeriodofReporting", typeof(string));
    
            var fYIDParameter = fYID.HasValue ?
                new ObjectParameter("FYID", fYID) :
                new ObjectParameter("FYID", typeof(long));
    
            var periodOfQuaterParameter = periodOfQuater != null ?
                new ObjectParameter("PeriodOfQuater", periodOfQuater) :
                new ObjectParameter("PeriodOfQuater", typeof(string));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            var totalFDIInFlowParameter = totalFDIInFlow != null ?
                new ObjectParameter("TotalFDIInFlow", totalFDIInFlow) :
                new ObjectParameter("TotalFDIInFlow", typeof(string));
    
            var equINRExchangeRateParameter = equINRExchangeRate != null ?
                new ObjectParameter("EquINRExchangeRate", equINRExchangeRate) :
                new ObjectParameter("EquINRExchangeRate", typeof(string));
    
            var exchangeTotalAmountParameter = exchangeTotalAmount.HasValue ?
                new ObjectParameter("ExchangeTotalAmount", exchangeTotalAmount) :
                new ObjectParameter("ExchangeTotalAmount", typeof(decimal));
    
            var sourceofInformationParameter = sourceofInformation != null ?
                new ObjectParameter("SourceofInformation", sourceofInformation) :
                new ObjectParameter("SourceofInformation", typeof(string));
    
            var dateofReceivingInformationParameter = dateofReceivingInformation.HasValue ?
                new ObjectParameter("DateofReceivingInformation", dateofReceivingInformation) :
                new ObjectParameter("DateofReceivingInformation", typeof(System.DateTime));
    
            var documentAttachParameter = documentAttach != null ?
                new ObjectParameter("DocumentAttach", documentAttach) :
                new ObjectParameter("DocumentAttach", typeof(string));
    
            var authencityofInformationParameter = authencityofInformation != null ?
                new ObjectParameter("AuthencityofInformation", authencityofInformation) :
                new ObjectParameter("AuthencityofInformation", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_trn_FDI", mIDParameter, companyRefNoParameter, nicCodeIDParameter, inCaseOfParameter, approvalNoParameter, approvalDateParameter, foreignCompanyNameParameter, addressParameter, countryParameter, zipCodeParameter, foreignDefenceActivityParameter, fDIValueTypeParameter, periodofReportingParameter, fYIDParameter, periodOfQuaterParameter, currencyParameter, totalFDIInFlowParameter, equINRExchangeRateParameter, exchangeTotalAmountParameter, sourceofInformationParameter, dateofReceivingInformationParameter, documentAttachParameter, authencityofInformationParameter, remarksParameter);
        }
    
        public virtual int sp_trn_FiiGSave(Nullable<long> fiigID, string productRefNo, string sCategoryName, string remarks, string remarks2, string remarks3)
        {
            var fiigIDParameter = fiigID.HasValue ?
                new ObjectParameter("FiigID", fiigID) :
                new ObjectParameter("FiigID", typeof(long));
    
            var productRefNoParameter = productRefNo != null ?
                new ObjectParameter("ProductRefNo", productRefNo) :
                new ObjectParameter("ProductRefNo", typeof(string));
    
            var sCategoryNameParameter = sCategoryName != null ?
                new ObjectParameter("SCategoryName", sCategoryName) :
                new ObjectParameter("SCategoryName", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var remarks2Parameter = remarks2 != null ?
                new ObjectParameter("Remarks2", remarks2) :
                new ObjectParameter("Remarks2", typeof(string));
    
            var remarks3Parameter = remarks3 != null ?
                new ObjectParameter("Remarks3", remarks3) :
                new ObjectParameter("Remarks3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_trn_FiiGSave", fiigIDParameter, productRefNoParameter, sCategoryNameParameter, remarksParameter, remarks2Parameter, remarks3Parameter);
        }
    
        public virtual int sp_trn_Image(Nullable<long> imageID, string imageName, string imageType, Nullable<long> imageActualSize, Nullable<int> priority, string productRefNo, string companyRefNo, string fType)
        {
            var imageIDParameter = imageID.HasValue ?
                new ObjectParameter("ImageID", imageID) :
                new ObjectParameter("ImageID", typeof(long));
    
            var imageNameParameter = imageName != null ?
                new ObjectParameter("ImageName", imageName) :
                new ObjectParameter("ImageName", typeof(string));
    
            var imageTypeParameter = imageType != null ?
                new ObjectParameter("ImageType", imageType) :
                new ObjectParameter("ImageType", typeof(string));
    
            var imageActualSizeParameter = imageActualSize.HasValue ?
                new ObjectParameter("ImageActualSize", imageActualSize) :
                new ObjectParameter("ImageActualSize", typeof(long));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(int));
    
            var productRefNoParameter = productRefNo != null ?
                new ObjectParameter("ProductRefNo", productRefNo) :
                new ObjectParameter("ProductRefNo", typeof(string));
    
            var companyRefNoParameter = companyRefNo != null ?
                new ObjectParameter("CompanyRefNo", companyRefNo) :
                new ObjectParameter("CompanyRefNo", typeof(string));
    
            var fTypeParameter = fType != null ?
                new ObjectParameter("FType", fType) :
                new ObjectParameter("FType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_trn_Image", imageIDParameter, imageNameParameter, imageTypeParameter, imageActualSizeParameter, priorityParameter, productRefNoParameter, companyRefNoParameter, fTypeParameter);
        }
    
        public virtual int sp_trn_ProdQtyPrice(Nullable<long> prodQtyPriceId, string productRefNo, Nullable<long> year, string fYear, string estimatedQty, string unit, string estimatedPrice, string type)
        {
            var prodQtyPriceIdParameter = prodQtyPriceId.HasValue ?
                new ObjectParameter("ProdQtyPriceId", prodQtyPriceId) :
                new ObjectParameter("ProdQtyPriceId", typeof(long));
    
            var productRefNoParameter = productRefNo != null ?
                new ObjectParameter("ProductRefNo", productRefNo) :
                new ObjectParameter("ProductRefNo", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(long));
    
            var fYearParameter = fYear != null ?
                new ObjectParameter("FYear", fYear) :
                new ObjectParameter("FYear", typeof(string));
    
            var estimatedQtyParameter = estimatedQty != null ?
                new ObjectParameter("EstimatedQty", estimatedQty) :
                new ObjectParameter("EstimatedQty", typeof(string));
    
            var unitParameter = unit != null ?
                new ObjectParameter("Unit", unit) :
                new ObjectParameter("Unit", typeof(string));
    
            var estimatedPriceParameter = estimatedPrice != null ?
                new ObjectParameter("EstimatedPrice", estimatedPrice) :
                new ObjectParameter("EstimatedPrice", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_trn_ProdQtyPrice", prodQtyPriceIdParameter, productRefNoParameter, yearParameter, fYearParameter, estimatedQtyParameter, unitParameter, estimatedPriceParameter, typeParameter);
        }
    
        public virtual int sp_trn_ProductInformation(Nullable<long> prodInfoId, string productRefNo, string nameOfSpec, string value, string unit)
        {
            var prodInfoIdParameter = prodInfoId.HasValue ?
                new ObjectParameter("ProdInfoId", prodInfoId) :
                new ObjectParameter("ProdInfoId", typeof(long));
    
            var productRefNoParameter = productRefNo != null ?
                new ObjectParameter("ProductRefNo", productRefNo) :
                new ObjectParameter("ProductRefNo", typeof(string));
    
            var nameOfSpecParameter = nameOfSpec != null ?
                new ObjectParameter("NameOfSpec", nameOfSpec) :
                new ObjectParameter("NameOfSpec", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var unitParameter = unit != null ?
                new ObjectParameter("Unit", unit) :
                new ObjectParameter("Unit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_trn_ProductInformation", prodInfoIdParameter, productRefNoParameter, nameOfSpecParameter, valueParameter, unitParameter);
        }
    
        public virtual int sp_trn_RequestInfo(string productRefNo, Nullable<long> requestID, string companyName, string remark)
        {
            var productRefNoParameter = productRefNo != null ?
                new ObjectParameter("ProductRefNo", productRefNo) :
                new ObjectParameter("ProductRefNo", typeof(string));
    
            var requestIDParameter = requestID.HasValue ?
                new ObjectParameter("RequestID", requestID) :
                new ObjectParameter("RequestID", typeof(long));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_trn_RequestInfo", productRefNoParameter, requestIDParameter, companyNameParameter, remarkParameter);
        }
    
        public virtual int sp_Update_SOVendor(string id, string productRefNo, string sanctionStatusReason, string sManufactureName, string sManufactureaddress, string supplyordervalue, string sorderdate, string sDeliverydate)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var productRefNoParameter = productRefNo != null ?
                new ObjectParameter("ProductRefNo", productRefNo) :
                new ObjectParameter("ProductRefNo", typeof(string));
    
            var sanctionStatusReasonParameter = sanctionStatusReason != null ?
                new ObjectParameter("SanctionStatusReason", sanctionStatusReason) :
                new ObjectParameter("SanctionStatusReason", typeof(string));
    
            var sManufactureNameParameter = sManufactureName != null ?
                new ObjectParameter("SManufactureName", sManufactureName) :
                new ObjectParameter("SManufactureName", typeof(string));
    
            var sManufactureaddressParameter = sManufactureaddress != null ?
                new ObjectParameter("SManufactureaddress", sManufactureaddress) :
                new ObjectParameter("SManufactureaddress", typeof(string));
    
            var supplyordervalueParameter = supplyordervalue != null ?
                new ObjectParameter("Supplyordervalue", supplyordervalue) :
                new ObjectParameter("Supplyordervalue", typeof(string));
    
            var sorderdateParameter = sorderdate != null ?
                new ObjectParameter("Sorderdate", sorderdate) :
                new ObjectParameter("Sorderdate", typeof(string));
    
            var sDeliverydateParameter = sDeliverydate != null ?
                new ObjectParameter("SDeliverydate", sDeliverydate) :
                new ObjectParameter("SDeliverydate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Update_SOVendor", idParameter, productRefNoParameter, sanctionStatusReasonParameter, sManufactureNameParameter, sManufactureaddressParameter, supplyordervalueParameter, sorderdateParameter, sDeliverydateParameter);
        }
    
        public virtual int sp_UpdateAuthLatterDetailVPM(string nODemail, string filename)
        {
            var nODemailParameter = nODemail != null ?
                new ObjectParameter("NODemail", nODemail) :
                new ObjectParameter("NODemail", typeof(string));
    
            var filenameParameter = filename != null ?
                new ObjectParameter("Filename", filename) :
                new ObjectParameter("Filename", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateAuthLatterDetailVPM", nODemailParameter, filenameParameter);
        }
    
        public virtual int sp_UpdateCompany(Nullable<long> companyID, string isJointVenture, string companyName, string address, Nullable<long> state, string district, string pincode, string nodalOfficeRefNo, string contactPersonEmailID, string gSTNo, string cINNo, string pANNo, string iECode, string cEOName, string cEOEmail, string telephoneNo, string faxNo, string emailID, string website, string startup, string dIPPNumber, string dIPPMobile, string mSME, string vAM, string aadhar_Mobile, string facebook, string twitter, string linkedin, string instagram, string latitude, string longitude, string isDefenceActivity, string interestedArea, string masterAllowed, string role, ObjectParameter returnID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var isJointVentureParameter = isJointVenture != null ?
                new ObjectParameter("IsJointVenture", isJointVenture) :
                new ObjectParameter("IsJointVenture", typeof(string));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(long));
    
            var districtParameter = district != null ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(string));
    
            var pincodeParameter = pincode != null ?
                new ObjectParameter("Pincode", pincode) :
                new ObjectParameter("Pincode", typeof(string));
    
            var nodalOfficeRefNoParameter = nodalOfficeRefNo != null ?
                new ObjectParameter("NodalOfficeRefNo", nodalOfficeRefNo) :
                new ObjectParameter("NodalOfficeRefNo", typeof(string));
    
            var contactPersonEmailIDParameter = contactPersonEmailID != null ?
                new ObjectParameter("ContactPersonEmailID", contactPersonEmailID) :
                new ObjectParameter("ContactPersonEmailID", typeof(string));
    
            var gSTNoParameter = gSTNo != null ?
                new ObjectParameter("GSTNo", gSTNo) :
                new ObjectParameter("GSTNo", typeof(string));
    
            var cINNoParameter = cINNo != null ?
                new ObjectParameter("CINNo", cINNo) :
                new ObjectParameter("CINNo", typeof(string));
    
            var pANNoParameter = pANNo != null ?
                new ObjectParameter("PANNo", pANNo) :
                new ObjectParameter("PANNo", typeof(string));
    
            var iECodeParameter = iECode != null ?
                new ObjectParameter("IECode", iECode) :
                new ObjectParameter("IECode", typeof(string));
    
            var cEONameParameter = cEOName != null ?
                new ObjectParameter("CEOName", cEOName) :
                new ObjectParameter("CEOName", typeof(string));
    
            var cEOEmailParameter = cEOEmail != null ?
                new ObjectParameter("CEOEmail", cEOEmail) :
                new ObjectParameter("CEOEmail", typeof(string));
    
            var telephoneNoParameter = telephoneNo != null ?
                new ObjectParameter("TelephoneNo", telephoneNo) :
                new ObjectParameter("TelephoneNo", typeof(string));
    
            var faxNoParameter = faxNo != null ?
                new ObjectParameter("FaxNo", faxNo) :
                new ObjectParameter("FaxNo", typeof(string));
    
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("Website", website) :
                new ObjectParameter("Website", typeof(string));
    
            var startupParameter = startup != null ?
                new ObjectParameter("Startup", startup) :
                new ObjectParameter("Startup", typeof(string));
    
            var dIPPNumberParameter = dIPPNumber != null ?
                new ObjectParameter("DIPPNumber", dIPPNumber) :
                new ObjectParameter("DIPPNumber", typeof(string));
    
            var dIPPMobileParameter = dIPPMobile != null ?
                new ObjectParameter("DIPPMobile", dIPPMobile) :
                new ObjectParameter("DIPPMobile", typeof(string));
    
            var mSMEParameter = mSME != null ?
                new ObjectParameter("MSME", mSME) :
                new ObjectParameter("MSME", typeof(string));
    
            var vAMParameter = vAM != null ?
                new ObjectParameter("VAM", vAM) :
                new ObjectParameter("VAM", typeof(string));
    
            var aadhar_MobileParameter = aadhar_Mobile != null ?
                new ObjectParameter("Aadhar_Mobile", aadhar_Mobile) :
                new ObjectParameter("Aadhar_Mobile", typeof(string));
    
            var facebookParameter = facebook != null ?
                new ObjectParameter("Facebook", facebook) :
                new ObjectParameter("Facebook", typeof(string));
    
            var twitterParameter = twitter != null ?
                new ObjectParameter("Twitter", twitter) :
                new ObjectParameter("Twitter", typeof(string));
    
            var linkedinParameter = linkedin != null ?
                new ObjectParameter("Linkedin", linkedin) :
                new ObjectParameter("Linkedin", typeof(string));
    
            var instagramParameter = instagram != null ?
                new ObjectParameter("Instagram", instagram) :
                new ObjectParameter("Instagram", typeof(string));
    
            var latitudeParameter = latitude != null ?
                new ObjectParameter("latitude", latitude) :
                new ObjectParameter("latitude", typeof(string));
    
            var longitudeParameter = longitude != null ?
                new ObjectParameter("longitude", longitude) :
                new ObjectParameter("longitude", typeof(string));
    
            var isDefenceActivityParameter = isDefenceActivity != null ?
                new ObjectParameter("IsDefenceActivity", isDefenceActivity) :
                new ObjectParameter("IsDefenceActivity", typeof(string));
    
            var interestedAreaParameter = interestedArea != null ?
                new ObjectParameter("InterestedArea", interestedArea) :
                new ObjectParameter("InterestedArea", typeof(string));
    
            var masterAllowedParameter = masterAllowed != null ?
                new ObjectParameter("MasterAllowed", masterAllowed) :
                new ObjectParameter("MasterAllowed", typeof(string));
    
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateCompany", companyIDParameter, isJointVentureParameter, companyNameParameter, addressParameter, stateParameter, districtParameter, pincodeParameter, nodalOfficeRefNoParameter, contactPersonEmailIDParameter, gSTNoParameter, cINNoParameter, pANNoParameter, iECodeParameter, cEONameParameter, cEOEmailParameter, telephoneNoParameter, faxNoParameter, emailIDParameter, websiteParameter, startupParameter, dIPPNumberParameter, dIPPMobileParameter, mSMEParameter, vAMParameter, aadhar_MobileParameter, facebookParameter, twitterParameter, linkedinParameter, instagramParameter, latitudeParameter, longitudeParameter, isDefenceActivityParameter, interestedAreaParameter, masterAllowedParameter, roleParameter, returnID);
        }
    
        public virtual int sp_UpdateDivision(Nullable<long> factoryID, string factoryName, string companyRefNo, string factoryEmailID, string role, string factoryAddress, Nullable<int> factoryStateID, string factoryPincode, string factoryCEOName, string factoryCEOEmail, string factoryTelephoneNo, string factoryFaxNo, string factoryWebsite, string nodalOfficeRefNo, string factoryGSTNo, string factoryCINNo, string factoryPANNo, string factoryIECode, string factoryNodalOfficerEmailId, string factoryFacebook, string factoryTwitter, string factoryLinkedin, string factoryInstagram, string factorylatitude, string factorylongitude, ObjectParameter returnID)
        {
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(long));
    
            var factoryNameParameter = factoryName != null ?
                new ObjectParameter("FactoryName", factoryName) :
                new ObjectParameter("FactoryName", typeof(string));
    
            var companyRefNoParameter = companyRefNo != null ?
                new ObjectParameter("CompanyRefNo", companyRefNo) :
                new ObjectParameter("CompanyRefNo", typeof(string));
    
            var factoryEmailIDParameter = factoryEmailID != null ?
                new ObjectParameter("FactoryEmailID", factoryEmailID) :
                new ObjectParameter("FactoryEmailID", typeof(string));
    
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            var factoryAddressParameter = factoryAddress != null ?
                new ObjectParameter("FactoryAddress", factoryAddress) :
                new ObjectParameter("FactoryAddress", typeof(string));
    
            var factoryStateIDParameter = factoryStateID.HasValue ?
                new ObjectParameter("FactoryStateID", factoryStateID) :
                new ObjectParameter("FactoryStateID", typeof(int));
    
            var factoryPincodeParameter = factoryPincode != null ?
                new ObjectParameter("FactoryPincode", factoryPincode) :
                new ObjectParameter("FactoryPincode", typeof(string));
    
            var factoryCEONameParameter = factoryCEOName != null ?
                new ObjectParameter("FactoryCEOName", factoryCEOName) :
                new ObjectParameter("FactoryCEOName", typeof(string));
    
            var factoryCEOEmailParameter = factoryCEOEmail != null ?
                new ObjectParameter("FactoryCEOEmail", factoryCEOEmail) :
                new ObjectParameter("FactoryCEOEmail", typeof(string));
    
            var factoryTelephoneNoParameter = factoryTelephoneNo != null ?
                new ObjectParameter("FactoryTelephoneNo", factoryTelephoneNo) :
                new ObjectParameter("FactoryTelephoneNo", typeof(string));
    
            var factoryFaxNoParameter = factoryFaxNo != null ?
                new ObjectParameter("FactoryFaxNo", factoryFaxNo) :
                new ObjectParameter("FactoryFaxNo", typeof(string));
    
            var factoryWebsiteParameter = factoryWebsite != null ?
                new ObjectParameter("FactoryWebsite", factoryWebsite) :
                new ObjectParameter("FactoryWebsite", typeof(string));
    
            var nodalOfficeRefNoParameter = nodalOfficeRefNo != null ?
                new ObjectParameter("NodalOfficeRefNo", nodalOfficeRefNo) :
                new ObjectParameter("NodalOfficeRefNo", typeof(string));
    
            var factoryGSTNoParameter = factoryGSTNo != null ?
                new ObjectParameter("FactoryGSTNo", factoryGSTNo) :
                new ObjectParameter("FactoryGSTNo", typeof(string));
    
            var factoryCINNoParameter = factoryCINNo != null ?
                new ObjectParameter("FactoryCINNo", factoryCINNo) :
                new ObjectParameter("FactoryCINNo", typeof(string));
    
            var factoryPANNoParameter = factoryPANNo != null ?
                new ObjectParameter("FactoryPANNo", factoryPANNo) :
                new ObjectParameter("FactoryPANNo", typeof(string));
    
            var factoryIECodeParameter = factoryIECode != null ?
                new ObjectParameter("FactoryIECode", factoryIECode) :
                new ObjectParameter("FactoryIECode", typeof(string));
    
            var factoryNodalOfficerEmailIdParameter = factoryNodalOfficerEmailId != null ?
                new ObjectParameter("FactoryNodalOfficerEmailId", factoryNodalOfficerEmailId) :
                new ObjectParameter("FactoryNodalOfficerEmailId", typeof(string));
    
            var factoryFacebookParameter = factoryFacebook != null ?
                new ObjectParameter("FactoryFacebook", factoryFacebook) :
                new ObjectParameter("FactoryFacebook", typeof(string));
    
            var factoryTwitterParameter = factoryTwitter != null ?
                new ObjectParameter("FactoryTwitter", factoryTwitter) :
                new ObjectParameter("FactoryTwitter", typeof(string));
    
            var factoryLinkedinParameter = factoryLinkedin != null ?
                new ObjectParameter("FactoryLinkedin", factoryLinkedin) :
                new ObjectParameter("FactoryLinkedin", typeof(string));
    
            var factoryInstagramParameter = factoryInstagram != null ?
                new ObjectParameter("FactoryInstagram", factoryInstagram) :
                new ObjectParameter("FactoryInstagram", typeof(string));
    
            var factorylatitudeParameter = factorylatitude != null ?
                new ObjectParameter("Factorylatitude", factorylatitude) :
                new ObjectParameter("Factorylatitude", typeof(string));
    
            var factorylongitudeParameter = factorylongitude != null ?
                new ObjectParameter("Factorylongitude", factorylongitude) :
                new ObjectParameter("Factorylongitude", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateDivision", factoryIDParameter, factoryNameParameter, companyRefNoParameter, factoryEmailIDParameter, roleParameter, factoryAddressParameter, factoryStateIDParameter, factoryPincodeParameter, factoryCEONameParameter, factoryCEOEmailParameter, factoryTelephoneNoParameter, factoryFaxNoParameter, factoryWebsiteParameter, nodalOfficeRefNoParameter, factoryGSTNoParameter, factoryCINNoParameter, factoryPANNoParameter, factoryIECodeParameter, factoryNodalOfficerEmailIdParameter, factoryFacebookParameter, factoryTwitterParameter, factoryLinkedinParameter, factoryInstagramParameter, factorylatitudeParameter, factorylongitudeParameter, returnID);
        }
    
        public virtual int sp_updateEOI(string productrefno, string startdate, string enddate, string eoiurl, string eoistatus)
        {
            var productrefnoParameter = productrefno != null ?
                new ObjectParameter("productrefno", productrefno) :
                new ObjectParameter("productrefno", typeof(string));
    
            var startdateParameter = startdate != null ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(string));
    
            var enddateParameter = enddate != null ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(string));
    
            var eoiurlParameter = eoiurl != null ?
                new ObjectParameter("eoiurl", eoiurl) :
                new ObjectParameter("eoiurl", typeof(string));
    
            var eoistatusParameter = eoistatus != null ?
                new ObjectParameter("eoistatus", eoistatus) :
                new ObjectParameter("eoistatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updateEOI", productrefnoParameter, startdateParameter, enddateParameter, eoiurlParameter, eoistatusParameter);
        }
    
        public virtual int sp_UpdateIdentityCardVPM(string nODemail, string filename)
        {
            var nODemailParameter = nODemail != null ?
                new ObjectParameter("NODemail", nODemail) :
                new ObjectParameter("NODemail", typeof(string));
    
            var filenameParameter = filename != null ?
                new ObjectParameter("Filename", filename) :
                new ObjectParameter("Filename", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateIdentityCardVPM", nODemailParameter, filenameParameter);
        }
    
        public virtual int sp_updateIntStatus(string productrefno, Nullable<long> reqId, string intreason, string userreason, string mrreasone)
        {
            var productrefnoParameter = productrefno != null ?
                new ObjectParameter("productrefno", productrefno) :
                new ObjectParameter("productrefno", typeof(string));
    
            var reqIdParameter = reqId.HasValue ?
                new ObjectParameter("ReqId", reqId) :
                new ObjectParameter("ReqId", typeof(long));
    
            var intreasonParameter = intreason != null ?
                new ObjectParameter("intreason", intreason) :
                new ObjectParameter("intreason", typeof(string));
    
            var userreasonParameter = userreason != null ?
                new ObjectParameter("userreason", userreason) :
                new ObjectParameter("userreason", typeof(string));
    
            var mrreasoneParameter = mrreasone != null ?
                new ObjectParameter("mrreasone", mrreasone) :
                new ObjectParameter("mrreasone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updateIntStatus", productrefnoParameter, reqIdParameter, intreasonParameter, userreasonParameter, mrreasoneParameter);
        }
    
        public virtual int sp_UpdateLoginPassword(string companyRefNo, string password, string oldPass, string type, string tempRef, string salt)
        {
            var companyRefNoParameter = companyRefNo != null ?
                new ObjectParameter("CompanyRefNo", companyRefNo) :
                new ObjectParameter("CompanyRefNo", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var oldPassParameter = oldPass != null ?
                new ObjectParameter("OldPass", oldPass) :
                new ObjectParameter("OldPass", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var tempRefParameter = tempRef != null ?
                new ObjectParameter("TempRef", tempRef) :
                new ObjectParameter("TempRef", typeof(string));
    
            var saltParameter = salt != null ?
                new ObjectParameter("Salt", salt) :
                new ObjectParameter("Salt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateLoginPassword", companyRefNoParameter, passwordParameter, oldPassParameter, typeParameter, tempRefParameter, saltParameter);
        }
    
        public virtual int sp_UpdateNewnodelinfoVPM(string nooffID, string noOffiname, string nodalOffemail, string nOoffcontact, string street, string streetad, string nOcity, string nOstate, string nOpin, string nOauth, string nOID)
        {
            var nooffIDParameter = nooffID != null ?
                new ObjectParameter("NooffID", nooffID) :
                new ObjectParameter("NooffID", typeof(string));
    
            var noOffinameParameter = noOffiname != null ?
                new ObjectParameter("NoOffiname", noOffiname) :
                new ObjectParameter("NoOffiname", typeof(string));
    
            var nodalOffemailParameter = nodalOffemail != null ?
                new ObjectParameter("NodalOffemail", nodalOffemail) :
                new ObjectParameter("NodalOffemail", typeof(string));
    
            var nOoffcontactParameter = nOoffcontact != null ?
                new ObjectParameter("NOoffcontact", nOoffcontact) :
                new ObjectParameter("NOoffcontact", typeof(string));
    
            var streetParameter = street != null ?
                new ObjectParameter("street", street) :
                new ObjectParameter("street", typeof(string));
    
            var streetadParameter = streetad != null ?
                new ObjectParameter("streetad", streetad) :
                new ObjectParameter("streetad", typeof(string));
    
            var nOcityParameter = nOcity != null ?
                new ObjectParameter("NOcity", nOcity) :
                new ObjectParameter("NOcity", typeof(string));
    
            var nOstateParameter = nOstate != null ?
                new ObjectParameter("NOstate", nOstate) :
                new ObjectParameter("NOstate", typeof(string));
    
            var nOpinParameter = nOpin != null ?
                new ObjectParameter("NOpin", nOpin) :
                new ObjectParameter("NOpin", typeof(string));
    
            var nOauthParameter = nOauth != null ?
                new ObjectParameter("NOauth", nOauth) :
                new ObjectParameter("NOauth", typeof(string));
    
            var nOIDParameter = nOID != null ?
                new ObjectParameter("NOID", nOID) :
                new ObjectParameter("NOID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateNewnodelinfoVPM", nooffIDParameter, noOffinameParameter, nodalOffemailParameter, nOoffcontactParameter, streetParameter, streetadParameter, nOcityParameter, nOstateParameter, nOpinParameter, nOauthParameter, nOIDParameter);
        }
    
        public virtual int sp_UpdateNodalOfficer(string comprefno, string type, string nodalofficername, Nullable<int> nodalofficerdesignation, string nodalofficeremail, string nodalofficermobile)
        {
            var comprefnoParameter = comprefno != null ?
                new ObjectParameter("comprefno", comprefno) :
                new ObjectParameter("comprefno", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var nodalofficernameParameter = nodalofficername != null ?
                new ObjectParameter("nodalofficername", nodalofficername) :
                new ObjectParameter("nodalofficername", typeof(string));
    
            var nodalofficerdesignationParameter = nodalofficerdesignation.HasValue ?
                new ObjectParameter("nodalofficerdesignation", nodalofficerdesignation) :
                new ObjectParameter("nodalofficerdesignation", typeof(int));
    
            var nodalofficeremailParameter = nodalofficeremail != null ?
                new ObjectParameter("nodalofficeremail", nodalofficeremail) :
                new ObjectParameter("nodalofficeremail", typeof(string));
    
            var nodalofficermobileParameter = nodalofficermobile != null ?
                new ObjectParameter("nodalofficermobile", nodalofficermobile) :
                new ObjectParameter("nodalofficermobile", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateNodalOfficer", comprefnoParameter, typeParameter, nodalofficernameParameter, nodalofficerdesignationParameter, nodalofficeremailParameter, nodalofficermobileParameter);
        }
    
        public virtual int sp_UpdateProduct(string productRefNo, string featursandDetail, string qaAgency, ObjectParameter returnId)
        {
            var productRefNoParameter = productRefNo != null ?
                new ObjectParameter("ProductRefNo", productRefNo) :
                new ObjectParameter("ProductRefNo", typeof(string));
    
            var featursandDetailParameter = featursandDetail != null ?
                new ObjectParameter("FeatursandDetail", featursandDetail) :
                new ObjectParameter("FeatursandDetail", typeof(string));
    
            var qaAgencyParameter = qaAgency != null ?
                new ObjectParameter("qaAgency", qaAgency) :
                new ObjectParameter("qaAgency", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateProduct", productRefNoParameter, featursandDetailParameter, qaAgencyParameter, returnId);
        }
    
        public virtual int sp_UpdateProductFromExcel1(string productRefNo, string productLevel1, string productLevel2, string productLevel3, string productDescription, string nIINCode, string featursandDetail, string oEMPartNumber, string oEMName, string oEMCountry, string oEMAddress, string dPSUPartNumber, string hsnCode8digit, string platform, string nomenclatureOfMainSystem, string technologyLevel1, string technologyLevel2, string isIndeginized, string manufactureName, string manufactureAddress, string yearofIndiginization, string purposeofProcurement, string eOIStatus, string eOIURL, string eOIStartDate, string eOIEndDate, string supplyOrderStatus, string supplyManfutureName, string supplyManfutureAddress, string supplyOrderValue, string supplyDeliveryDate, string supplyOrderDate, string indTargetYear, string indProcess, string nodelDetail, string isShowGeneral, string fYear18, string estimatedQty18, string unit18, string estimatedPrice18, string fYear19, string estimatedQty19, string unit19, string estimatedPrice19, string fYear20, string estimatedQty20, string unit20, string estimatedPrice20, string fYear21, string estimatedQty21, string unit21, string estimatedPrice21)
        {
            var productRefNoParameter = productRefNo != null ?
                new ObjectParameter("ProductRefNo", productRefNo) :
                new ObjectParameter("ProductRefNo", typeof(string));
    
            var productLevel1Parameter = productLevel1 != null ?
                new ObjectParameter("ProductLevel1", productLevel1) :
                new ObjectParameter("ProductLevel1", typeof(string));
    
            var productLevel2Parameter = productLevel2 != null ?
                new ObjectParameter("ProductLevel2", productLevel2) :
                new ObjectParameter("ProductLevel2", typeof(string));
    
            var productLevel3Parameter = productLevel3 != null ?
                new ObjectParameter("ProductLevel3", productLevel3) :
                new ObjectParameter("ProductLevel3", typeof(string));
    
            var productDescriptionParameter = productDescription != null ?
                new ObjectParameter("ProductDescription", productDescription) :
                new ObjectParameter("ProductDescription", typeof(string));
    
            var nIINCodeParameter = nIINCode != null ?
                new ObjectParameter("NIINCode", nIINCode) :
                new ObjectParameter("NIINCode", typeof(string));
    
            var featursandDetailParameter = featursandDetail != null ?
                new ObjectParameter("FeatursandDetail", featursandDetail) :
                new ObjectParameter("FeatursandDetail", typeof(string));
    
            var oEMPartNumberParameter = oEMPartNumber != null ?
                new ObjectParameter("OEMPartNumber", oEMPartNumber) :
                new ObjectParameter("OEMPartNumber", typeof(string));
    
            var oEMNameParameter = oEMName != null ?
                new ObjectParameter("OEMName", oEMName) :
                new ObjectParameter("OEMName", typeof(string));
    
            var oEMCountryParameter = oEMCountry != null ?
                new ObjectParameter("OEMCountry", oEMCountry) :
                new ObjectParameter("OEMCountry", typeof(string));
    
            var oEMAddressParameter = oEMAddress != null ?
                new ObjectParameter("OEMAddress", oEMAddress) :
                new ObjectParameter("OEMAddress", typeof(string));
    
            var dPSUPartNumberParameter = dPSUPartNumber != null ?
                new ObjectParameter("DPSUPartNumber", dPSUPartNumber) :
                new ObjectParameter("DPSUPartNumber", typeof(string));
    
            var hsnCode8digitParameter = hsnCode8digit != null ?
                new ObjectParameter("HsnCode8digit", hsnCode8digit) :
                new ObjectParameter("HsnCode8digit", typeof(string));
    
            var platformParameter = platform != null ?
                new ObjectParameter("Platform", platform) :
                new ObjectParameter("Platform", typeof(string));
    
            var nomenclatureOfMainSystemParameter = nomenclatureOfMainSystem != null ?
                new ObjectParameter("NomenclatureOfMainSystem", nomenclatureOfMainSystem) :
                new ObjectParameter("NomenclatureOfMainSystem", typeof(string));
    
            var technologyLevel1Parameter = technologyLevel1 != null ?
                new ObjectParameter("TechnologyLevel1", technologyLevel1) :
                new ObjectParameter("TechnologyLevel1", typeof(string));
    
            var technologyLevel2Parameter = technologyLevel2 != null ?
                new ObjectParameter("TechnologyLevel2", technologyLevel2) :
                new ObjectParameter("TechnologyLevel2", typeof(string));
    
            var isIndeginizedParameter = isIndeginized != null ?
                new ObjectParameter("IsIndeginized", isIndeginized) :
                new ObjectParameter("IsIndeginized", typeof(string));
    
            var manufactureNameParameter = manufactureName != null ?
                new ObjectParameter("ManufactureName", manufactureName) :
                new ObjectParameter("ManufactureName", typeof(string));
    
            var manufactureAddressParameter = manufactureAddress != null ?
                new ObjectParameter("ManufactureAddress", manufactureAddress) :
                new ObjectParameter("ManufactureAddress", typeof(string));
    
            var yearofIndiginizationParameter = yearofIndiginization != null ?
                new ObjectParameter("YearofIndiginization", yearofIndiginization) :
                new ObjectParameter("YearofIndiginization", typeof(string));
    
            var purposeofProcurementParameter = purposeofProcurement != null ?
                new ObjectParameter("PurposeofProcurement", purposeofProcurement) :
                new ObjectParameter("PurposeofProcurement", typeof(string));
    
            var eOIStatusParameter = eOIStatus != null ?
                new ObjectParameter("EOIStatus", eOIStatus) :
                new ObjectParameter("EOIStatus", typeof(string));
    
            var eOIURLParameter = eOIURL != null ?
                new ObjectParameter("EOIURL", eOIURL) :
                new ObjectParameter("EOIURL", typeof(string));
    
            var eOIStartDateParameter = eOIStartDate != null ?
                new ObjectParameter("EOIStartDate", eOIStartDate) :
                new ObjectParameter("EOIStartDate", typeof(string));
    
            var eOIEndDateParameter = eOIEndDate != null ?
                new ObjectParameter("EOIEndDate", eOIEndDate) :
                new ObjectParameter("EOIEndDate", typeof(string));
    
            var supplyOrderStatusParameter = supplyOrderStatus != null ?
                new ObjectParameter("SupplyOrderStatus", supplyOrderStatus) :
                new ObjectParameter("SupplyOrderStatus", typeof(string));
    
            var supplyManfutureNameParameter = supplyManfutureName != null ?
                new ObjectParameter("SupplyManfutureName", supplyManfutureName) :
                new ObjectParameter("SupplyManfutureName", typeof(string));
    
            var supplyManfutureAddressParameter = supplyManfutureAddress != null ?
                new ObjectParameter("SupplyManfutureAddress", supplyManfutureAddress) :
                new ObjectParameter("SupplyManfutureAddress", typeof(string));
    
            var supplyOrderValueParameter = supplyOrderValue != null ?
                new ObjectParameter("SupplyOrderValue", supplyOrderValue) :
                new ObjectParameter("SupplyOrderValue", typeof(string));
    
            var supplyDeliveryDateParameter = supplyDeliveryDate != null ?
                new ObjectParameter("SupplyDeliveryDate", supplyDeliveryDate) :
                new ObjectParameter("SupplyDeliveryDate", typeof(string));
    
            var supplyOrderDateParameter = supplyOrderDate != null ?
                new ObjectParameter("SupplyOrderDate", supplyOrderDate) :
                new ObjectParameter("SupplyOrderDate", typeof(string));
    
            var indTargetYearParameter = indTargetYear != null ?
                new ObjectParameter("IndTargetYear", indTargetYear) :
                new ObjectParameter("IndTargetYear", typeof(string));
    
            var indProcessParameter = indProcess != null ?
                new ObjectParameter("IndProcess", indProcess) :
                new ObjectParameter("IndProcess", typeof(string));
    
            var nodelDetailParameter = nodelDetail != null ?
                new ObjectParameter("NodelDetail", nodelDetail) :
                new ObjectParameter("NodelDetail", typeof(string));
    
            var isShowGeneralParameter = isShowGeneral != null ?
                new ObjectParameter("IsShowGeneral", isShowGeneral) :
                new ObjectParameter("IsShowGeneral", typeof(string));
    
            var fYear18Parameter = fYear18 != null ?
                new ObjectParameter("FYear18", fYear18) :
                new ObjectParameter("FYear18", typeof(string));
    
            var estimatedQty18Parameter = estimatedQty18 != null ?
                new ObjectParameter("EstimatedQty18", estimatedQty18) :
                new ObjectParameter("EstimatedQty18", typeof(string));
    
            var unit18Parameter = unit18 != null ?
                new ObjectParameter("Unit18", unit18) :
                new ObjectParameter("Unit18", typeof(string));
    
            var estimatedPrice18Parameter = estimatedPrice18 != null ?
                new ObjectParameter("EstimatedPrice18", estimatedPrice18) :
                new ObjectParameter("EstimatedPrice18", typeof(string));
    
            var fYear19Parameter = fYear19 != null ?
                new ObjectParameter("FYear19", fYear19) :
                new ObjectParameter("FYear19", typeof(string));
    
            var estimatedQty19Parameter = estimatedQty19 != null ?
                new ObjectParameter("EstimatedQty19", estimatedQty19) :
                new ObjectParameter("EstimatedQty19", typeof(string));
    
            var unit19Parameter = unit19 != null ?
                new ObjectParameter("Unit19", unit19) :
                new ObjectParameter("Unit19", typeof(string));
    
            var estimatedPrice19Parameter = estimatedPrice19 != null ?
                new ObjectParameter("EstimatedPrice19", estimatedPrice19) :
                new ObjectParameter("EstimatedPrice19", typeof(string));
    
            var fYear20Parameter = fYear20 != null ?
                new ObjectParameter("FYear20", fYear20) :
                new ObjectParameter("FYear20", typeof(string));
    
            var estimatedQty20Parameter = estimatedQty20 != null ?
                new ObjectParameter("EstimatedQty20", estimatedQty20) :
                new ObjectParameter("EstimatedQty20", typeof(string));
    
            var unit20Parameter = unit20 != null ?
                new ObjectParameter("Unit20", unit20) :
                new ObjectParameter("Unit20", typeof(string));
    
            var estimatedPrice20Parameter = estimatedPrice20 != null ?
                new ObjectParameter("EstimatedPrice20", estimatedPrice20) :
                new ObjectParameter("EstimatedPrice20", typeof(string));
    
            var fYear21Parameter = fYear21 != null ?
                new ObjectParameter("FYear21", fYear21) :
                new ObjectParameter("FYear21", typeof(string));
    
            var estimatedQty21Parameter = estimatedQty21 != null ?
                new ObjectParameter("EstimatedQty21", estimatedQty21) :
                new ObjectParameter("EstimatedQty21", typeof(string));
    
            var unit21Parameter = unit21 != null ?
                new ObjectParameter("Unit21", unit21) :
                new ObjectParameter("Unit21", typeof(string));
    
            var estimatedPrice21Parameter = estimatedPrice21 != null ?
                new ObjectParameter("EstimatedPrice21", estimatedPrice21) :
                new ObjectParameter("EstimatedPrice21", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateProductFromExcel1", productRefNoParameter, productLevel1Parameter, productLevel2Parameter, productLevel3Parameter, productDescriptionParameter, nIINCodeParameter, featursandDetailParameter, oEMPartNumberParameter, oEMNameParameter, oEMCountryParameter, oEMAddressParameter, dPSUPartNumberParameter, hsnCode8digitParameter, platformParameter, nomenclatureOfMainSystemParameter, technologyLevel1Parameter, technologyLevel2Parameter, isIndeginizedParameter, manufactureNameParameter, manufactureAddressParameter, yearofIndiginizationParameter, purposeofProcurementParameter, eOIStatusParameter, eOIURLParameter, eOIStartDateParameter, eOIEndDateParameter, supplyOrderStatusParameter, supplyManfutureNameParameter, supplyManfutureAddressParameter, supplyOrderValueParameter, supplyDeliveryDateParameter, supplyOrderDateParameter, indTargetYearParameter, indProcessParameter, nodelDetailParameter, isShowGeneralParameter, fYear18Parameter, estimatedQty18Parameter, unit18Parameter, estimatedPrice18Parameter, fYear19Parameter, estimatedQty19Parameter, unit19Parameter, estimatedPrice19Parameter, fYear20Parameter, estimatedQty20Parameter, unit20Parameter, estimatedPrice20Parameter, fYear21Parameter, estimatedQty21Parameter, unit21Parameter, estimatedPrice21Parameter);
        }
    
        public virtual int sp_UpdateProductFromExcel1FORSHQ(string productRefNo, string yearofIndiginization, string productLevel3, string purposeofProcurement, string indTargetYear, string indProcess, Nullable<long> nodelDetail, string isShowGeneral, string fYear18, string estimatedQty18, string unit18, string estimatedPrice18, string fYear19, string estimatedQty19, string unit19, string estimatedPrice19, string fYear20, string estimatedQty20, string unit20, string estimatedPrice20, string fYear21, string estimatedQty21, string unit21, string estimatedPrice21)
        {
            var productRefNoParameter = productRefNo != null ?
                new ObjectParameter("ProductRefNo", productRefNo) :
                new ObjectParameter("ProductRefNo", typeof(string));
    
            var yearofIndiginizationParameter = yearofIndiginization != null ?
                new ObjectParameter("YearofIndiginization", yearofIndiginization) :
                new ObjectParameter("YearofIndiginization", typeof(string));
    
            var productLevel3Parameter = productLevel3 != null ?
                new ObjectParameter("ProductLevel3", productLevel3) :
                new ObjectParameter("ProductLevel3", typeof(string));
    
            var purposeofProcurementParameter = purposeofProcurement != null ?
                new ObjectParameter("PurposeofProcurement", purposeofProcurement) :
                new ObjectParameter("PurposeofProcurement", typeof(string));
    
            var indTargetYearParameter = indTargetYear != null ?
                new ObjectParameter("IndTargetYear", indTargetYear) :
                new ObjectParameter("IndTargetYear", typeof(string));
    
            var indProcessParameter = indProcess != null ?
                new ObjectParameter("IndProcess", indProcess) :
                new ObjectParameter("IndProcess", typeof(string));
    
            var nodelDetailParameter = nodelDetail.HasValue ?
                new ObjectParameter("NodelDetail", nodelDetail) :
                new ObjectParameter("NodelDetail", typeof(long));
    
            var isShowGeneralParameter = isShowGeneral != null ?
                new ObjectParameter("IsShowGeneral", isShowGeneral) :
                new ObjectParameter("IsShowGeneral", typeof(string));
    
            var fYear18Parameter = fYear18 != null ?
                new ObjectParameter("FYear18", fYear18) :
                new ObjectParameter("FYear18", typeof(string));
    
            var estimatedQty18Parameter = estimatedQty18 != null ?
                new ObjectParameter("EstimatedQty18", estimatedQty18) :
                new ObjectParameter("EstimatedQty18", typeof(string));
    
            var unit18Parameter = unit18 != null ?
                new ObjectParameter("Unit18", unit18) :
                new ObjectParameter("Unit18", typeof(string));
    
            var estimatedPrice18Parameter = estimatedPrice18 != null ?
                new ObjectParameter("EstimatedPrice18", estimatedPrice18) :
                new ObjectParameter("EstimatedPrice18", typeof(string));
    
            var fYear19Parameter = fYear19 != null ?
                new ObjectParameter("FYear19", fYear19) :
                new ObjectParameter("FYear19", typeof(string));
    
            var estimatedQty19Parameter = estimatedQty19 != null ?
                new ObjectParameter("EstimatedQty19", estimatedQty19) :
                new ObjectParameter("EstimatedQty19", typeof(string));
    
            var unit19Parameter = unit19 != null ?
                new ObjectParameter("Unit19", unit19) :
                new ObjectParameter("Unit19", typeof(string));
    
            var estimatedPrice19Parameter = estimatedPrice19 != null ?
                new ObjectParameter("EstimatedPrice19", estimatedPrice19) :
                new ObjectParameter("EstimatedPrice19", typeof(string));
    
            var fYear20Parameter = fYear20 != null ?
                new ObjectParameter("FYear20", fYear20) :
                new ObjectParameter("FYear20", typeof(string));
    
            var estimatedQty20Parameter = estimatedQty20 != null ?
                new ObjectParameter("EstimatedQty20", estimatedQty20) :
                new ObjectParameter("EstimatedQty20", typeof(string));
    
            var unit20Parameter = unit20 != null ?
                new ObjectParameter("Unit20", unit20) :
                new ObjectParameter("Unit20", typeof(string));
    
            var estimatedPrice20Parameter = estimatedPrice20 != null ?
                new ObjectParameter("EstimatedPrice20", estimatedPrice20) :
                new ObjectParameter("EstimatedPrice20", typeof(string));
    
            var fYear21Parameter = fYear21 != null ?
                new ObjectParameter("FYear21", fYear21) :
                new ObjectParameter("FYear21", typeof(string));
    
            var estimatedQty21Parameter = estimatedQty21 != null ?
                new ObjectParameter("EstimatedQty21", estimatedQty21) :
                new ObjectParameter("EstimatedQty21", typeof(string));
    
            var unit21Parameter = unit21 != null ?
                new ObjectParameter("Unit21", unit21) :
                new ObjectParameter("Unit21", typeof(string));
    
            var estimatedPrice21Parameter = estimatedPrice21 != null ?
                new ObjectParameter("EstimatedPrice21", estimatedPrice21) :
                new ObjectParameter("EstimatedPrice21", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateProductFromExcel1FORSHQ", productRefNoParameter, yearofIndiginizationParameter, productLevel3Parameter, purposeofProcurementParameter, indTargetYearParameter, indProcessParameter, nodelDetailParameter, isShowGeneralParameter, fYear18Parameter, estimatedQty18Parameter, unit18Parameter, estimatedPrice18Parameter, fYear19Parameter, estimatedQty19Parameter, unit19Parameter, estimatedPrice19Parameter, fYear20Parameter, estimatedQty20Parameter, unit20Parameter, estimatedPrice20Parameter, fYear21Parameter, estimatedQty21Parameter, unit21Parameter, estimatedPrice21Parameter);
        }
    
        public virtual int sp_UpdateprofileDetailVPM(string email, string mobno, string street1, string street2, string city1, string state1, string zipcode1, string vedtRid)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var mobnoParameter = mobno != null ?
                new ObjectParameter("Mobno", mobno) :
                new ObjectParameter("Mobno", typeof(string));
    
            var street1Parameter = street1 != null ?
                new ObjectParameter("street1", street1) :
                new ObjectParameter("street1", typeof(string));
    
            var street2Parameter = street2 != null ?
                new ObjectParameter("street2", street2) :
                new ObjectParameter("street2", typeof(string));
    
            var city1Parameter = city1 != null ?
                new ObjectParameter("city1", city1) :
                new ObjectParameter("city1", typeof(string));
    
            var state1Parameter = state1 != null ?
                new ObjectParameter("state1", state1) :
                new ObjectParameter("state1", typeof(string));
    
            var zipcode1Parameter = zipcode1 != null ?
                new ObjectParameter("zipcode1", zipcode1) :
                new ObjectParameter("zipcode1", typeof(string));
    
            var vedtRidParameter = vedtRid != null ?
                new ObjectParameter("VedtRid", vedtRid) :
                new ObjectParameter("VedtRid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateprofileDetailVPM", emailParameter, mobnoParameter, street1Parameter, street2Parameter, city1Parameter, state1Parameter, zipcode1Parameter, vedtRidParameter);
        }
    
        public virtual int sp_UpdateprofileEmailVPM(string vedtRid, string nODemail)
        {
            var vedtRidParameter = vedtRid != null ?
                new ObjectParameter("VedtRid", vedtRid) :
                new ObjectParameter("VedtRid", typeof(string));
    
            var nODemailParameter = nODemail != null ?
                new ObjectParameter("NODemail", nODemail) :
                new ObjectParameter("NODemail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateprofileEmailVPM", vedtRidParameter, nODemailParameter);
        }
    
        public virtual int sp_UpdateProgressSuccesstory(string prorefno, Nullable<long> yearifindignization, string manufacturename, string manufactureaddress, string isindignized)
        {
            var prorefnoParameter = prorefno != null ?
                new ObjectParameter("prorefno", prorefno) :
                new ObjectParameter("prorefno", typeof(string));
    
            var yearifindignizationParameter = yearifindignization.HasValue ?
                new ObjectParameter("yearifindignization", yearifindignization) :
                new ObjectParameter("yearifindignization", typeof(long));
    
            var manufacturenameParameter = manufacturename != null ?
                new ObjectParameter("manufacturename", manufacturename) :
                new ObjectParameter("manufacturename", typeof(string));
    
            var manufactureaddressParameter = manufactureaddress != null ?
                new ObjectParameter("manufactureaddress", manufactureaddress) :
                new ObjectParameter("manufactureaddress", typeof(string));
    
            var isindignizedParameter = isindignized != null ?
                new ObjectParameter("isindignized", isindignized) :
                new ObjectParameter("isindignized", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateProgressSuccesstory", prorefnoParameter, yearifindignizationParameter, manufacturenameParameter, manufactureaddressParameter, isindignizedParameter);
        }
    
        public virtual int sp_UpdateProgressSuccesstory2(string prorefno, string yearifindignization, string manufacturename, string manufactureaddress)
        {
            var prorefnoParameter = prorefno != null ?
                new ObjectParameter("prorefno", prorefno) :
                new ObjectParameter("prorefno", typeof(string));
    
            var yearifindignizationParameter = yearifindignization != null ?
                new ObjectParameter("yearifindignization", yearifindignization) :
                new ObjectParameter("yearifindignization", typeof(string));
    
            var manufacturenameParameter = manufacturename != null ?
                new ObjectParameter("manufacturename", manufacturename) :
                new ObjectParameter("manufacturename", typeof(string));
    
            var manufactureaddressParameter = manufactureaddress != null ?
                new ObjectParameter("manufactureaddress", manufactureaddress) :
                new ObjectParameter("manufactureaddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateProgressSuccesstory2", prorefnoParameter, yearifindignizationParameter, manufacturenameParameter, manufactureaddressParameter);
        }
    
        public virtual int sp_UpdateSuccesstory(string prorefno, string indigtargtyr, Nullable<long> yearifindignization, string purposeofprocuremnt, string manufacturename, string manufactureaddress, string isindignized, string indprocess, Nullable<decimal> maxValue, Nullable<System.DateTime> indDate)
        {
            var prorefnoParameter = prorefno != null ?
                new ObjectParameter("prorefno", prorefno) :
                new ObjectParameter("prorefno", typeof(string));
    
            var indigtargtyrParameter = indigtargtyr != null ?
                new ObjectParameter("indigtargtyr", indigtargtyr) :
                new ObjectParameter("indigtargtyr", typeof(string));
    
            var yearifindignizationParameter = yearifindignization.HasValue ?
                new ObjectParameter("yearifindignization", yearifindignization) :
                new ObjectParameter("yearifindignization", typeof(long));
    
            var purposeofprocuremntParameter = purposeofprocuremnt != null ?
                new ObjectParameter("purposeofprocuremnt", purposeofprocuremnt) :
                new ObjectParameter("purposeofprocuremnt", typeof(string));
    
            var manufacturenameParameter = manufacturename != null ?
                new ObjectParameter("manufacturename", manufacturename) :
                new ObjectParameter("manufacturename", typeof(string));
    
            var manufactureaddressParameter = manufactureaddress != null ?
                new ObjectParameter("manufactureaddress", manufactureaddress) :
                new ObjectParameter("manufactureaddress", typeof(string));
    
            var isindignizedParameter = isindignized != null ?
                new ObjectParameter("isindignized", isindignized) :
                new ObjectParameter("isindignized", typeof(string));
    
            var indprocessParameter = indprocess != null ?
                new ObjectParameter("indprocess", indprocess) :
                new ObjectParameter("indprocess", typeof(string));
    
            var maxValueParameter = maxValue.HasValue ?
                new ObjectParameter("MaxValue", maxValue) :
                new ObjectParameter("MaxValue", typeof(decimal));
    
            var indDateParameter = indDate.HasValue ?
                new ObjectParameter("IndDate", indDate) :
                new ObjectParameter("IndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateSuccesstory", prorefnoParameter, indigtargtyrParameter, yearifindignizationParameter, purposeofprocuremntParameter, manufacturenameParameter, manufactureaddressParameter, isindignizedParameter, indprocessParameter, maxValueParameter, indDateParameter);
        }
    
        public virtual int sp_updateSupplyOrder(string productrefno, Nullable<decimal> supplyordervalue, string supplydeliverydate, string supplyorderdate, string supplyManfutureName, string supplyaddress, string supplyorderstatus)
        {
            var productrefnoParameter = productrefno != null ?
                new ObjectParameter("productrefno", productrefno) :
                new ObjectParameter("productrefno", typeof(string));
    
            var supplyordervalueParameter = supplyordervalue.HasValue ?
                new ObjectParameter("supplyordervalue", supplyordervalue) :
                new ObjectParameter("supplyordervalue", typeof(decimal));
    
            var supplydeliverydateParameter = supplydeliverydate != null ?
                new ObjectParameter("supplydeliverydate", supplydeliverydate) :
                new ObjectParameter("supplydeliverydate", typeof(string));
    
            var supplyorderdateParameter = supplyorderdate != null ?
                new ObjectParameter("supplyorderdate", supplyorderdate) :
                new ObjectParameter("supplyorderdate", typeof(string));
    
            var supplyManfutureNameParameter = supplyManfutureName != null ?
                new ObjectParameter("SupplyManfutureName", supplyManfutureName) :
                new ObjectParameter("SupplyManfutureName", typeof(string));
    
            var supplyaddressParameter = supplyaddress != null ?
                new ObjectParameter("Supplyaddress", supplyaddress) :
                new ObjectParameter("Supplyaddress", typeof(string));
    
            var supplyorderstatusParameter = supplyorderstatus != null ?
                new ObjectParameter("supplyorderstatus", supplyorderstatus) :
                new ObjectParameter("supplyorderstatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updateSupplyOrder", productrefnoParameter, supplyordervalueParameter, supplydeliverydateParameter, supplyorderdateParameter, supplyManfutureNameParameter, supplyaddressParameter, supplyorderstatusParameter);
        }
    
        public virtual int sp_UpdateUnit(Nullable<long> unitID, string unitName, string factoryRefNo, string unitEmailId, string role, string unitAddress, Nullable<int> unitStateID, string unitPincode, string unitCEOName, string unitCEOEmail, string unitTelephoneNo, string unitFaxNo, string unitWebsite, string nodalOfficeRefNo, string unitNodalOfficerEmailId, string unitFacebook, string unitTwitter, string unitLinkedin, string unitInstagram, string unitlatitude, string unitlongitude, ObjectParameter returnID)
        {
            var unitIDParameter = unitID.HasValue ?
                new ObjectParameter("UnitID", unitID) :
                new ObjectParameter("UnitID", typeof(long));
    
            var unitNameParameter = unitName != null ?
                new ObjectParameter("UnitName", unitName) :
                new ObjectParameter("UnitName", typeof(string));
    
            var factoryRefNoParameter = factoryRefNo != null ?
                new ObjectParameter("FactoryRefNo", factoryRefNo) :
                new ObjectParameter("FactoryRefNo", typeof(string));
    
            var unitEmailIdParameter = unitEmailId != null ?
                new ObjectParameter("UnitEmailId", unitEmailId) :
                new ObjectParameter("UnitEmailId", typeof(string));
    
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            var unitAddressParameter = unitAddress != null ?
                new ObjectParameter("UnitAddress", unitAddress) :
                new ObjectParameter("UnitAddress", typeof(string));
    
            var unitStateIDParameter = unitStateID.HasValue ?
                new ObjectParameter("UnitStateID", unitStateID) :
                new ObjectParameter("UnitStateID", typeof(int));
    
            var unitPincodeParameter = unitPincode != null ?
                new ObjectParameter("UnitPincode", unitPincode) :
                new ObjectParameter("UnitPincode", typeof(string));
    
            var unitCEONameParameter = unitCEOName != null ?
                new ObjectParameter("UnitCEOName", unitCEOName) :
                new ObjectParameter("UnitCEOName", typeof(string));
    
            var unitCEOEmailParameter = unitCEOEmail != null ?
                new ObjectParameter("UnitCEOEmail", unitCEOEmail) :
                new ObjectParameter("UnitCEOEmail", typeof(string));
    
            var unitTelephoneNoParameter = unitTelephoneNo != null ?
                new ObjectParameter("UnitTelephoneNo", unitTelephoneNo) :
                new ObjectParameter("UnitTelephoneNo", typeof(string));
    
            var unitFaxNoParameter = unitFaxNo != null ?
                new ObjectParameter("UnitFaxNo", unitFaxNo) :
                new ObjectParameter("UnitFaxNo", typeof(string));
    
            var unitWebsiteParameter = unitWebsite != null ?
                new ObjectParameter("UnitWebsite", unitWebsite) :
                new ObjectParameter("UnitWebsite", typeof(string));
    
            var nodalOfficeRefNoParameter = nodalOfficeRefNo != null ?
                new ObjectParameter("NodalOfficeRefNo", nodalOfficeRefNo) :
                new ObjectParameter("NodalOfficeRefNo", typeof(string));
    
            var unitNodalOfficerEmailIdParameter = unitNodalOfficerEmailId != null ?
                new ObjectParameter("UnitNodalOfficerEmailId", unitNodalOfficerEmailId) :
                new ObjectParameter("UnitNodalOfficerEmailId", typeof(string));
    
            var unitFacebookParameter = unitFacebook != null ?
                new ObjectParameter("UnitFacebook", unitFacebook) :
                new ObjectParameter("UnitFacebook", typeof(string));
    
            var unitTwitterParameter = unitTwitter != null ?
                new ObjectParameter("UnitTwitter", unitTwitter) :
                new ObjectParameter("UnitTwitter", typeof(string));
    
            var unitLinkedinParameter = unitLinkedin != null ?
                new ObjectParameter("UnitLinkedin", unitLinkedin) :
                new ObjectParameter("UnitLinkedin", typeof(string));
    
            var unitInstagramParameter = unitInstagram != null ?
                new ObjectParameter("UnitInstagram", unitInstagram) :
                new ObjectParameter("UnitInstagram", typeof(string));
    
            var unitlatitudeParameter = unitlatitude != null ?
                new ObjectParameter("Unitlatitude", unitlatitude) :
                new ObjectParameter("Unitlatitude", typeof(string));
    
            var unitlongitudeParameter = unitlongitude != null ?
                new ObjectParameter("Unitlongitude", unitlongitude) :
                new ObjectParameter("Unitlongitude", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateUnit", unitIDParameter, unitNameParameter, factoryRefNoParameter, unitEmailIdParameter, roleParameter, unitAddressParameter, unitStateIDParameter, unitPincodeParameter, unitCEONameParameter, unitCEOEmailParameter, unitTelephoneNoParameter, unitFaxNoParameter, unitWebsiteParameter, nodalOfficeRefNoParameter, unitNodalOfficerEmailIdParameter, unitFacebookParameter, unitTwitterParameter, unitLinkedinParameter, unitInstagramParameter, unitlatitudeParameter, unitlongitudeParameter, returnID);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int sp_UserAnalytics(string clientip, string clientbrowser, string pageURL, string urlReferrer)
        {
            var clientipParameter = clientip != null ?
                new ObjectParameter("clientip", clientip) :
                new ObjectParameter("clientip", typeof(string));
    
            var clientbrowserParameter = clientbrowser != null ?
                new ObjectParameter("clientbrowser", clientbrowser) :
                new ObjectParameter("clientbrowser", typeof(string));
    
            var pageURLParameter = pageURL != null ?
                new ObjectParameter("PageURL", pageURL) :
                new ObjectParameter("PageURL", typeof(string));
    
            var urlReferrerParameter = urlReferrer != null ?
                new ObjectParameter("UrlReferrer", urlReferrer) :
                new ObjectParameter("UrlReferrer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UserAnalytics", clientipParameter, clientbrowserParameter, pageURLParameter, urlReferrerParameter);
        }
    
        public virtual int sp_VendorCheckList(string vendorRefNo, string checkListId)
        {
            var vendorRefNoParameter = vendorRefNo != null ?
                new ObjectParameter("VendorRefNo", vendorRefNo) :
                new ObjectParameter("VendorRefNo", typeof(string));
    
            var checkListIdParameter = checkListId != null ?
                new ObjectParameter("CheckListId", checkListId) :
                new ObjectParameter("CheckListId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VendorCheckList", vendorRefNoParameter, checkListIdParameter);
        }
    
        public virtual int sp_VendorCompInfo(Nullable<long> vendorDetailID, string vendorRefNo, string is_Lab_accredited_by_NABL, Nullable<System.DateTime> certifictionValid, string details_of_R_D_Facilities, string isSalesOrMarketOffice, string nodelName, string marketingOfficeAddress, string line2, string officerCity, string officeState, string officePincode, string phoneNo, string officeFaxNo, string officeEmail, string isAuthorisedDealer, string futurePlan, ObjectParameter returnID)
        {
            var vendorDetailIDParameter = vendorDetailID.HasValue ?
                new ObjectParameter("VendorDetailID", vendorDetailID) :
                new ObjectParameter("VendorDetailID", typeof(long));
    
            var vendorRefNoParameter = vendorRefNo != null ?
                new ObjectParameter("VendorRefNo", vendorRefNo) :
                new ObjectParameter("VendorRefNo", typeof(string));
    
            var is_Lab_accredited_by_NABLParameter = is_Lab_accredited_by_NABL != null ?
                new ObjectParameter("Is_Lab_accredited_by_NABL", is_Lab_accredited_by_NABL) :
                new ObjectParameter("Is_Lab_accredited_by_NABL", typeof(string));
    
            var certifictionValidParameter = certifictionValid.HasValue ?
                new ObjectParameter("CertifictionValid", certifictionValid) :
                new ObjectParameter("CertifictionValid", typeof(System.DateTime));
    
            var details_of_R_D_FacilitiesParameter = details_of_R_D_Facilities != null ?
                new ObjectParameter("Details_of_R_D_Facilities", details_of_R_D_Facilities) :
                new ObjectParameter("Details_of_R_D_Facilities", typeof(string));
    
            var isSalesOrMarketOfficeParameter = isSalesOrMarketOffice != null ?
                new ObjectParameter("IsSalesOrMarketOffice", isSalesOrMarketOffice) :
                new ObjectParameter("IsSalesOrMarketOffice", typeof(string));
    
            var nodelNameParameter = nodelName != null ?
                new ObjectParameter("NodelName", nodelName) :
                new ObjectParameter("NodelName", typeof(string));
    
            var marketingOfficeAddressParameter = marketingOfficeAddress != null ?
                new ObjectParameter("MarketingOfficeAddress", marketingOfficeAddress) :
                new ObjectParameter("MarketingOfficeAddress", typeof(string));
    
            var line2Parameter = line2 != null ?
                new ObjectParameter("Line2", line2) :
                new ObjectParameter("Line2", typeof(string));
    
            var officerCityParameter = officerCity != null ?
                new ObjectParameter("OfficerCity", officerCity) :
                new ObjectParameter("OfficerCity", typeof(string));
    
            var officeStateParameter = officeState != null ?
                new ObjectParameter("OfficeState", officeState) :
                new ObjectParameter("OfficeState", typeof(string));
    
            var officePincodeParameter = officePincode != null ?
                new ObjectParameter("OfficePincode", officePincode) :
                new ObjectParameter("OfficePincode", typeof(string));
    
            var phoneNoParameter = phoneNo != null ?
                new ObjectParameter("PhoneNo", phoneNo) :
                new ObjectParameter("PhoneNo", typeof(string));
    
            var officeFaxNoParameter = officeFaxNo != null ?
                new ObjectParameter("OfficeFaxNo", officeFaxNo) :
                new ObjectParameter("OfficeFaxNo", typeof(string));
    
            var officeEmailParameter = officeEmail != null ?
                new ObjectParameter("OfficeEmail", officeEmail) :
                new ObjectParameter("OfficeEmail", typeof(string));
    
            var isAuthorisedDealerParameter = isAuthorisedDealer != null ?
                new ObjectParameter("IsAuthorisedDealer", isAuthorisedDealer) :
                new ObjectParameter("IsAuthorisedDealer", typeof(string));
    
            var futurePlanParameter = futurePlan != null ?
                new ObjectParameter("FuturePlan", futurePlan) :
                new ObjectParameter("FuturePlan", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VendorCompInfo", vendorDetailIDParameter, vendorRefNoParameter, is_Lab_accredited_by_NABLParameter, certifictionValidParameter, details_of_R_D_FacilitiesParameter, isSalesOrMarketOfficeParameter, nodelNameParameter, marketingOfficeAddressParameter, line2Parameter, officerCityParameter, officeStateParameter, officePincodeParameter, phoneNoParameter, officeFaxNoParameter, officeEmailParameter, isAuthorisedDealerParameter, futurePlanParameter, returnID);
        }
    
        public virtual int sp_VendorGeneralInfo(string vendorRefNo, string logoPath, string registrationCategory, string typeOfOwnership, string buisnessSector, Nullable<System.DateTime> date_Incorportaion_Company, string companyURL, string street_Address, string street_Address_Line_2, string mobileNo, string contactNo, string faxNo, string state, string city, string pinCode, string tANNo, string uAMNo, string cINNo, string type, ObjectParameter returnID)
        {
            var vendorRefNoParameter = vendorRefNo != null ?
                new ObjectParameter("VendorRefNo", vendorRefNo) :
                new ObjectParameter("VendorRefNo", typeof(string));
    
            var logoPathParameter = logoPath != null ?
                new ObjectParameter("LogoPath", logoPath) :
                new ObjectParameter("LogoPath", typeof(string));
    
            var registrationCategoryParameter = registrationCategory != null ?
                new ObjectParameter("RegistrationCategory", registrationCategory) :
                new ObjectParameter("RegistrationCategory", typeof(string));
    
            var typeOfOwnershipParameter = typeOfOwnership != null ?
                new ObjectParameter("TypeOfOwnership", typeOfOwnership) :
                new ObjectParameter("TypeOfOwnership", typeof(string));
    
            var buisnessSectorParameter = buisnessSector != null ?
                new ObjectParameter("BuisnessSector", buisnessSector) :
                new ObjectParameter("BuisnessSector", typeof(string));
    
            var date_Incorportaion_CompanyParameter = date_Incorportaion_Company.HasValue ?
                new ObjectParameter("Date_Incorportaion_Company", date_Incorportaion_Company) :
                new ObjectParameter("Date_Incorportaion_Company", typeof(System.DateTime));
    
            var companyURLParameter = companyURL != null ?
                new ObjectParameter("CompanyURL", companyURL) :
                new ObjectParameter("CompanyURL", typeof(string));
    
            var street_AddressParameter = street_Address != null ?
                new ObjectParameter("Street_Address", street_Address) :
                new ObjectParameter("Street_Address", typeof(string));
    
            var street_Address_Line_2Parameter = street_Address_Line_2 != null ?
                new ObjectParameter("Street_Address_Line_2", street_Address_Line_2) :
                new ObjectParameter("Street_Address_Line_2", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var contactNoParameter = contactNo != null ?
                new ObjectParameter("ContactNo", contactNo) :
                new ObjectParameter("ContactNo", typeof(string));
    
            var faxNoParameter = faxNo != null ?
                new ObjectParameter("FaxNo", faxNo) :
                new ObjectParameter("FaxNo", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var pinCodeParameter = pinCode != null ?
                new ObjectParameter("PinCode", pinCode) :
                new ObjectParameter("PinCode", typeof(string));
    
            var tANNoParameter = tANNo != null ?
                new ObjectParameter("TANNo", tANNo) :
                new ObjectParameter("TANNo", typeof(string));
    
            var uAMNoParameter = uAMNo != null ?
                new ObjectParameter("UAMNo", uAMNo) :
                new ObjectParameter("UAMNo", typeof(string));
    
            var cINNoParameter = cINNo != null ?
                new ObjectParameter("CINNo", cINNo) :
                new ObjectParameter("CINNo", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VendorGeneralInfo", vendorRefNoParameter, logoPathParameter, registrationCategoryParameter, typeOfOwnershipParameter, buisnessSectorParameter, date_Incorportaion_CompanyParameter, companyURLParameter, street_AddressParameter, street_Address_Line_2Parameter, mobileNoParameter, contactNoParameter, faxNoParameter, stateParameter, cityParameter, pinCodeParameter, tANNoParameter, uAMNoParameter, cINNoParameter, typeParameter, returnID);
        }
    
        public virtual ObjectResult<sp_VendorRegisDetail_Result> sp_VendorRegisDetail(Nullable<long> vendorId, string vendorRefNo, string email, string workCodeFor)
        {
            var vendorIdParameter = vendorId.HasValue ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(long));
    
            var vendorRefNoParameter = vendorRefNo != null ?
                new ObjectParameter("VendorRefNo", vendorRefNo) :
                new ObjectParameter("VendorRefNo", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var workCodeForParameter = workCodeFor != null ?
                new ObjectParameter("WorkCodeFor", workCodeFor) :
                new ObjectParameter("WorkCodeFor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_VendorRegisDetail_Result>("sp_VendorRegisDetail", vendorIdParameter, vendorRefNoParameter, emailParameter, workCodeForParameter);
        }
    
        public virtual int sp_VendorRegisNoDetails(string vendorRefNo, string is_PANTAN, string panTan_No, string gSTNo, string uAM, string cIN, string isRegisterdwithgovt, ObjectParameter returnID)
        {
            var vendorRefNoParameter = vendorRefNo != null ?
                new ObjectParameter("VendorRefNo", vendorRefNo) :
                new ObjectParameter("VendorRefNo", typeof(string));
    
            var is_PANTANParameter = is_PANTAN != null ?
                new ObjectParameter("Is_PANTAN", is_PANTAN) :
                new ObjectParameter("Is_PANTAN", typeof(string));
    
            var panTan_NoParameter = panTan_No != null ?
                new ObjectParameter("PanTan_No", panTan_No) :
                new ObjectParameter("PanTan_No", typeof(string));
    
            var gSTNoParameter = gSTNo != null ?
                new ObjectParameter("GSTNo", gSTNo) :
                new ObjectParameter("GSTNo", typeof(string));
    
            var uAMParameter = uAM != null ?
                new ObjectParameter("UAM", uAM) :
                new ObjectParameter("UAM", typeof(string));
    
            var cINParameter = cIN != null ?
                new ObjectParameter("CIN", cIN) :
                new ObjectParameter("CIN", typeof(string));
    
            var isRegisterdwithgovtParameter = isRegisterdwithgovt != null ?
                new ObjectParameter("IsRegisterdwithgovt", isRegisterdwithgovt) :
                new ObjectParameter("IsRegisterdwithgovt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VendorRegisNoDetails", vendorRefNoParameter, is_PANTANParameter, panTan_NoParameter, gSTNoParameter, uAMParameter, cINParameter, isRegisterdwithgovtParameter, returnID);
        }
    
        public virtual int sp_VendorRegistration(Nullable<long> vendorID, string v_RegisterdDPSU, string panNo, string gSTNo, string v_CompName, string authPath, string nodalOfficerName, string nodalOfficerEmail, string isEsignVerify, ObjectParameter returnId)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(long));
    
            var v_RegisterdDPSUParameter = v_RegisterdDPSU != null ?
                new ObjectParameter("V_RegisterdDPSU", v_RegisterdDPSU) :
                new ObjectParameter("V_RegisterdDPSU", typeof(string));
    
            var panNoParameter = panNo != null ?
                new ObjectParameter("PanNo", panNo) :
                new ObjectParameter("PanNo", typeof(string));
    
            var gSTNoParameter = gSTNo != null ?
                new ObjectParameter("GSTNo", gSTNo) :
                new ObjectParameter("GSTNo", typeof(string));
    
            var v_CompNameParameter = v_CompName != null ?
                new ObjectParameter("V_CompName", v_CompName) :
                new ObjectParameter("V_CompName", typeof(string));
    
            var authPathParameter = authPath != null ?
                new ObjectParameter("AuthPath", authPath) :
                new ObjectParameter("AuthPath", typeof(string));
    
            var nodalOfficerNameParameter = nodalOfficerName != null ?
                new ObjectParameter("NodalOfficerName", nodalOfficerName) :
                new ObjectParameter("NodalOfficerName", typeof(string));
    
            var nodalOfficerEmailParameter = nodalOfficerEmail != null ?
                new ObjectParameter("NodalOfficerEmail", nodalOfficerEmail) :
                new ObjectParameter("NodalOfficerEmail", typeof(string));
    
            var isEsignVerifyParameter = isEsignVerify != null ?
                new ObjectParameter("IsEsignVerify", isEsignVerify) :
                new ObjectParameter("IsEsignVerify", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VendorRegistration", vendorIDParameter, v_RegisterdDPSUParameter, panNoParameter, gSTNoParameter, v_CompNameParameter, authPathParameter, nodalOfficerNameParameter, nodalOfficerEmailParameter, isEsignVerifyParameter, returnId);
        }
    
        public virtual int sp_VendorRegistrationByInvitation(Nullable<long> vendorID, string v_RegisterdDPSU, string panNo, string gSTNo, string v_CompName, string authPath, string nodalOfficerName, string nodalOfficerEmail, string isEsignVerify, string inviteDPSU, string isInvitation, string registrationNo, Nullable<System.DateTime> validtill, ObjectParameter returnId)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(long));
    
            var v_RegisterdDPSUParameter = v_RegisterdDPSU != null ?
                new ObjectParameter("V_RegisterdDPSU", v_RegisterdDPSU) :
                new ObjectParameter("V_RegisterdDPSU", typeof(string));
    
            var panNoParameter = panNo != null ?
                new ObjectParameter("PanNo", panNo) :
                new ObjectParameter("PanNo", typeof(string));
    
            var gSTNoParameter = gSTNo != null ?
                new ObjectParameter("GSTNo", gSTNo) :
                new ObjectParameter("GSTNo", typeof(string));
    
            var v_CompNameParameter = v_CompName != null ?
                new ObjectParameter("V_CompName", v_CompName) :
                new ObjectParameter("V_CompName", typeof(string));
    
            var authPathParameter = authPath != null ?
                new ObjectParameter("AuthPath", authPath) :
                new ObjectParameter("AuthPath", typeof(string));
    
            var nodalOfficerNameParameter = nodalOfficerName != null ?
                new ObjectParameter("NodalOfficerName", nodalOfficerName) :
                new ObjectParameter("NodalOfficerName", typeof(string));
    
            var nodalOfficerEmailParameter = nodalOfficerEmail != null ?
                new ObjectParameter("NodalOfficerEmail", nodalOfficerEmail) :
                new ObjectParameter("NodalOfficerEmail", typeof(string));
    
            var isEsignVerifyParameter = isEsignVerify != null ?
                new ObjectParameter("IsEsignVerify", isEsignVerify) :
                new ObjectParameter("IsEsignVerify", typeof(string));
    
            var inviteDPSUParameter = inviteDPSU != null ?
                new ObjectParameter("InviteDPSU", inviteDPSU) :
                new ObjectParameter("InviteDPSU", typeof(string));
    
            var isInvitationParameter = isInvitation != null ?
                new ObjectParameter("IsInvitation", isInvitation) :
                new ObjectParameter("IsInvitation", typeof(string));
    
            var registrationNoParameter = registrationNo != null ?
                new ObjectParameter("RegistrationNo", registrationNo) :
                new ObjectParameter("RegistrationNo", typeof(string));
    
            var validtillParameter = validtill.HasValue ?
                new ObjectParameter("Validtill", validtill) :
                new ObjectParameter("Validtill", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VendorRegistrationByInvitation", vendorIDParameter, v_RegisterdDPSUParameter, panNoParameter, gSTNoParameter, v_CompNameParameter, authPathParameter, nodalOfficerNameParameter, nodalOfficerEmailParameter, isEsignVerifyParameter, inviteDPSUParameter, isInvitationParameter, registrationNoParameter, validtillParameter, returnId);
        }
    
        public virtual int sp_VendorRegistrationDetails(Nullable<long> vendorDetailID, string vendorRefNo, string registrationCategory, string firmCompanyName, Nullable<long> typeOfOwnership, string scaleofBuisness, string ownership, string percentofOwnership, string fileofOwnership, Nullable<long> buisnessSector, Nullable<System.DateTime> date_Incorportaion_Company, string street_Address, string street_Address_Line_2, string city, string state, string pinCode, string firstName, string middleName, string lastName, string email, string contactNo, string faxNo, string type, ObjectParameter returnID)
        {
            var vendorDetailIDParameter = vendorDetailID.HasValue ?
                new ObjectParameter("VendorDetailID", vendorDetailID) :
                new ObjectParameter("VendorDetailID", typeof(long));
    
            var vendorRefNoParameter = vendorRefNo != null ?
                new ObjectParameter("VendorRefNo", vendorRefNo) :
                new ObjectParameter("VendorRefNo", typeof(string));
    
            var registrationCategoryParameter = registrationCategory != null ?
                new ObjectParameter("RegistrationCategory", registrationCategory) :
                new ObjectParameter("RegistrationCategory", typeof(string));
    
            var firmCompanyNameParameter = firmCompanyName != null ?
                new ObjectParameter("FirmCompanyName", firmCompanyName) :
                new ObjectParameter("FirmCompanyName", typeof(string));
    
            var typeOfOwnershipParameter = typeOfOwnership.HasValue ?
                new ObjectParameter("TypeOfOwnership", typeOfOwnership) :
                new ObjectParameter("TypeOfOwnership", typeof(long));
    
            var scaleofBuisnessParameter = scaleofBuisness != null ?
                new ObjectParameter("ScaleofBuisness", scaleofBuisness) :
                new ObjectParameter("ScaleofBuisness", typeof(string));
    
            var ownershipParameter = ownership != null ?
                new ObjectParameter("Ownership", ownership) :
                new ObjectParameter("Ownership", typeof(string));
    
            var percentofOwnershipParameter = percentofOwnership != null ?
                new ObjectParameter("PercentofOwnership", percentofOwnership) :
                new ObjectParameter("PercentofOwnership", typeof(string));
    
            var fileofOwnershipParameter = fileofOwnership != null ?
                new ObjectParameter("FileofOwnership", fileofOwnership) :
                new ObjectParameter("FileofOwnership", typeof(string));
    
            var buisnessSectorParameter = buisnessSector.HasValue ?
                new ObjectParameter("BuisnessSector", buisnessSector) :
                new ObjectParameter("BuisnessSector", typeof(long));
    
            var date_Incorportaion_CompanyParameter = date_Incorportaion_Company.HasValue ?
                new ObjectParameter("Date_Incorportaion_Company", date_Incorportaion_Company) :
                new ObjectParameter("Date_Incorportaion_Company", typeof(System.DateTime));
    
            var street_AddressParameter = street_Address != null ?
                new ObjectParameter("Street_Address", street_Address) :
                new ObjectParameter("Street_Address", typeof(string));
    
            var street_Address_Line_2Parameter = street_Address_Line_2 != null ?
                new ObjectParameter("Street_Address_Line_2", street_Address_Line_2) :
                new ObjectParameter("Street_Address_Line_2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var pinCodeParameter = pinCode != null ?
                new ObjectParameter("PinCode", pinCode) :
                new ObjectParameter("PinCode", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var contactNoParameter = contactNo != null ?
                new ObjectParameter("ContactNo", contactNo) :
                new ObjectParameter("ContactNo", typeof(string));
    
            var faxNoParameter = faxNo != null ?
                new ObjectParameter("FaxNo", faxNo) :
                new ObjectParameter("FaxNo", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VendorRegistrationDetails", vendorDetailIDParameter, vendorRefNoParameter, registrationCategoryParameter, firmCompanyNameParameter, typeOfOwnershipParameter, scaleofBuisnessParameter, ownershipParameter, percentofOwnershipParameter, fileofOwnershipParameter, buisnessSectorParameter, date_Incorportaion_CompanyParameter, street_AddressParameter, street_Address_Line_2Parameter, cityParameter, stateParameter, pinCodeParameter, firstNameParameter, middleNameParameter, lastNameParameter, emailParameter, contactNoParameter, faxNoParameter, typeParameter, returnID);
        }
    
        public virtual int sp_VendorRegistrationMultiAccount(string vendorRefNo, string nameofBank, string typeofAccount, string accountNo, string mICRCode, string iFSCCode, string certificate)
        {
            var vendorRefNoParameter = vendorRefNo != null ?
                new ObjectParameter("VendorRefNo", vendorRefNo) :
                new ObjectParameter("VendorRefNo", typeof(string));
    
            var nameofBankParameter = nameofBank != null ?
                new ObjectParameter("NameofBank", nameofBank) :
                new ObjectParameter("NameofBank", typeof(string));
    
            var typeofAccountParameter = typeofAccount != null ?
                new ObjectParameter("TypeofAccount", typeofAccount) :
                new ObjectParameter("TypeofAccount", typeof(string));
    
            var accountNoParameter = accountNo != null ?
                new ObjectParameter("AccountNo", accountNo) :
                new ObjectParameter("AccountNo", typeof(string));
    
            var mICRCodeParameter = mICRCode != null ?
                new ObjectParameter("MICRCode", mICRCode) :
                new ObjectParameter("MICRCode", typeof(string));
    
            var iFSCCodeParameter = iFSCCode != null ?
                new ObjectParameter("IFSCCode", iFSCCode) :
                new ObjectParameter("IFSCCode", typeof(string));
    
            var certificateParameter = certificate != null ?
                new ObjectParameter("Certificate", certificate) :
                new ObjectParameter("Certificate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VendorRegistrationMultiAccount", vendorRefNoParameter, nameofBankParameter, typeofAccountParameter, accountNoParameter, mICRCodeParameter, iFSCCodeParameter, certificateParameter);
        }
    
        public virtual int sp_VendorRegistrationMultiGrid(Nullable<long> masterId, string vendorRefNo, string type, string enterNameof, string name, string designation, string dIN_No, Nullable<long> mobileNo, string mProcess)
        {
            var masterIdParameter = masterId.HasValue ?
                new ObjectParameter("MasterId", masterId) :
                new ObjectParameter("MasterId", typeof(long));
    
            var vendorRefNoParameter = vendorRefNo != null ?
                new ObjectParameter("VendorRefNo", vendorRefNo) :
                new ObjectParameter("VendorRefNo", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var enterNameofParameter = enterNameof != null ?
                new ObjectParameter("EnterNameof", enterNameof) :
                new ObjectParameter("EnterNameof", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var designationParameter = designation != null ?
                new ObjectParameter("Designation", designation) :
                new ObjectParameter("Designation", typeof(string));
    
            var dIN_NoParameter = dIN_No != null ?
                new ObjectParameter("DIN_No", dIN_No) :
                new ObjectParameter("DIN_No", typeof(string));
    
            var mobileNoParameter = mobileNo.HasValue ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(long));
    
            var mProcessParameter = mProcess != null ?
                new ObjectParameter("mProcess", mProcess) :
                new ObjectParameter("mProcess", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VendorRegistrationMultiGrid", masterIdParameter, vendorRefNoParameter, typeParameter, enterNameofParameter, nameParameter, designationParameter, dIN_NoParameter, mobileNoParameter, mProcessParameter);
        }
    
        public virtual int sp_VendorRegistrationMultiGrid1(Nullable<long> masterId, string vendorRefNo, string type, Nullable<long> productNomenClature, Nullable<long> natoGroup, Nullable<long> natoClass, Nullable<long> itemCode, Nullable<long> hSNCode)
        {
            var masterIdParameter = masterId.HasValue ?
                new ObjectParameter("MasterId", masterId) :
                new ObjectParameter("MasterId", typeof(long));
    
            var vendorRefNoParameter = vendorRefNo != null ?
                new ObjectParameter("VendorRefNo", vendorRefNo) :
                new ObjectParameter("VendorRefNo", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var productNomenClatureParameter = productNomenClature.HasValue ?
                new ObjectParameter("ProductNomenClature", productNomenClature) :
                new ObjectParameter("ProductNomenClature", typeof(long));
    
            var natoGroupParameter = natoGroup.HasValue ?
                new ObjectParameter("NatoGroup", natoGroup) :
                new ObjectParameter("NatoGroup", typeof(long));
    
            var natoClassParameter = natoClass.HasValue ?
                new ObjectParameter("NatoClass", natoClass) :
                new ObjectParameter("NatoClass", typeof(long));
    
            var itemCodeParameter = itemCode.HasValue ?
                new ObjectParameter("ItemCode", itemCode) :
                new ObjectParameter("ItemCode", typeof(long));
    
            var hSNCodeParameter = hSNCode.HasValue ?
                new ObjectParameter("HSNCode", hSNCode) :
                new ObjectParameter("HSNCode", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VendorRegistrationMultiGrid1", masterIdParameter, vendorRefNoParameter, typeParameter, productNomenClatureParameter, natoGroupParameter, natoClassParameter, itemCodeParameter, hSNCodeParameter);
        }
    
        public virtual int sp_VendorRegistrationMultiGrid2(Nullable<long> masterId, string vendorRefNo, string type, Nullable<long> productNomenClature1, Nullable<long> technologyLevel1, Nullable<long> technologyLevel2, Nullable<long> technologyLevel3)
        {
            var masterIdParameter = masterId.HasValue ?
                new ObjectParameter("MasterId", masterId) :
                new ObjectParameter("MasterId", typeof(long));
    
            var vendorRefNoParameter = vendorRefNo != null ?
                new ObjectParameter("VendorRefNo", vendorRefNo) :
                new ObjectParameter("VendorRefNo", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var productNomenClature1Parameter = productNomenClature1.HasValue ?
                new ObjectParameter("ProductNomenClature1", productNomenClature1) :
                new ObjectParameter("ProductNomenClature1", typeof(long));
    
            var technologyLevel1Parameter = technologyLevel1.HasValue ?
                new ObjectParameter("TechnologyLevel1", technologyLevel1) :
                new ObjectParameter("TechnologyLevel1", typeof(long));
    
            var technologyLevel2Parameter = technologyLevel2.HasValue ?
                new ObjectParameter("TechnologyLevel2", technologyLevel2) :
                new ObjectParameter("TechnologyLevel2", typeof(long));
    
            var technologyLevel3Parameter = technologyLevel3.HasValue ?
                new ObjectParameter("TechnologyLevel3", technologyLevel3) :
                new ObjectParameter("TechnologyLevel3", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VendorRegistrationMultiGrid2", masterIdParameter, vendorRefNoParameter, typeParameter, productNomenClature1Parameter, technologyLevel1Parameter, technologyLevel2Parameter, technologyLevel3Parameter);
        }
    
        public virtual int sp_VendorRegistrationMultiGrid3(Nullable<long> masterId, string vendorRefNo, string type, string items, string basicRawMeterial, Nullable<long> sourceofMaterial, string major_Raw_Material_Suppliers)
        {
            var masterIdParameter = masterId.HasValue ?
                new ObjectParameter("MasterId", masterId) :
                new ObjectParameter("MasterId", typeof(long));
    
            var vendorRefNoParameter = vendorRefNo != null ?
                new ObjectParameter("VendorRefNo", vendorRefNo) :
                new ObjectParameter("VendorRefNo", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var itemsParameter = items != null ?
                new ObjectParameter("Items", items) :
                new ObjectParameter("Items", typeof(string));
    
            var basicRawMeterialParameter = basicRawMeterial != null ?
                new ObjectParameter("BasicRawMeterial", basicRawMeterial) :
                new ObjectParameter("BasicRawMeterial", typeof(string));
    
            var sourceofMaterialParameter = sourceofMaterial.HasValue ?
                new ObjectParameter("SourceofMaterial", sourceofMaterial) :
                new ObjectParameter("SourceofMaterial", typeof(long));
    
            var major_Raw_Material_SuppliersParameter = major_Raw_Material_Suppliers != null ?
                new ObjectParameter("Major_Raw_Material_Suppliers", major_Raw_Material_Suppliers) :
                new ObjectParameter("Major_Raw_Material_Suppliers", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VendorRegistrationMultiGrid3", masterIdParameter, vendorRefNoParameter, typeParameter, itemsParameter, basicRawMeterialParameter, sourceofMaterialParameter, major_Raw_Material_SuppliersParameter);
        }
    
        public virtual int sp_VendorRegistrationMultiGrid4(Nullable<long> masterId, string vendorRefNo, string type, string reputed_Customer, string description, string supplyNoDate, string orderQuantity, string suppliedQuantity, Nullable<System.DateTime> date2)
        {
            var masterIdParameter = masterId.HasValue ?
                new ObjectParameter("MasterId", masterId) :
                new ObjectParameter("MasterId", typeof(long));
    
            var vendorRefNoParameter = vendorRefNo != null ?
                new ObjectParameter("VendorRefNo", vendorRefNo) :
                new ObjectParameter("VendorRefNo", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var reputed_CustomerParameter = reputed_Customer != null ?
                new ObjectParameter("Reputed_Customer", reputed_Customer) :
                new ObjectParameter("Reputed_Customer", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var supplyNoDateParameter = supplyNoDate != null ?
                new ObjectParameter("SupplyNoDate", supplyNoDate) :
                new ObjectParameter("SupplyNoDate", typeof(string));
    
            var orderQuantityParameter = orderQuantity != null ?
                new ObjectParameter("OrderQuantity", orderQuantity) :
                new ObjectParameter("OrderQuantity", typeof(string));
    
            var suppliedQuantityParameter = suppliedQuantity != null ?
                new ObjectParameter("SuppliedQuantity", suppliedQuantity) :
                new ObjectParameter("SuppliedQuantity", typeof(string));
    
            var date2Parameter = date2.HasValue ?
                new ObjectParameter("Date2", date2) :
                new ObjectParameter("Date2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VendorRegistrationMultiGrid4", masterIdParameter, vendorRefNoParameter, typeParameter, reputed_CustomerParameter, descriptionParameter, supplyNoDateParameter, orderQuantityParameter, suppliedQuantityParameter, date2Parameter);
        }
    
        public virtual int sp_VendorRegistrationMultiGrid5(Nullable<long> masterId, string vendorRefNo, string type, string reputed_Customer1, string description1, string supplyNoDate1, string orderQuantity1, string suppliedQuantity1, Nullable<System.DateTime> date21)
        {
            var masterIdParameter = masterId.HasValue ?
                new ObjectParameter("MasterId", masterId) :
                new ObjectParameter("MasterId", typeof(long));
    
            var vendorRefNoParameter = vendorRefNo != null ?
                new ObjectParameter("VendorRefNo", vendorRefNo) :
                new ObjectParameter("VendorRefNo", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var reputed_Customer1Parameter = reputed_Customer1 != null ?
                new ObjectParameter("Reputed_Customer1", reputed_Customer1) :
                new ObjectParameter("Reputed_Customer1", typeof(string));
    
            var description1Parameter = description1 != null ?
                new ObjectParameter("Description1", description1) :
                new ObjectParameter("Description1", typeof(string));
    
            var supplyNoDate1Parameter = supplyNoDate1 != null ?
                new ObjectParameter("SupplyNoDate1", supplyNoDate1) :
                new ObjectParameter("SupplyNoDate1", typeof(string));
    
            var orderQuantity1Parameter = orderQuantity1 != null ?
                new ObjectParameter("OrderQuantity1", orderQuantity1) :
                new ObjectParameter("OrderQuantity1", typeof(string));
    
            var suppliedQuantity1Parameter = suppliedQuantity1 != null ?
                new ObjectParameter("SuppliedQuantity1", suppliedQuantity1) :
                new ObjectParameter("SuppliedQuantity1", typeof(string));
    
            var date21Parameter = date21.HasValue ?
                new ObjectParameter("Date21", date21) :
                new ObjectParameter("Date21", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VendorRegistrationMultiGrid5", masterIdParameter, vendorRefNoParameter, typeParameter, reputed_Customer1Parameter, description1Parameter, supplyNoDate1Parameter, orderQuantity1Parameter, suppliedQuantity1Parameter, date21Parameter);
        }
    
        public virtual int sp_VendorRegistrationMultiGridAllPlantandMachines(Nullable<long> masterId, string vendorRefNo, string description_Machine_Model_Specs, string make, string quantity, string date_of_Purchase, string usage)
        {
            var masterIdParameter = masterId.HasValue ?
                new ObjectParameter("MasterId", masterId) :
                new ObjectParameter("MasterId", typeof(long));
    
            var vendorRefNoParameter = vendorRefNo != null ?
                new ObjectParameter("VendorRefNo", vendorRefNo) :
                new ObjectParameter("VendorRefNo", typeof(string));
    
            var description_Machine_Model_SpecsParameter = description_Machine_Model_Specs != null ?
                new ObjectParameter("Description_Machine_Model_Specs", description_Machine_Model_Specs) :
                new ObjectParameter("Description_Machine_Model_Specs", typeof(string));
    
            var makeParameter = make != null ?
                new ObjectParameter("Make", make) :
                new ObjectParameter("Make", typeof(string));
    
            var quantityParameter = quantity != null ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(string));
    
            var date_of_PurchaseParameter = date_of_Purchase != null ?
                new ObjectParameter("Date_of_Purchase", date_of_Purchase) :
                new ObjectParameter("Date_of_Purchase", typeof(string));
    
            var usageParameter = usage != null ?
                new ObjectParameter("Usage", usage) :
                new ObjectParameter("Usage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VendorRegistrationMultiGridAllPlantandMachines", masterIdParameter, vendorRefNoParameter, description_Machine_Model_SpecsParameter, makeParameter, quantityParameter, date_of_PurchaseParameter, usageParameter);
        }
    
        public virtual int sp_VendorRegistrationMultiGridAreaDetail(Nullable<long> masterId, string vendorRefNo, string area_Factory_Name, string pRODUCTION_AREA, string iNSPECTION_AREA, string tOTAL_COVERED_AREA, string total_Area)
        {
            var masterIdParameter = masterId.HasValue ?
                new ObjectParameter("MasterId", masterId) :
                new ObjectParameter("MasterId", typeof(long));
    
            var vendorRefNoParameter = vendorRefNo != null ?
                new ObjectParameter("VendorRefNo", vendorRefNo) :
                new ObjectParameter("VendorRefNo", typeof(string));
    
            var area_Factory_NameParameter = area_Factory_Name != null ?
                new ObjectParameter("Area_Factory_Name", area_Factory_Name) :
                new ObjectParameter("Area_Factory_Name", typeof(string));
    
            var pRODUCTION_AREAParameter = pRODUCTION_AREA != null ?
                new ObjectParameter("PRODUCTION_AREA", pRODUCTION_AREA) :
                new ObjectParameter("PRODUCTION_AREA", typeof(string));
    
            var iNSPECTION_AREAParameter = iNSPECTION_AREA != null ?
                new ObjectParameter("INSPECTION_AREA", iNSPECTION_AREA) :
                new ObjectParameter("INSPECTION_AREA", typeof(string));
    
            var tOTAL_COVERED_AREAParameter = tOTAL_COVERED_AREA != null ?
                new ObjectParameter("TOTAL_COVERED_AREA", tOTAL_COVERED_AREA) :
                new ObjectParameter("TOTAL_COVERED_AREA", typeof(string));
    
            var total_AreaParameter = total_Area != null ?
                new ObjectParameter("Total_Area", total_Area) :
                new ObjectParameter("Total_Area", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VendorRegistrationMultiGridAreaDetail", masterIdParameter, vendorRefNoParameter, area_Factory_NameParameter, pRODUCTION_AREAParameter, iNSPECTION_AREAParameter, tOTAL_COVERED_AREAParameter, total_AreaParameter);
        }
    
        public virtual int sp_VendorRegistrationMultiGridAuthdistri(Nullable<long> masterId, string vendorRefNo, string distributorName, string distributorStreetAddress, string distributorState, string distributorPincode, string distributorPhone, string distributorFax, string distributorEmail)
        {
            var masterIdParameter = masterId.HasValue ?
                new ObjectParameter("MasterId", masterId) :
                new ObjectParameter("MasterId", typeof(long));
    
            var vendorRefNoParameter = vendorRefNo != null ?
                new ObjectParameter("VendorRefNo", vendorRefNo) :
                new ObjectParameter("VendorRefNo", typeof(string));
    
            var distributorNameParameter = distributorName != null ?
                new ObjectParameter("DistributorName", distributorName) :
                new ObjectParameter("DistributorName", typeof(string));
    
            var distributorStreetAddressParameter = distributorStreetAddress != null ?
                new ObjectParameter("DistributorStreetAddress", distributorStreetAddress) :
                new ObjectParameter("DistributorStreetAddress", typeof(string));
    
            var distributorStateParameter = distributorState != null ?
                new ObjectParameter("DistributorState", distributorState) :
                new ObjectParameter("DistributorState", typeof(string));
    
            var distributorPincodeParameter = distributorPincode != null ?
                new ObjectParameter("DistributorPincode", distributorPincode) :
                new ObjectParameter("DistributorPincode", typeof(string));
    
            var distributorPhoneParameter = distributorPhone != null ?
                new ObjectParameter("DistributorPhone", distributorPhone) :
                new ObjectParameter("DistributorPhone", typeof(string));
    
            var distributorFaxParameter = distributorFax != null ?
                new ObjectParameter("DistributorFax", distributorFax) :
                new ObjectParameter("DistributorFax", typeof(string));
    
            var distributorEmailParameter = distributorEmail != null ?
                new ObjectParameter("DistributorEmail", distributorEmail) :
                new ObjectParameter("DistributorEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VendorRegistrationMultiGridAuthdistri", masterIdParameter, vendorRefNoParameter, distributorNameParameter, distributorStreetAddressParameter, distributorStateParameter, distributorPincodeParameter, distributorPhoneParameter, distributorFaxParameter, distributorEmailParameter);
        }
    
        public virtual int sp_VendorRegistrationMultiGridEmpDetail(Nullable<long> masterId, string vendorRefNo, string tOTAL_Employees, string aDMINISTRATIVE, string tECHNICAL, string nON_TECHNICAL, string qC_INSPECTION, string sKILLED_LABOUR, string uNSKILLED_LABOUR)
        {
            var masterIdParameter = masterId.HasValue ?
                new ObjectParameter("MasterId", masterId) :
                new ObjectParameter("MasterId", typeof(long));
    
            var vendorRefNoParameter = vendorRefNo != null ?
                new ObjectParameter("VendorRefNo", vendorRefNo) :
                new ObjectParameter("VendorRefNo", typeof(string));
    
            var tOTAL_EmployeesParameter = tOTAL_Employees != null ?
                new ObjectParameter("TOTAL_Employees", tOTAL_Employees) :
                new ObjectParameter("TOTAL_Employees", typeof(string));
    
            var aDMINISTRATIVEParameter = aDMINISTRATIVE != null ?
                new ObjectParameter("ADMINISTRATIVE", aDMINISTRATIVE) :
                new ObjectParameter("ADMINISTRATIVE", typeof(string));
    
            var tECHNICALParameter = tECHNICAL != null ?
                new ObjectParameter("TECHNICAL", tECHNICAL) :
                new ObjectParameter("TECHNICAL", typeof(string));
    
            var nON_TECHNICALParameter = nON_TECHNICAL != null ?
                new ObjectParameter("NON_TECHNICAL", nON_TECHNICAL) :
                new ObjectParameter("NON_TECHNICAL", typeof(string));
    
            var qC_INSPECTIONParameter = qC_INSPECTION != null ?
                new ObjectParameter("QC_INSPECTION", qC_INSPECTION) :
                new ObjectParameter("QC_INSPECTION", typeof(string));
    
            var sKILLED_LABOURParameter = sKILLED_LABOUR != null ?
                new ObjectParameter("SKILLED_LABOUR", sKILLED_LABOUR) :
                new ObjectParameter("SKILLED_LABOUR", typeof(string));
    
            var uNSKILLED_LABOURParameter = uNSKILLED_LABOUR != null ?
                new ObjectParameter("UNSKILLED_LABOUR", uNSKILLED_LABOUR) :
                new ObjectParameter("UNSKILLED_LABOUR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VendorRegistrationMultiGridEmpDetail", masterIdParameter, vendorRefNoParameter, tOTAL_EmployeesParameter, aDMINISTRATIVEParameter, tECHNICALParameter, nON_TECHNICALParameter, qC_INSPECTIONParameter, sKILLED_LABOURParameter, uNSKILLED_LABOURParameter);
        }
    
        public virtual int sp_VendorRegistrationMultiGridImage(Nullable<long> imageID, string vendorRefNo, string name, string path, string type)
        {
            var imageIDParameter = imageID.HasValue ?
                new ObjectParameter("ImageID", imageID) :
                new ObjectParameter("ImageID", typeof(long));
    
            var vendorRefNoParameter = vendorRefNo != null ?
                new ObjectParameter("VendorRefNo", vendorRefNo) :
                new ObjectParameter("VendorRefNo", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VendorRegistrationMultiGridImage", imageIDParameter, vendorRefNoParameter, nameParameter, pathParameter, typeParameter);
        }
    
        public virtual int sp_VendorRegistrationMultiGridIteProducedNotSupplied(string vendorRefNo, string reputed_Customer1, string description1, string supplyNoDate1, string orderQuantity1, string suppliedQuantity1, Nullable<System.DateTime> date21)
        {
            var vendorRefNoParameter = vendorRefNo != null ?
                new ObjectParameter("VendorRefNo", vendorRefNo) :
                new ObjectParameter("VendorRefNo", typeof(string));
    
            var reputed_Customer1Parameter = reputed_Customer1 != null ?
                new ObjectParameter("Reputed_Customer1", reputed_Customer1) :
                new ObjectParameter("Reputed_Customer1", typeof(string));
    
            var description1Parameter = description1 != null ?
                new ObjectParameter("Description1", description1) :
                new ObjectParameter("Description1", typeof(string));
    
            var supplyNoDate1Parameter = supplyNoDate1 != null ?
                new ObjectParameter("SupplyNoDate1", supplyNoDate1) :
                new ObjectParameter("SupplyNoDate1", typeof(string));
    
            var orderQuantity1Parameter = orderQuantity1 != null ?
                new ObjectParameter("OrderQuantity1", orderQuantity1) :
                new ObjectParameter("OrderQuantity1", typeof(string));
    
            var suppliedQuantity1Parameter = suppliedQuantity1 != null ?
                new ObjectParameter("SuppliedQuantity1", suppliedQuantity1) :
                new ObjectParameter("SuppliedQuantity1", typeof(string));
    
            var date21Parameter = date21.HasValue ?
                new ObjectParameter("Date21", date21) :
                new ObjectParameter("Date21", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VendorRegistrationMultiGridIteProducedNotSupplied", vendorRefNoParameter, reputed_Customer1Parameter, description1Parameter, supplyNoDate1Parameter, orderQuantity1Parameter, suppliedQuantity1Parameter, date21Parameter);
        }
    
        public virtual int sp_VendorRegistrationMultiGridIteProducedSupplied(string vendorRefNo, string reputed_Customer, string description, string supplyNoDate, string orderQuantity, string suppliedQuantity, Nullable<System.DateTime> date2, string type)
        {
            var vendorRefNoParameter = vendorRefNo != null ?
                new ObjectParameter("VendorRefNo", vendorRefNo) :
                new ObjectParameter("VendorRefNo", typeof(string));
    
            var reputed_CustomerParameter = reputed_Customer != null ?
                new ObjectParameter("Reputed_Customer", reputed_Customer) :
                new ObjectParameter("Reputed_Customer", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var supplyNoDateParameter = supplyNoDate != null ?
                new ObjectParameter("SupplyNoDate", supplyNoDate) :
                new ObjectParameter("SupplyNoDate", typeof(string));
    
            var orderQuantityParameter = orderQuantity != null ?
                new ObjectParameter("OrderQuantity", orderQuantity) :
                new ObjectParameter("OrderQuantity", typeof(string));
    
            var suppliedQuantityParameter = suppliedQuantity != null ?
                new ObjectParameter("SuppliedQuantity", suppliedQuantity) :
                new ObjectParameter("SuppliedQuantity", typeof(string));
    
            var date2Parameter = date2.HasValue ?
                new ObjectParameter("Date2", date2) :
                new ObjectParameter("Date2", typeof(System.DateTime));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VendorRegistrationMultiGridIteProducedSupplied", vendorRefNoParameter, reputed_CustomerParameter, descriptionParameter, supplyNoDateParameter, orderQuantityParameter, suppliedQuantityParameter, date2Parameter, typeParameter);
        }
    
        public virtual int sp_VendorRegistrationMultiGridJointVentureFacility(Nullable<long> masterId, string vendorRefNo, string jointVentureName, string isJointVentureCountry, string completeAddress, string contOfficialName, string telephoneNo, string faxNo, string emailId)
        {
            var masterIdParameter = masterId.HasValue ?
                new ObjectParameter("MasterId", masterId) :
                new ObjectParameter("MasterId", typeof(long));
    
            var vendorRefNoParameter = vendorRefNo != null ?
                new ObjectParameter("VendorRefNo", vendorRefNo) :
                new ObjectParameter("VendorRefNo", typeof(string));
    
            var jointVentureNameParameter = jointVentureName != null ?
                new ObjectParameter("JointVentureName", jointVentureName) :
                new ObjectParameter("JointVentureName", typeof(string));
    
            var isJointVentureCountryParameter = isJointVentureCountry != null ?
                new ObjectParameter("IsJointVentureCountry", isJointVentureCountry) :
                new ObjectParameter("IsJointVentureCountry", typeof(string));
    
            var completeAddressParameter = completeAddress != null ?
                new ObjectParameter("CompleteAddress", completeAddress) :
                new ObjectParameter("CompleteAddress", typeof(string));
    
            var contOfficialNameParameter = contOfficialName != null ?
                new ObjectParameter("ContOfficialName", contOfficialName) :
                new ObjectParameter("ContOfficialName", typeof(string));
    
            var telephoneNoParameter = telephoneNo != null ?
                new ObjectParameter("TelephoneNo", telephoneNo) :
                new ObjectParameter("TelephoneNo", typeof(string));
    
            var faxNoParameter = faxNo != null ?
                new ObjectParameter("FaxNo", faxNo) :
                new ObjectParameter("FaxNo", typeof(string));
    
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VendorRegistrationMultiGridJointVentureFacility", masterIdParameter, vendorRefNoParameter, jointVentureNameParameter, isJointVentureCountryParameter, completeAddressParameter, contOfficialNameParameter, telephoneNoParameter, faxNoParameter, emailIdParameter);
        }
    
        public virtual int sp_VendorRegistrationMultiGridManuFac(Nullable<long> masterId, string vendorRefNo, string name_of_Factory, string factory_GSTNo, string comp_Postal_Address, string contact_Official_Name, string telephone_No, string fax_No, string email_Id)
        {
            var masterIdParameter = masterId.HasValue ?
                new ObjectParameter("MasterId", masterId) :
                new ObjectParameter("MasterId", typeof(long));
    
            var vendorRefNoParameter = vendorRefNo != null ?
                new ObjectParameter("VendorRefNo", vendorRefNo) :
                new ObjectParameter("VendorRefNo", typeof(string));
    
            var name_of_FactoryParameter = name_of_Factory != null ?
                new ObjectParameter("Name_of_Factory", name_of_Factory) :
                new ObjectParameter("Name_of_Factory", typeof(string));
    
            var factory_GSTNoParameter = factory_GSTNo != null ?
                new ObjectParameter("Factory_GSTNo", factory_GSTNo) :
                new ObjectParameter("Factory_GSTNo", typeof(string));
    
            var comp_Postal_AddressParameter = comp_Postal_Address != null ?
                new ObjectParameter("Comp_Postal_Address", comp_Postal_Address) :
                new ObjectParameter("Comp_Postal_Address", typeof(string));
    
            var contact_Official_NameParameter = contact_Official_Name != null ?
                new ObjectParameter("Contact_Official_Name", contact_Official_Name) :
                new ObjectParameter("Contact_Official_Name", typeof(string));
    
            var telephone_NoParameter = telephone_No != null ?
                new ObjectParameter("Telephone_No", telephone_No) :
                new ObjectParameter("Telephone_No", typeof(string));
    
            var fax_NoParameter = fax_No != null ?
                new ObjectParameter("Fax_No", fax_No) :
                new ObjectParameter("Fax_No", typeof(string));
    
            var email_IdParameter = email_Id != null ?
                new ObjectParameter("Email_Id", email_Id) :
                new ObjectParameter("Email_Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VendorRegistrationMultiGridManuFac", masterIdParameter, vendorRefNoParameter, name_of_FactoryParameter, factory_GSTNoParameter, comp_Postal_AddressParameter, contact_Official_NameParameter, telephone_NoParameter, fax_NoParameter, email_IdParameter);
        }
    
        public virtual int sp_VendorRegistrationMultiGridOEM(Nullable<long> masterID, string vendorRefNo, string oEMName, string oEMAddress, string oEMCountry, string oEMOfficialName, string oEMTelephoneNo, string oEMFaxNo, string oEMEmailId, string fileAuthorization)
        {
            var masterIDParameter = masterID.HasValue ?
                new ObjectParameter("MasterID", masterID) :
                new ObjectParameter("MasterID", typeof(long));
    
            var vendorRefNoParameter = vendorRefNo != null ?
                new ObjectParameter("VendorRefNo", vendorRefNo) :
                new ObjectParameter("VendorRefNo", typeof(string));
    
            var oEMNameParameter = oEMName != null ?
                new ObjectParameter("OEMName", oEMName) :
                new ObjectParameter("OEMName", typeof(string));
    
            var oEMAddressParameter = oEMAddress != null ?
                new ObjectParameter("OEMAddress", oEMAddress) :
                new ObjectParameter("OEMAddress", typeof(string));
    
            var oEMCountryParameter = oEMCountry != null ?
                new ObjectParameter("OEMCountry", oEMCountry) :
                new ObjectParameter("OEMCountry", typeof(string));
    
            var oEMOfficialNameParameter = oEMOfficialName != null ?
                new ObjectParameter("OEMOfficialName", oEMOfficialName) :
                new ObjectParameter("OEMOfficialName", typeof(string));
    
            var oEMTelephoneNoParameter = oEMTelephoneNo != null ?
                new ObjectParameter("OEMTelephoneNo", oEMTelephoneNo) :
                new ObjectParameter("OEMTelephoneNo", typeof(string));
    
            var oEMFaxNoParameter = oEMFaxNo != null ?
                new ObjectParameter("OEMFaxNo", oEMFaxNo) :
                new ObjectParameter("OEMFaxNo", typeof(string));
    
            var oEMEmailIdParameter = oEMEmailId != null ?
                new ObjectParameter("OEMEmailId", oEMEmailId) :
                new ObjectParameter("OEMEmailId", typeof(string));
    
            var fileAuthorizationParameter = fileAuthorization != null ?
                new ObjectParameter("FileAuthorization", fileAuthorization) :
                new ObjectParameter("FileAuthorization", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VendorRegistrationMultiGridOEM", masterIDParameter, vendorRefNoParameter, oEMNameParameter, oEMAddressParameter, oEMCountryParameter, oEMOfficialNameParameter, oEMTelephoneNoParameter, oEMFaxNoParameter, oEMEmailIdParameter, fileAuthorizationParameter);
        }
    
        public virtual int sp_VendorRegistrationMultiGridOutsourcing(Nullable<long> masterId, string vendorRefNo, string outsourcingMainEquipment, string outsourcingTestEquip, string outsourcingProcessfacility, string outsoursingNameAddressofSubContractor)
        {
            var masterIdParameter = masterId.HasValue ?
                new ObjectParameter("MasterId", masterId) :
                new ObjectParameter("MasterId", typeof(long));
    
            var vendorRefNoParameter = vendorRefNo != null ?
                new ObjectParameter("VendorRefNo", vendorRefNo) :
                new ObjectParameter("VendorRefNo", typeof(string));
    
            var outsourcingMainEquipmentParameter = outsourcingMainEquipment != null ?
                new ObjectParameter("OutsourcingMainEquipment", outsourcingMainEquipment) :
                new ObjectParameter("OutsourcingMainEquipment", typeof(string));
    
            var outsourcingTestEquipParameter = outsourcingTestEquip != null ?
                new ObjectParameter("OutsourcingTestEquip", outsourcingTestEquip) :
                new ObjectParameter("OutsourcingTestEquip", typeof(string));
    
            var outsourcingProcessfacilityParameter = outsourcingProcessfacility != null ?
                new ObjectParameter("OutsourcingProcessfacility", outsourcingProcessfacility) :
                new ObjectParameter("OutsourcingProcessfacility", typeof(string));
    
            var outsoursingNameAddressofSubContractorParameter = outsoursingNameAddressofSubContractor != null ?
                new ObjectParameter("OutsoursingNameAddressofSubContractor", outsoursingNameAddressofSubContractor) :
                new ObjectParameter("OutsoursingNameAddressofSubContractor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VendorRegistrationMultiGridOutsourcing", masterIdParameter, vendorRefNoParameter, outsourcingMainEquipmentParameter, outsourcingTestEquipParameter, outsourcingProcessfacilityParameter, outsoursingNameAddressofSubContractorParameter);
        }
    
        public virtual int sp_VendorRegistrationMultiGridProductDetails(string vendorRefNo, string productNomenClature, Nullable<long> natoGroup, Nullable<long> natoClass, Nullable<long> itemCode, Nullable<long> technology, Nullable<long> subTechnology, string hSNCode)
        {
            var vendorRefNoParameter = vendorRefNo != null ?
                new ObjectParameter("VendorRefNo", vendorRefNo) :
                new ObjectParameter("VendorRefNo", typeof(string));
    
            var productNomenClatureParameter = productNomenClature != null ?
                new ObjectParameter("ProductNomenClature", productNomenClature) :
                new ObjectParameter("ProductNomenClature", typeof(string));
    
            var natoGroupParameter = natoGroup.HasValue ?
                new ObjectParameter("NatoGroup", natoGroup) :
                new ObjectParameter("NatoGroup", typeof(long));
    
            var natoClassParameter = natoClass.HasValue ?
                new ObjectParameter("NatoClass", natoClass) :
                new ObjectParameter("NatoClass", typeof(long));
    
            var itemCodeParameter = itemCode.HasValue ?
                new ObjectParameter("ItemCode", itemCode) :
                new ObjectParameter("ItemCode", typeof(long));
    
            var technologyParameter = technology.HasValue ?
                new ObjectParameter("Technology", technology) :
                new ObjectParameter("Technology", typeof(long));
    
            var subTechnologyParameter = subTechnology.HasValue ?
                new ObjectParameter("SubTechnology", subTechnology) :
                new ObjectParameter("SubTechnology", typeof(long));
    
            var hSNCodeParameter = hSNCode != null ?
                new ObjectParameter("HSNCode", hSNCode) :
                new ObjectParameter("HSNCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VendorRegistrationMultiGridProductDetails", vendorRefNoParameter, productNomenClatureParameter, natoGroupParameter, natoClassParameter, itemCodeParameter, technologyParameter, subTechnologyParameter, hSNCodeParameter);
        }
    
        public virtual int sp_VendorRegistrationMultiGridRegisNoDetails(string vendorRefNo, string name_PSU_UnderGovt, string registrationNo, string certificate_valid_upto, string upload_Registration_Certificate)
        {
            var vendorRefNoParameter = vendorRefNo != null ?
                new ObjectParameter("VendorRefNo", vendorRefNo) :
                new ObjectParameter("VendorRefNo", typeof(string));
    
            var name_PSU_UnderGovtParameter = name_PSU_UnderGovt != null ?
                new ObjectParameter("Name_PSU_UnderGovt", name_PSU_UnderGovt) :
                new ObjectParameter("Name_PSU_UnderGovt", typeof(string));
    
            var registrationNoParameter = registrationNo != null ?
                new ObjectParameter("RegistrationNo", registrationNo) :
                new ObjectParameter("RegistrationNo", typeof(string));
    
            var certificate_valid_uptoParameter = certificate_valid_upto != null ?
                new ObjectParameter("Certificate_valid_upto", certificate_valid_upto) :
                new ObjectParameter("Certificate_valid_upto", typeof(string));
    
            var upload_Registration_CertificateParameter = upload_Registration_Certificate != null ?
                new ObjectParameter("Upload_Registration_Certificate", upload_Registration_Certificate) :
                new ObjectParameter("Upload_Registration_Certificate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VendorRegistrationMultiGridRegisNoDetails", vendorRefNoParameter, name_PSU_UnderGovtParameter, registrationNoParameter, certificate_valid_uptoParameter, upload_Registration_CertificateParameter);
        }
    
        public virtual int sp_VendorRegistrationMultiGridSourceRawMaterial(string vendorRefNo, string items, string basicRawMeterial, Nullable<long> sourceofMaterial, string major_Raw_Material_Suppliers)
        {
            var vendorRefNoParameter = vendorRefNo != null ?
                new ObjectParameter("VendorRefNo", vendorRefNo) :
                new ObjectParameter("VendorRefNo", typeof(string));
    
            var itemsParameter = items != null ?
                new ObjectParameter("Items", items) :
                new ObjectParameter("Items", typeof(string));
    
            var basicRawMeterialParameter = basicRawMeterial != null ?
                new ObjectParameter("BasicRawMeterial", basicRawMeterial) :
                new ObjectParameter("BasicRawMeterial", typeof(string));
    
            var sourceofMaterialParameter = sourceofMaterial.HasValue ?
                new ObjectParameter("SourceofMaterial", sourceofMaterial) :
                new ObjectParameter("SourceofMaterial", typeof(long));
    
            var major_Raw_Material_SuppliersParameter = major_Raw_Material_Suppliers != null ?
                new ObjectParameter("Major_Raw_Material_Suppliers", major_Raw_Material_Suppliers) :
                new ObjectParameter("Major_Raw_Material_Suppliers", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VendorRegistrationMultiGridSourceRawMaterial", vendorRefNoParameter, itemsParameter, basicRawMeterialParameter, sourceofMaterialParameter, major_Raw_Material_SuppliersParameter);
        }
    
        public virtual int sp_VendorRegistrationMultiGridTechnologyDetails(string vendorRefNo, string productNomenClature1, Nullable<long> technologyLevel1, Nullable<long> technologyLevel2, Nullable<long> technologyLevel3)
        {
            var vendorRefNoParameter = vendorRefNo != null ?
                new ObjectParameter("VendorRefNo", vendorRefNo) :
                new ObjectParameter("VendorRefNo", typeof(string));
    
            var productNomenClature1Parameter = productNomenClature1 != null ?
                new ObjectParameter("ProductNomenClature1", productNomenClature1) :
                new ObjectParameter("ProductNomenClature1", typeof(string));
    
            var technologyLevel1Parameter = technologyLevel1.HasValue ?
                new ObjectParameter("TechnologyLevel1", technologyLevel1) :
                new ObjectParameter("TechnologyLevel1", typeof(long));
    
            var technologyLevel2Parameter = technologyLevel2.HasValue ?
                new ObjectParameter("TechnologyLevel2", technologyLevel2) :
                new ObjectParameter("TechnologyLevel2", typeof(long));
    
            var technologyLevel3Parameter = technologyLevel3.HasValue ?
                new ObjectParameter("TechnologyLevel3", technologyLevel3) :
                new ObjectParameter("TechnologyLevel3", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VendorRegistrationMultiGridTechnologyDetails", vendorRefNoParameter, productNomenClature1Parameter, technologyLevel1Parameter, technologyLevel2Parameter, technologyLevel3Parameter);
        }
    
        public virtual int sp_VendorRegistrationMultiGridTestEquipment(Nullable<long> masterId, string vendorRefNo, string type_of_GAUGE_Test_Equipment, string test_Make, string least_Count, string range_of_MEASURMENT, string unit_of_MEASURMENT, string cERTIFICATION_YEAR, string year_of_purchase)
        {
            var masterIdParameter = masterId.HasValue ?
                new ObjectParameter("MasterId", masterId) :
                new ObjectParameter("MasterId", typeof(long));
    
            var vendorRefNoParameter = vendorRefNo != null ?
                new ObjectParameter("VendorRefNo", vendorRefNo) :
                new ObjectParameter("VendorRefNo", typeof(string));
    
            var type_of_GAUGE_Test_EquipmentParameter = type_of_GAUGE_Test_Equipment != null ?
                new ObjectParameter("Type_of_GAUGE_Test_Equipment", type_of_GAUGE_Test_Equipment) :
                new ObjectParameter("Type_of_GAUGE_Test_Equipment", typeof(string));
    
            var test_MakeParameter = test_Make != null ?
                new ObjectParameter("Test_Make", test_Make) :
                new ObjectParameter("Test_Make", typeof(string));
    
            var least_CountParameter = least_Count != null ?
                new ObjectParameter("Least_Count", least_Count) :
                new ObjectParameter("Least_Count", typeof(string));
    
            var range_of_MEASURMENTParameter = range_of_MEASURMENT != null ?
                new ObjectParameter("Range_of_MEASURMENT", range_of_MEASURMENT) :
                new ObjectParameter("Range_of_MEASURMENT", typeof(string));
    
            var unit_of_MEASURMENTParameter = unit_of_MEASURMENT != null ?
                new ObjectParameter("Unit_of_MEASURMENT", unit_of_MEASURMENT) :
                new ObjectParameter("Unit_of_MEASURMENT", typeof(string));
    
            var cERTIFICATION_YEARParameter = cERTIFICATION_YEAR != null ?
                new ObjectParameter("CERTIFICATION_YEAR", cERTIFICATION_YEAR) :
                new ObjectParameter("CERTIFICATION_YEAR", typeof(string));
    
            var year_of_purchaseParameter = year_of_purchase != null ?
                new ObjectParameter("Year_of_purchase", year_of_purchase) :
                new ObjectParameter("Year_of_purchase", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VendorRegistrationMultiGridTestEquipment", masterIdParameter, vendorRefNoParameter, type_of_GAUGE_Test_EquipmentParameter, test_MakeParameter, least_CountParameter, range_of_MEASURMENTParameter, unit_of_MEASURMENTParameter, cERTIFICATION_YEARParameter, year_of_purchaseParameter);
        }
    
        public virtual int sp_VendorRegistrationMultiTurnOver(string vendorRefNo, string financialYear, string currentAsset, string currentLiblities, string profitLoss, string balanceSheet)
        {
            var vendorRefNoParameter = vendorRefNo != null ?
                new ObjectParameter("VendorRefNo", vendorRefNo) :
                new ObjectParameter("VendorRefNo", typeof(string));
    
            var financialYearParameter = financialYear != null ?
                new ObjectParameter("FinancialYear", financialYear) :
                new ObjectParameter("FinancialYear", typeof(string));
    
            var currentAssetParameter = currentAsset != null ?
                new ObjectParameter("CurrentAsset", currentAsset) :
                new ObjectParameter("CurrentAsset", typeof(string));
    
            var currentLiblitiesParameter = currentLiblities != null ?
                new ObjectParameter("CurrentLiblities", currentLiblities) :
                new ObjectParameter("CurrentLiblities", typeof(string));
    
            var profitLossParameter = profitLoss != null ?
                new ObjectParameter("ProfitLoss", profitLoss) :
                new ObjectParameter("ProfitLoss", typeof(string));
    
            var balanceSheetParameter = balanceSheet != null ?
                new ObjectParameter("BalanceSheet", balanceSheet) :
                new ObjectParameter("BalanceSheet", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VendorRegistrationMultiTurnOver", vendorRefNoParameter, financialYearParameter, currentAssetParameter, currentLiblitiesParameter, profitLossParameter, balanceSheetParameter);
        }
    
        public virtual int sp_Verify_EmailIdandCompany(string emailId, string company, ObjectParameter lType)
        {
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Verify_EmailIdandCompany", emailIdParameter, companyParameter, lType);
        }
    
        public virtual int sp_Verify_HelpdeskLogin(string userName, string password, string brow, string ip, ObjectParameter companyRefNo, ObjectParameter lType, ObjectParameter defaultpage)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var browParameter = brow != null ?
                new ObjectParameter("Brow", brow) :
                new ObjectParameter("Brow", typeof(string));
    
            var ipParameter = ip != null ?
                new ObjectParameter("ip", ip) :
                new ObjectParameter("ip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Verify_HelpdeskLogin", userNameParameter, passwordParameter, browParameter, ipParameter, companyRefNo, lType, defaultpage);
        }
    
        public virtual int sp_verify_LogEmail(string userName, ObjectParameter salt, ObjectParameter password)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_verify_LogEmail", userNameParameter, salt, password);
        }
    
        public virtual int sp_Verify_Login(string userName, string password, ObjectParameter companyRefNo, ObjectParameter lType, ObjectParameter defaultpage)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Verify_Login", userNameParameter, passwordParameter, companyRefNo, lType, defaultpage);
        }
    
        public virtual int sp_Verify_VendorLogin(string userName, string password, ObjectParameter companyRefNo, ObjectParameter lType, ObjectParameter defaultpage, ObjectParameter companyName, ObjectParameter uName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Verify_VendorLogin", userNameParameter, passwordParameter, companyRefNo, lType, defaultpage, companyName, uName);
        }
    
        public virtual int StoreIPAddressDetail(string productRefNo, string iPAddress, Nullable<System.DateTime> visitedDate, Nullable<System.TimeSpan> visitedTime)
        {
            var productRefNoParameter = productRefNo != null ?
                new ObjectParameter("ProductRefNo", productRefNo) :
                new ObjectParameter("ProductRefNo", typeof(string));
    
            var iPAddressParameter = iPAddress != null ?
                new ObjectParameter("IPAddress", iPAddress) :
                new ObjectParameter("IPAddress", typeof(string));
    
            var visitedDateParameter = visitedDate.HasValue ?
                new ObjectParameter("VisitedDate", visitedDate) :
                new ObjectParameter("VisitedDate", typeof(System.DateTime));
    
            var visitedTimeParameter = visitedTime.HasValue ?
                new ObjectParameter("VisitedTime", visitedTime) :
                new ObjectParameter("VisitedTime", typeof(System.TimeSpan));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StoreIPAddressDetail", productRefNoParameter, iPAddressParameter, visitedDateParameter, visitedTimeParameter);
        }
    }
}
